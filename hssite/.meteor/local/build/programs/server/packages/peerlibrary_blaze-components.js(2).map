{"version":3,"sources":["meteor://ðŸ’»app/packages/peerlibrary_blaze-components/packages/peerlibrary_blaze-components.js"],"names":[],"mappingsfile":"/packages/peerlibrary_blaze-components.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// packages/peerlibrary:blaze-components/lookup.js                                                                 //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\n/* This file is a direct copy of Blaze lookup.js with modifications described                                      // 1\n   in this pull request: https://github.com/meteor/meteor/pull/4036                                                // 2\n                                                                                                                   // 3\n   TODO: Remove this file once the pull request is merged in.                                                      // 4\n */                                                                                                                // 5\n                                                                                                                   // 6\n// If `x` is a function, binds the value of `this` for that function                                               // 7\n// to the current data context.                                                                                    // 8\nvar bindDataContext = function (x) {                                                                               // 9\n  if (typeof x === 'function') {                                                                                   // 10\n    return function () {                                                                                           // 11\n      var data = Blaze.getData();                                                                                  // 12\n      if (data == null)                                                                                            // 13\n        data = {};                                                                                                 // 14\n      return x.apply(data, arguments);                                                                             // 15\n    };                                                                                                             // 16\n  }                                                                                                                // 17\n  return x;                                                                                                        // 18\n};                                                                                                                 // 19\n                                                                                                                   // 20\nBlaze._getTemplateHelper = function (template, name, templateInstance) {                                           // 21\n  // XXX COMPAT WITH 0.9.3                                                                                         // 22\n  var isKnownOldStyleHelper = false;                                                                               // 23\n                                                                                                                   // 24\n  if (template.__helpers.has(name)) {                                                                              // 25\n    var helper = template.__helpers.get(name);                                                                     // 26\n    if (helper === Blaze._OLDSTYLE_HELPER) {                                                                       // 27\n      isKnownOldStyleHelper = true;                                                                                // 28\n    } else if (helper != null) {                                                                                   // 29\n      return wrapHelper(bindDataContext(helper), templateInstance);                                                // 30\n    } else {                                                                                                       // 31\n      return null;                                                                                                 // 32\n    }                                                                                                              // 33\n  }                                                                                                                // 34\n                                                                                                                   // 35\n  // old-style helper                                                                                              // 36\n  if (name in template) {                                                                                          // 37\n    // Only warn once per helper                                                                                   // 38\n    if (! isKnownOldStyleHelper) {                                                                                 // 39\n      template.__helpers.set(name, Blaze._OLDSTYLE_HELPER);                                                        // 40\n      if (! template._NOWARN_OLDSTYLE_HELPERS) {                                                                   // 41\n        Blaze._warn('Assigning helper with `' + template.viewName + '.' +                                          // 42\n                    name + ' = ...` is deprecated.  Use `' + template.viewName +                                   // 43\n                    '.helpers(...)` instead.');                                                                    // 44\n      }                                                                                                            // 45\n    }                                                                                                              // 46\n    if (template[name] != null) {                                                                                  // 47\n      return wrapHelper(bindDataContext(template[name]), templateInstance);                                        // 48\n    }                                                                                                              // 49\n  }                                                                                                                // 50\n                                                                                                                   // 51\n  return null;                                                                                                     // 52\n};                                                                                                                 // 53\n                                                                                                                   // 54\nvar wrapHelper = function (f, templateFunc) {                                                                      // 55\n  // XXX COMPAT WITH METEOR 1.0.3.2                                                                                // 56\n  if (! Blaze.Template._withTemplateInstanceFunc) {                                                                // 57\n    return Blaze._wrapCatchingExceptions(f, 'template helper');                                                    // 58\n  }                                                                                                                // 59\n                                                                                                                   // 60\n  if (typeof f !== \"function\") {                                                                                   // 61\n    return f;                                                                                                      // 62\n  }                                                                                                                // 63\n                                                                                                                   // 64\n  return function () {                                                                                             // 65\n    var self = this;                                                                                               // 66\n    var args = arguments;                                                                                          // 67\n                                                                                                                   // 68\n    return Blaze.Template._withTemplateInstanceFunc(templateFunc, function () {                                    // 69\n      return Blaze._wrapCatchingExceptions(f, 'template helper').apply(self, args);                                // 70\n    });                                                                                                            // 71\n  };                                                                                                               // 72\n};                                                                                                                 // 73\n                                                                                                                   // 74\n// templateInstance argument is provided to be available for possible                                              // 75\n// alternative implementations of this function by 3rd party packages.                                             // 76\nBlaze._getTemplate = function (name, templateInstance) {                                                           // 77\n  if ((name in Blaze.Template) && (Blaze.Template[name] instanceof Blaze.Template)) {                              // 78\n    return Blaze.Template[name];                                                                                   // 79\n  }                                                                                                                // 80\n  return null;                                                                                                     // 81\n};                                                                                                                 // 82\n                                                                                                                   // 83\nBlaze.View.prototype.lookup = function (name, _options) {                                                          // 84\n  var template = this.template;                                                                                    // 85\n  var lookupTemplate = _options && _options.template;                                                              // 86\n  var helper;                                                                                                      // 87\n  var boundTmplInstance;                                                                                           // 88\n  var foundTemplate;                                                                                               // 89\n                                                                                                                   // 90\n  if (this.templateInstance) {                                                                                     // 91\n    boundTmplInstance = _.bind(this.templateInstance, this);                                                       // 92\n  }                                                                                                                // 93\n                                                                                                                   // 94\n  if (/^\\./.test(name)) {                                                                                          // 95\n    // starts with a dot. must be a series of dots which maps to an                                                // 96\n    // ancestor of the appropriate height.                                                                         // 97\n    if (!/^(\\.)+$/.test(name))                                                                                     // 98\n      throw new Error(\"id starting with dot must be a series of dots\");                                            // 99\n                                                                                                                   // 100\n    return Blaze._parentData(name.length - 1, true /*_functionWrapped*/);                                          // 101\n                                                                                                                   // 102\n  } else if (template &&                                                                                           // 103\n             ((helper = Blaze._getTemplateHelper(template, name, boundTmplInstance)) != null)) {                   // 104\n    return helper;                                                                                                 // 105\n  } else if (lookupTemplate &&                                                                                     // 106\n             ((foundTemplate = Blaze._getTemplate(name, boundTmplInstance)) != null)) {                            // 107\n    return foundTemplate;                                                                                          // 108\n  } else if (Blaze._globalHelpers[name] != null) {                                                                 // 109\n    return wrapHelper(bindDataContext(Blaze._globalHelpers[name]),                                                 // 110\n      boundTmplInstance);                                                                                          // 111\n  } else {                                                                                                         // 112\n    return function () {                                                                                           // 113\n      var isCalledAsFunction = (arguments.length > 0);                                                             // 114\n      var data = Blaze.getData();                                                                                  // 115\n      if (lookupTemplate && ! (data && data[name])) {                                                              // 116\n        throw new Error(\"No such template: \" + name);                                                              // 117\n      }                                                                                                            // 118\n      if (isCalledAsFunction && ! (data && data[name])) {                                                          // 119\n        throw new Error(\"No such function: \" + name);                                                              // 120\n      }                                                                                                            // 121\n      if (! data)                                                                                                  // 122\n        return null;                                                                                               // 123\n      var x = data[name];                                                                                          // 124\n      if (typeof x !== 'function') {                                                                               // 125\n        if (isCalledAsFunction) {                                                                                  // 126\n          throw new Error(\"Can't call non-function: \" + x);                                                        // 127\n        }                                                                                                          // 128\n        return x;                                                                                                  // 129\n      }                                                                                                            // 130\n      return x.apply(data, arguments);                                                                             // 131\n    };                                                                                                             // 132\n  }                                                                                                                // 133\n  return null;                                                                                                     // 134\n};                                                                                                                 // 135\n                                                                                                                   // 136\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// packages/peerlibrary:blaze-components/lib.coffee.js                                                             //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ComponentsNamespaceReference, addEvents, bindComponent, bindDataContext, getTemplateInstance, getTemplateInstanceFunction, method, methodName, originalDot, originalGetTemplate, originalInclude, registerFirstCreatedHook, registerHooks, templateInstanceToComponent, wrapHelper, _fn, _ref,                \n  __slice = [].slice,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\ngetTemplateInstance = function(view) {\n  while (view && !view._templateInstance) {\n    view = view.parentView;\n  }\n  return view != null ? view._templateInstance : void 0;\n};\n\ntemplateInstanceToComponent = function(templateInstanceFunc) {\n  var templateInstance;\n  templateInstance = typeof templateInstanceFunc === \"function\" ? templateInstanceFunc() : void 0;\n  templateInstance = getTemplateInstance(templateInstance != null ? templateInstance.view : void 0);\n  while (templateInstance) {\n    if ('component' in templateInstance) {\n      return templateInstance.component;\n    }\n    templateInstance = getTemplateInstance(templateInstance.view.parentView);\n  }\n  return null;\n};\n\ngetTemplateInstanceFunction = function(view) {\n  var templateInstance;\n  templateInstance = getTemplateInstance(view);\n  return function() {\n    return templateInstance;\n  };\n};\n\nComponentsNamespaceReference = (function() {\n  function ComponentsNamespaceReference(namespace, templateInstance) {\n    this.namespace = namespace;\n    this.templateInstance = templateInstance;\n  }\n\n  return ComponentsNamespaceReference;\n\n})();\n\noriginalDot = Spacebars.dot;\n\nSpacebars.dot = function() {\n  var args, value;\n  value = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n  if (value instanceof ComponentsNamespaceReference) {\n    return Blaze._getTemplate(\"\" + value.namespace + \".\" + (args.join('.')), value.templateInstance);\n  }\n  return originalDot.apply(null, [value].concat(__slice.call(args)));\n};\n\noriginalInclude = Spacebars.include;\n\nSpacebars.include = function() {\n  var args, templateOrFunction;\n  templateOrFunction = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n  if (templateOrFunction instanceof ComponentsNamespaceReference) {\n    templateOrFunction = Blaze._getTemplate(templateOrFunction.namespace, templateOrFunction.templateInstance);\n  }\n  return originalInclude.apply(null, [templateOrFunction].concat(__slice.call(args)));\n};\n\nBlaze._getTemplateHelper = function(template, name, templateInstance) {\n  var component, helper, isKnownOldStyleHelper, mixinOrComponent, _ref;\n  isKnownOldStyleHelper = false;\n  if (template.__helpers.has(name)) {\n    helper = template.__helpers.get(name);\n    if (helper === Blaze._OLDSTYLE_HELPER) {\n      isKnownOldStyleHelper = true;\n    } else if (helper != null) {\n      return wrapHelper(bindDataContext(helper), templateInstance);\n    } else {\n      return null;\n    }\n  }\n  if (name in template) {\n    if (!isKnownOldStyleHelper) {\n      template.__helpers.set(name, Blaze._OLDSTYLE_HELPER);\n      if (!template._NOWARN_OLDSTYLE_HELPERS) {\n        Blaze._warn(\"Assigning helper with `\" + template.viewName + \".\" + name + \" = ...` is deprecated.  Use `\" + template.viewName + \".helpers(...)` instead.\");\n      }\n    }\n    if (template[name] != null) {\n      return wrapHelper(bindDataContext(template[name]), templateInstance);\n    } else {\n      return null;\n    }\n  }\n  if (!templateInstance) {\n    return null;\n  }\n  if ((_ref = template.viewName) === 'Template.__dynamicWithDataContext' || _ref === 'Template.__dynamic') {\n    return null;\n  }\n  component = Tracker.nonreactive(function() {\n    return templateInstanceToComponent(templateInstance);\n  });\n  if (component) {\n    if (mixinOrComponent = component.getFirstWith(null, name)) {\n      return wrapHelper(bindComponent(mixinOrComponent, mixinOrComponent[name]), templateInstance);\n    }\n  }\n  if (name && name in BlazeComponent.components) {\n    return new ComponentsNamespaceReference(name, templateInstance);\n  }\n  return null;\n};\n\nbindComponent = function(component, helper) {\n  if (_.isFunction(helper)) {\n    return _.bind(helper, component);\n  } else {\n    return helper;\n  }\n};\n\nbindDataContext = function(helper) {\n  if (_.isFunction(helper)) {\n    return function() {\n      var data;\n      data = Blaze.getData();\n      if (data == null) {\n        data = {};\n      }\n      return helper.apply(data, arguments);\n    };\n  } else {\n    return helper;\n  }\n};\n\nwrapHelper = function(f, templateFunc) {\n  if (!Blaze.Template._withTemplateInstanceFunc) {\n    return Blaze._wrapCatchingExceptions(f, 'template helper');\n  }\n  if (!_.isFunction(f)) {\n    return f;\n  }\n  return function() {\n    var args, self;\n    self = this;\n    args = arguments;\n    return Blaze.Template._withTemplateInstanceFunc(templateFunc, function() {\n      return Blaze._wrapCatchingExceptions(f, 'template helper').apply(self, args);\n    });\n  };\n};\n\naddEvents = function(view, component) {\n  var eventMap, events, eventsList, handler, spec, _fn, _i, _len;\n  eventsList = component.events();\n  if (!_.isArray(eventsList)) {\n    throw new Error(\"'events' method from the component '\" + (component.componentName() || 'unnamed') + \"' did not return a list of event maps.\");\n  }\n  for (_i = 0, _len = eventsList.length; _i < _len; _i++) {\n    events = eventsList[_i];\n    eventMap = {};\n    _fn = function(spec, handler) {\n      return eventMap[spec] = function() {\n        var args, currentView, event, templateInstance, withTemplateInstanceFunc;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        event = args[0];\n        currentView = Blaze.getView(event.currentTarget);\n        templateInstance = getTemplateInstanceFunction(currentView);\n        if (Template._withTemplateInstanceFunc) {\n          withTemplateInstanceFunc = Template._withTemplateInstanceFunc;\n        } else {\n          withTemplateInstanceFunc = function(templateInstance, f) {\n            return f();\n          };\n        }\n        withTemplateInstanceFunc(templateInstance, function() {\n          return Blaze._withCurrentView(currentView, function() {\n            return handler.apply(component, args);\n          });\n        });\n      };\n    };\n    for (spec in events) {\n      handler = events[spec];\n      _fn(spec, handler);\n    }\n    Blaze._addEventMap(view, eventMap);\n  }\n};\n\noriginalGetTemplate = Blaze._getTemplate;\n\nBlaze._getTemplate = function(name, templateInstance) {\n  var template;\n  template = Tracker.nonreactive(function() {\n    var componentParent, _ref;\n    componentParent = templateInstanceToComponent(templateInstance);\n    return (_ref = BlazeComponent.getComponent(name)) != null ? _ref.renderComponent(componentParent) : void 0;\n  });\n  if (template && (template instanceof Blaze.Template || _.isFunction(template))) {\n    return template;\n  }\n  return originalGetTemplate(name);\n};\n\nregisterHooks = function(template, hooks) {\n  if (template.onCreated) {\n    template.onCreated(hooks.onCreated);\n    template.onRendered(hooks.onRendered);\n    return template.onDestroyed(hooks.onDestroyed);\n  } else {\n    template.created = hooks.onCreated;\n    template.rendered = hooks.onRendered;\n    return template.destroyed = hooks.onDestroyed;\n  }\n};\n\nregisterFirstCreatedHook = function(template, onCreated) {\n  var oldCreated;\n  if (template._callbacks) {\n    return template._callbacks.created.unshift(onCreated);\n  } else {\n    oldCreated = template.created;\n    return template.created = function() {\n      onCreated.call(this);\n      return oldCreated != null ? oldCreated.call(this) : void 0;\n    };\n  }\n};\n\nBlazeComponent = (function(_super) {\n  __extends(BlazeComponent, _super);\n\n  function BlazeComponent() {\n    return BlazeComponent.__super__.constructor.apply(this, arguments);\n  }\n\n  BlazeComponent.getComponentForElement = function(domElement) {\n    if (!domElement) {\n      return null;\n    }\n    if (domElement.nodeType !== Node.ELEMENT_NODE) {\n      throw new Error(\"Expected DOM element.\");\n    }\n    return templateInstanceToComponent((function(_this) {\n      return function() {\n        return getTemplateInstance(Blaze.getView(domElement));\n      };\n    })(this));\n  };\n\n  BlazeComponent.prototype.mixins = function() {\n    return [];\n  };\n\n  BlazeComponent.prototype.mixinParent = function(mixinParent) {\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if (mixinParent) {\n      this._componentInternals.mixinParent = mixinParent;\n      return this;\n    }\n    return this._componentInternals.mixinParent || null;\n  };\n\n  BlazeComponent.prototype.requireMixin = function(nameOrMixin) {\n    var mixinInstance, mixinInstanceComponent, _ref, _ref1, _ref2, _ref3;\n    assert((_ref = this._componentInternals) != null ? _ref.mixins : void 0);\n    if (this.getMixin(nameOrMixin)) {\n      return this;\n    }\n    if (_.isString(nameOrMixin)) {\n      if (this.constructor.getComponent) {\n        mixinInstanceComponent = this.constructor.getComponent(nameOrMixin);\n      } else {\n        mixinInstanceComponent = BlazeComponent.getComponent(nameOrMixin);\n      }\n      if (!mixinInstanceComponent) {\n        throw new Error(\"Unknown mixin '\" + nameOrMixin + \"'.\");\n      }\n      mixinInstance = new mixinInstanceComponent();\n    } else if (_.isFunction(nameOrMixin)) {\n      mixinInstance = new nameOrMixin();\n    } else {\n      mixinInstance = nameOrMixin;\n    }\n    this._componentInternals.mixins.push(mixinInstance);\n    if (mixinInstance.mixinParent) {\n      mixinInstance.mixinParent(this);\n      assert.equal(mixinInstance.mixinParent(), this);\n    }\n    if (typeof mixinInstance.createMixins === \"function\") {\n      mixinInstance.createMixins();\n    }\n    if (!((_ref1 = this._componentInternals.templateInstance) != null ? _ref1.view.isDestroyed : void 0)) {\n      if (!this._componentInternals.inOnCreated && ((_ref2 = this._componentInternals.templateInstance) != null ? _ref2.view.isCreated : void 0)) {\n        if (typeof mixinInstance.onCreated === \"function\") {\n          mixinInstance.onCreated();\n        }\n      }\n      if (!this._componentInternals.inOnRendered && ((_ref3 = this._componentInternals.templateInstance) != null ? _ref3.view.isRendered : void 0)) {\n        if (typeof mixinInstance.onRendered === \"function\") {\n          mixinInstance.onRendered();\n        }\n      }\n    }\n    return this;\n  };\n\n  BlazeComponent.prototype.createMixins = function() {\n    var mixin, _i, _len, _ref;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if (this._componentInternals.mixins) {\n      return;\n    }\n    this._componentInternals.mixins = [];\n    _ref = this.mixins();\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      mixin = _ref[_i];\n      this.requireMixin(mixin);\n    }\n    return this;\n  };\n\n  BlazeComponent.prototype.getMixin = function(nameOrMixin) {\n    var mixin, mixinComponentName, _i, _j, _len, _len1, _ref, _ref1, _ref2;\n    assert((_ref = this._componentInternals) != null ? _ref.mixins : void 0);\n    if (_.isString(nameOrMixin)) {\n      _ref1 = this._componentInternals.mixins;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        mixin = _ref1[_i];\n        mixinComponentName = (typeof mixin.componentName === \"function\" ? mixin.componentName() : void 0) || null;\n        if (mixinComponentName && mixinComponentName === nameOrMixin) {\n          return mixin;\n        }\n      }\n    } else {\n      _ref2 = this._componentInternals.mixins;\n      for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {\n        mixin = _ref2[_j];\n        if (mixin.constructor === nameOrMixin) {\n          return mixin;\n        } else if (mixin === nameOrMixin) {\n          return mixin;\n        }\n      }\n    }\n    return null;\n  };\n\n  BlazeComponent.prototype.callFirstWith = function() {\n    var afterComponentOrMixin, args, mixin, propertyName;\n    afterComponentOrMixin = arguments[0], propertyName = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];\n    mixin = this.getFirstWith(afterComponentOrMixin, propertyName);\n    if (!mixin) {\n      return;\n    }\n    if (_.isFunction(mixin[propertyName])) {\n      return mixin[propertyName].apply(mixin, args);\n    } else {\n      return mixin[propertyName];\n    }\n  };\n\n  BlazeComponent.prototype.getFirstWith = function(afterComponentOrMixin, propertyName) {\n    var found, mixin, _i, _len, _ref, _ref1;\n    assert((_ref = this._componentInternals) != null ? _ref.mixins : void 0);\n    if (!afterComponentOrMixin) {\n      if (propertyName in this) {\n        return this;\n      }\n      found = true;\n    } else if (afterComponentOrMixin && afterComponentOrMixin === this) {\n      found = true;\n    } else {\n      found = false;\n    }\n    _ref1 = this._componentInternals.mixins;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      mixin = _ref1[_i];\n      if (found && propertyName in mixin) {\n        return mixin;\n      }\n      if (mixin === afterComponentOrMixin) {\n        found = true;\n      }\n    }\n    return null;\n  };\n\n  BlazeComponent.renderComponent = function(componentParent) {\n    return Tracker.nonreactive((function(_this) {\n      return function() {\n        var component, componentClass, data, error;\n        componentClass = _this;\n        try {\n          data = Template.currentData();\n        } catch (_error) {\n          error = _error;\n          data = null;\n        }\n        if ((data != null ? data.constructor : void 0) !== share.argumentsConstructor) {\n          component = new componentClass();\n          return component.renderComponent(componentParent);\n        }\n        return function() {\n          var currentWith, reactiveArguments, template;\n          currentWith = Blaze.getView('with');\n          reactiveArguments = new ReactiveVar([], EJSON.equals);\n          assert(Tracker.active);\n          Tracker.autorun(function(computation) {\n            data = currentWith.dataVar.get();\n            assert.equal(data != null ? data.constructor : void 0, share.argumentsConstructor);\n            return reactiveArguments.set(data._arguments);\n          });\n          component = (function(func, args, ctor) {\n            ctor.prototype = func.prototype;\n            var child = new ctor, result = func.apply(child, args);\n            return Object(result) === result ? result : child;\n          })(componentClass, reactiveArguments.get(), function(){});\n          template = component.renderComponent(componentParent);\n          registerFirstCreatedHook(template, function() {\n            this.view.originalParentView = this.view.parentView;\n            return this.view.parentView = this.view.parentView.parentView.parentView;\n          });\n          return template;\n        };\n      };\n    })(this));\n  };\n\n  BlazeComponent.prototype.renderComponent = function(componentParent) {\n    return Tracker.nonreactive((function(_this) {\n      return function() {\n        var component, componentTemplate, template, templateBase, _base;\n        component = _this;\n        component.createMixins();\n        componentTemplate = component.template();\n        if (_.isString(componentTemplate)) {\n          templateBase = Template[componentTemplate];\n          if (!templateBase) {\n            throw new Error(\"Template '\" + componentTemplate + \"' cannot be found.\");\n          }\n        } else if (componentTemplate) {\n          templateBase = componentTemplate;\n        } else {\n          throw new Error(\"Template for the component '\" + (component.componentName() || 'unnamed') + \"' not provided.\");\n        }\n        template = new Blaze.Template(\"BlazeComponent.\" + (component.componentName() || 'unnamed'), templateBase.renderFunction);\n        if ((_base = _this.component)._componentInternals == null) {\n          _base._componentInternals = {};\n        }\n        registerHooks(template, {\n          onCreated: function() {\n            var componentOrMixin, _base1, _base2, _base3;\n            if (componentParent) {\n              Tracker.nonreactive((function(_this) {\n                return function() {\n                  assert(!component.componentParent());\n                  component.componentParent(componentParent);\n                  return componentParent.addComponentChild(component);\n                };\n              })(this));\n            }\n            this.view._onViewRendered((function(_this) {\n              return function() {\n                var componentOrMixin, _results;\n                if (_this.view.renderCount !== 1) {\n                  return;\n                }\n                componentOrMixin = null;\n                _results = [];\n                while (componentOrMixin = _this.component.getFirstWith(componentOrMixin, 'events')) {\n                  _results.push(addEvents(_this.view, componentOrMixin));\n                }\n                return _results;\n              };\n            })(this));\n            this.component = component;\n            assert(!this.component._componentInternals.templateInstance);\n            this.component._componentInternals.templateInstance = this;\n            try {\n              this.component._componentInternals.inOnCreated = true;\n              componentOrMixin = null;\n              while (componentOrMixin = this.component.getFirstWith(componentOrMixin, 'onCreated')) {\n                componentOrMixin.onCreated();\n              }\n            } finally {\n              delete this.component._componentInternals.inOnCreated;\n            }\n            if ((_base1 = this.component._componentInternals).isCreated == null) {\n              _base1.isCreated = new ReactiveVar(true);\n            }\n            this.component._componentInternals.isCreated.set(true);\n            if ((_base2 = this.component._componentInternals).isRendered == null) {\n              _base2.isRendered = new ReactiveVar(false);\n            }\n            this.component._componentInternals.isRendered.set(false);\n            if ((_base3 = this.component._componentInternals).isDestroyed == null) {\n              _base3.isDestroyed = new ReactiveVar(false);\n            }\n            return this.component._componentInternals.isDestroyed.set(false);\n          },\n          onRendered: function() {\n            var componentOrMixin, _base1;\n            try {\n              this.component._componentInternals.inOnRendered = true;\n              componentOrMixin = null;\n              while (componentOrMixin = this.component.getFirstWith(componentOrMixin, 'onRendered')) {\n                componentOrMixin.onRendered();\n              }\n            } finally {\n              delete this.component._componentInternals.inOnRendered;\n            }\n            if ((_base1 = this.component._componentInternals).isRendered == null) {\n              _base1.isRendered = new ReactiveVar(true);\n            }\n            this.component._componentInternals.isRendered.set(true);\n            return Tracker.nonreactive((function(_this) {\n              return function() {\n                return assert.equal(_this.component._componentInternals.isCreated.get(), true);\n              };\n            })(this));\n          },\n          onDestroyed: function() {\n            return this.autorun((function(_this) {\n              return function(computation) {\n                var componentOrMixin, _base1, _base2;\n                if (_this.component.componentChildren().length) {\n                  return;\n                }\n                computation.stop();\n                Tracker.nonreactive(function() {\n                  return assert.equal(_this.component._componentInternals.isCreated.get(), true);\n                });\n                _this.component._componentInternals.isCreated.set(false);\n                if ((_base1 = _this.component._componentInternals).isRendered == null) {\n                  _base1.isRendered = new ReactiveVar(false);\n                }\n                _this.component._componentInternals.isRendered.set(false);\n                if ((_base2 = _this.component._componentInternals).isDestroyed == null) {\n                  _base2.isDestroyed = new ReactiveVar(true);\n                }\n                _this.component._componentInternals.isDestroyed.set(true);\n                componentOrMixin = null;\n                while (componentOrMixin = _this.component.getFirstWith(componentOrMixin, 'onDestroyed')) {\n                  componentOrMixin.onDestroyed();\n                }\n                if (componentParent) {\n                  component.componentParent(null);\n                  componentParent.removeComponentChild(component);\n                }\n                return delete _this.component._componentInternals.templateInstance;\n              };\n            })(this));\n          }\n        });\n        return template;\n      };\n    })(this));\n  };\n\n  BlazeComponent.prototype.template = function() {\n    return this.callFirstWith(this, 'template') || this.constructor.componentName();\n  };\n\n  BlazeComponent.prototype.onCreated = function() {};\n\n  BlazeComponent.prototype.onRendered = function() {};\n\n  BlazeComponent.prototype.onDestroyed = function() {};\n\n  BlazeComponent.prototype.isCreated = function() {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).isCreated == null) {\n      _base.isCreated = new ReactiveVar(false);\n    }\n    return this._componentInternals.isCreated.get();\n  };\n\n  BlazeComponent.prototype.isRendered = function() {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).isRendered == null) {\n      _base.isRendered = new ReactiveVar(false);\n    }\n    return this._componentInternals.isRendered.get();\n  };\n\n  BlazeComponent.prototype.isDestroyed = function() {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).isDestroyed == null) {\n      _base.isDestroyed = new ReactiveVar(false);\n    }\n    return this._componentInternals.isDestroyed.get();\n  };\n\n  BlazeComponent.prototype.insertDOMElement = function(parent, node, before) {\n    if (before == null) {\n      before = null;\n    }\n    if (parent && node && (node.parentNode !== parent || node.nextSibling !== before)) {\n      parent.insertBefore(node, before);\n    }\n  };\n\n  BlazeComponent.prototype.moveDOMElement = function(parent, node, before) {\n    if (before == null) {\n      before = null;\n    }\n    if (parent && node && (node.parentNode !== parent || node.nextSibling !== before)) {\n      parent.insertBefore(node, before);\n    }\n  };\n\n  BlazeComponent.prototype.removeDOMElement = function(parent, node) {\n    if (parent && node && node.parentNode === parent) {\n      parent.removeChild(node);\n    }\n  };\n\n  BlazeComponent.prototype.events = function() {\n    return [];\n  };\n\n  BlazeComponent.prototype.data = function() {\n    var _ref, _ref1;\n    if ((_ref = this._componentInternals) != null ? (_ref1 = _ref.templateInstance) != null ? _ref1.view : void 0 : void 0) {\n      return Blaze.getData(this._componentInternals.templateInstance.view);\n    }\n    return void 0;\n  };\n\n  BlazeComponent.currentData = function() {\n    return Blaze.getData();\n  };\n\n  BlazeComponent.prototype.currentData = function() {\n    return this.constructor.currentData();\n  };\n\n  BlazeComponent.prototype.component = function() {\n    return this;\n  };\n\n  BlazeComponent.currentComponent = function() {\n    return Tracker.nonreactive((function(_this) {\n      return function() {\n        return templateInstanceToComponent(Template.instance);\n      };\n    })(this));\n  };\n\n  BlazeComponent.prototype.currentComponent = function() {\n    return this.constructor.currentComponent();\n  };\n\n  BlazeComponent.prototype.firstNode = function() {\n    var view;\n    view = this._componentInternals.templateInstance.view;\n    if (view._domrange && !view.isDestroyed) {\n      return view._domrange.firstNode();\n    } else {\n      return null;\n    }\n  };\n\n  BlazeComponent.prototype.lastNode = function() {\n    var view;\n    view = this._componentInternals.templateInstance.view;\n    if (view._domrange && !view.isDestroyed) {\n      return view._domrange.lastNode();\n    } else {\n      return null;\n    }\n  };\n\n  return BlazeComponent;\n\n})(BaseComponent);\n\n_ref = Blaze.TemplateInstance.prototype;\n_fn = function(methodName, method) {\n  return BlazeComponent.prototype[methodName] = function() {\n    var args, _ref1;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    return (_ref1 = this._componentInternals.templateInstance)[methodName].apply(_ref1, args);\n  };\n};\nfor (methodName in _ref) {\n  method = _ref[methodName];\n  _fn(methodName, method);\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// packages/peerlibrary:blaze-components/debug.coffee.js                                                           //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar                     \n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nBlazeComponentDebug = (function(_super) {\n  __extends(BlazeComponentDebug, _super);\n\n  function BlazeComponentDebug() {\n    return BlazeComponentDebug.__super__.constructor.apply(this, arguments);\n  }\n\n  BlazeComponentDebug.startComponent = function(component) {\n    BlazeComponentDebug.__super__.constructor.startComponent.apply(this, arguments);\n    return console.log(component.data());\n  };\n\n  BlazeComponentDebug.startMarkedComponent = function(component) {\n    BlazeComponentDebug.__super__.constructor.startMarkedComponent.apply(this, arguments);\n    return console.log(component.data());\n  };\n\n  BlazeComponentDebug.dumpComponentSubtree = function(rootComponentOrElement) {\n    if (rootComponentOrElement.nodeType === Node.ELEMENT_NODE) {\n      rootComponentOrElement = BlazeComponent.getComponentForElement(rootComponentOrElement);\n    }\n    return BlazeComponentDebug.__super__.constructor.dumpComponentSubtree.apply(this, arguments);\n  };\n\n  BlazeComponentDebug.dumpComponentTree = function(rootComponentOrElement) {\n    if (rootComponentOrElement.nodeType === Node.ELEMENT_NODE) {\n      rootComponentOrElement = BlazeComponent.getComponentForElement(rootComponentOrElement);\n    }\n    return BlazeComponentDebug.__super__.constructor.dumpComponentTree.apply(this, arguments);\n  };\n\n  BlazeComponentDebug.dumpAllComponents = function() {\n    var allRootComponents, rootComponent, _i, _len;\n    allRootComponents = [];\n    $('*').each((function(_this) {\n      return function(i, element) {\n        var component, rootComponent;\n        component = BlazeComponent.getComponentForElement(element);\n        if (!component) {\n          return;\n        }\n        rootComponent = _this.componentRoot(component);\n        if (__indexOf.call(allRootComponents, rootComponent) < 0) {\n          return allRootComponents.push(rootComponent);\n        }\n      };\n    })(this));\n    for (_i = 0, _len = allRootComponents.length; _i < _len; _i++) {\n      rootComponent = allRootComponents[_i];\n      this.dumpComponentSubtree(rootComponent);\n    }\n  };\n\n  return BlazeComponentDebug;\n\n})(BaseComponentDebug);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}