{"version":3,"sources":["meteor://ðŸ’»app/packages/peerlibrary_base-component/packages/peerlibrary_base-component.js"],"names":[],"mappingsyH","file":"/packages/peerlibrary_base-component.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/peerlibrary:base-component/lib.coffee.js                                                            //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ComponentsNamespace, arrayReferenceEquals, createNamespace, getComponent, getNamespace, getPathAndName, isolateValue, setComponent,               \n  __hasProp = {}.hasOwnProperty;\n\narrayReferenceEquals = function(a, b) {\n  var i, _i, _ref;\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (i = _i = 0, _ref = a.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nisolateValue = function(fn) {\n  var dependency, lastValue;\n  if (!Tracker.active) {\n    return fn();\n  }\n  lastValue = null;\n  dependency = new Tracker.Dependency();\n  Tracker.autorun(function(computation) {\n    var value;\n    value = fn();\n    if (computation.firstRun) {\n      return lastValue = value;\n    } else {\n      if (!arrayReferenceEquals(value, lastValue)) {\n        return dependency.changed();\n      }\n    }\n  });\n  dependency.depend();\n  return lastValue;\n};\n\nComponentsNamespace = (function() {\n  function ComponentsNamespace() {}\n\n  ComponentsNamespace.COMPONENTS_FIELD = '';\n\n  return ComponentsNamespace;\n\n})();\n\ngetPathAndName = function(name) {\n  var path;\n  assert(name);\n  path = name.split('.');\n  name = path.pop();\n  assert(name);\n  return {\n    path: path,\n    name: name\n  };\n};\n\ngetNamespace = function(components, path) {\n  var match, segment;\n  assert(_.isObject(components));\n  assert(_.isArray(path));\n  match = components;\n  while ((segment = path.shift()) != null) {\n    match = match[segment];\n    if (!_.isObject(match)) {\n      return null;\n    }\n  }\n  if (!_.isObject(match)) {\n    return null;\n  }\n  return match || null;\n};\n\ncreateNamespace = function(components, path) {\n  var match, segment;\n  assert(_.isObject(components));\n  assert(_.isArray(path));\n  match = components;\n  while ((segment = path.shift()) != null) {\n    if (!(segment in match)) {\n      match[segment] = new components.constructor();\n    }\n    match = match[segment];\n    assert(_.isObject(match));\n  }\n  assert(_.isObject(match));\n  return match;\n};\n\ngetComponent = function(components, name) {\n  var namespace, path, _ref, _ref1;\n  assert(_.isObject(components));\n  if (!name) {\n    return null;\n  }\n  _ref = getPathAndName(name), path = _ref.path, name = _ref.name;\n  namespace = getNamespace(components, path);\n  if (!namespace) {\n    return null;\n  }\n  return ((_ref1 = namespace[components.constructor.COMPONENTS_FIELD]) != null ? _ref1[name] : void 0) || null;\n};\n\nsetComponent = function(components, name, component) {\n  var namespace, path, _name, _ref;\n  assert(_.isObject(components));\n  assert(name);\n  assert(component);\n  _ref = getPathAndName(name), path = _ref.path, name = _ref.name;\n  namespace = createNamespace(components, path);\n  if (namespace[_name = components.constructor.COMPONENTS_FIELD] == null) {\n    namespace[_name] = new components.constructor();\n  }\n  assert(!(name in namespace[components.constructor.COMPONENTS_FIELD]));\n  return namespace[components.constructor.COMPONENTS_FIELD][name] = component;\n};\n\nBaseComponent = (function() {\n  function BaseComponent() {}\n\n  BaseComponent.components = new ComponentsNamespace();\n\n  BaseComponent.register = function(componentName, componentClass) {\n    if (!componentName) {\n      throw new Error(\"Component name is required for registration.\");\n    }\n    if (componentClass == null) {\n      componentClass = this;\n    }\n    if (getComponent(this.components, componentName)) {\n      throw new Error(\"Component '\" + componentName + \"' already registered.\");\n    }\n    if (componentClass.componentName() && componentClass.componentName() !== componentName && getComponent(this.components, componentClass.componentName()) === componentClass) {\n      throw new Error(\"Component '\" + componentName + \"' already registered under the name '\" + (componentClass.componentName()) + \"'.\");\n    }\n    componentClass.componentName(componentName);\n    assert.equal(componentClass.componentName(), componentName);\n    setComponent(this.components, componentName, componentClass);\n    return this;\n  };\n\n  BaseComponent.getComponent = function(componentsNamespace, componentName) {\n    if (!componentName) {\n      componentName = componentsNamespace;\n      componentsNamespace = this.components;\n    }\n    if (!componentName) {\n      return null;\n    }\n    if (!_.isString(componentName)) {\n      throw new Error(\"Component name '\" + componentName + \"' is not a string.\");\n    }\n    return getComponent(componentsNamespace, componentName);\n  };\n\n  BaseComponent.componentName = function(componentName) {\n    if (componentName) {\n      this._componentName = componentName;\n      return this;\n    }\n    return this._componentName || null;\n  };\n\n  BaseComponent.prototype.componentName = function() {\n    return this.constructor.componentName();\n  };\n\n  BaseComponent.prototype.componentChildren = function(nameOrComponent) {\n    var child, _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).componentChildren == null) {\n      _base.componentChildren = new ReactiveVar([], arrayReferenceEquals);\n    }\n    if (!nameOrComponent) {\n      return (function() {\n        var _i, _len, _ref, _results;\n        _ref = this._componentInternals.componentChildren.get();\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          _results.push(child);\n        }\n        return _results;\n      }).call(this);\n    }\n    if (_.isString(nameOrComponent)) {\n      return this.componentChildrenWith((function(_this) {\n        return function(child, parent) {\n          return child.componentName() === nameOrComponent;\n        };\n      })(this));\n    } else {\n      return this.componentChildrenWith((function(_this) {\n        return function(child, parent) {\n          if (child.constructor === nameOrComponent) {\n            return true;\n          }\n          if (child === nameOrComponent) {\n            return true;\n          }\n          return false;\n        };\n      })(this));\n    }\n  };\n\n  BaseComponent.prototype.componentChildrenWith = function(propertyOrMatcherOrFunction) {\n    var matcher, property;\n    if (_.isString(propertyOrMatcherOrFunction)) {\n      property = propertyOrMatcherOrFunction;\n      propertyOrMatcherOrFunction = (function(_this) {\n        return function(child, parent) {\n          return property in child;\n        };\n      })(this);\n    } else if (!_.isFunction(propertyOrMatcherOrFunction)) {\n      assert(_.isObject(propertyOrMatcherOrFunction));\n      matcher = propertyOrMatcherOrFunction;\n      propertyOrMatcherOrFunction = (function(_this) {\n        return function(child, parent) {\n          var value;\n          for (property in matcher) {\n            value = matcher[property];\n            if (!(property in child)) {\n              return false;\n            }\n            if (_.isFunction(child[property])) {\n              if (child[property]() !== value) {\n                return false;\n              }\n            } else {\n              if (child[property] !== value) {\n                return false;\n              }\n            }\n          }\n          return true;\n        };\n      })(this);\n    }\n    return isolateValue((function(_this) {\n      return function() {\n        var child, _i, _len, _ref, _results;\n        _ref = _this.componentChildren();\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (propertyOrMatcherOrFunction.call(_this, child, _this)) {\n            _results.push(child);\n          }\n        }\n        return _results;\n      };\n    })(this));\n  };\n\n  BaseComponent.prototype.addComponentChild = function(componentChild) {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).componentChildren == null) {\n      _base.componentChildren = new ReactiveVar([], arrayReferenceEquals);\n    }\n    this._componentInternals.componentChildren.set(Tracker.nonreactive((function(_this) {\n      return function() {\n        return _this._componentInternals.componentChildren.get().concat([componentChild]);\n      };\n    })(this)));\n    return this;\n  };\n\n  BaseComponent.prototype.removeComponentChild = function(componentChild) {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).componentChildren == null) {\n      _base.componentChildren = new ReactiveVar([], arrayReferenceEquals);\n    }\n    this._componentInternals.componentChildren.set(Tracker.nonreactive((function(_this) {\n      return function() {\n        return _.without(_this._componentInternals.componentChildren.get(), componentChild);\n      };\n    })(this)));\n    return this;\n  };\n\n  BaseComponent.prototype.componentParent = function(componentParent) {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).componentParent == null) {\n      _base.componentParent = new ReactiveVar(null, function(a, b) {\n        return a === b;\n      });\n    }\n    if (!_.isUndefined(componentParent)) {\n      this._componentInternals.componentParent.set(componentParent);\n      return this;\n    }\n    return this._componentInternals.componentParent.get();\n  };\n\n  BaseComponent.renderComponent = function(componentParent) {\n    throw new Error(\"Not implemented\");\n  };\n\n  BaseComponent.prototype.renderComponent = function(componentParent) {\n    throw new Error(\"Not implemented\");\n  };\n\n  BaseComponent.extendComponent = function(constructor, methods) {\n    var currentClass, property, value, _ref;\n    currentClass = this;\n    if (!_.isFunction(constructor)) {\n      methods = constructor;\n      constructor = function() {\n        return constructor.__super__.constructor.apply(this, arguments);\n      };\n    }\n    constructor.prototype = Object.create(currentClass.prototype);\n    constructor.prototype.constructor = constructor;\n    for (property in currentClass) {\n      if (!__hasProp.call(currentClass, property)) continue;\n      value = currentClass[property];\n      constructor[property] = value;\n    }\n    constructor.__super__ = currentClass.prototype;\n    _ref = methods || {};\n    for (property in _ref) {\n      if (!__hasProp.call(_ref, property)) continue;\n      value = _ref[property];\n      constructor.prototype[property] = value;\n    }\n    return constructor;\n  };\n\n  return BaseComponent;\n\n})();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/peerlibrary:base-component/debug.coffee.js                                                          //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n                       \n\nBaseComponentDebug = (function() {\n  function BaseComponentDebug() {}\n\n  BaseComponentDebug.startComponent = function(component) {\n    var name;\n    name = component.componentName() || 'unnamed';\n    console.group(name);\n    return console.log('%o', component);\n  };\n\n  BaseComponentDebug.endComponent = function(component) {\n    return console.groupEnd();\n  };\n\n  BaseComponentDebug.startMarkedComponent = function(component) {\n    var name;\n    name = component.componentName() || 'unnamed';\n    console.group('%c%s', 'text-decoration: underline', name);\n    return console.log('%o', component);\n  };\n\n  BaseComponentDebug.endMarkedComponent = function(component) {\n    return this.endComponent(component);\n  };\n\n  BaseComponentDebug.dumpComponentSubtree = function(rootComponent, _markComponent) {\n    var child, marked, _i, _len, _ref;\n    if (_markComponent == null) {\n      _markComponent = (function() {});\n    }\n    if (!rootComponent) {\n      return;\n    }\n    marked = _markComponent(rootComponent);\n    if (marked) {\n      this.startMarkedComponent(rootComponent);\n    } else {\n      this.startComponent(rootComponent);\n    }\n    _ref = rootComponent.componentChildren();\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      child = _ref[_i];\n      this.dumpComponentSubtree(child, _markComponent);\n    }\n    if (marked) {\n      this.endMarkedComponent(rootComponent);\n    } else {\n      this.endComponent(rootComponent);\n    }\n  };\n\n  BaseComponentDebug.componentRoot = function(component) {\n    var componentParent;\n    while (componentParent = component.componentParent()) {\n      component = componentParent;\n    }\n    return component;\n  };\n\n  BaseComponentDebug.dumpComponentTree = function(component) {\n    if (!component) {\n      return;\n    }\n    return this.dumpComponentSubtree(this.componentRoot(component), function(c) {\n      return c === component;\n    });\n  };\n\n  return BaseComponentDebug;\n\n})();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}