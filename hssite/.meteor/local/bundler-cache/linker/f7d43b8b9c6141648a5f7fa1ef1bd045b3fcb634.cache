[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/bootstrap/packages/bootstrap.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n(function () {                                                                                                         // 1\n                                                                                                                       // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/bootstrap/js/bootstrap.js                                                                               //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n/* ===================================================                                                              // 1\n * bootstrap-transition.js v2.3.0                                                                                   // 2\n * http://twitter.github.com/bootstrap/javascript.html#transitions                                                  // 3\n * ===================================================                                                              // 4\n * Copyright 2012 Twitter, Inc.                                                                                     // 5\n *                                                                                                                  // 6\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 7\n * you may not use this file except in compliance with the License.                                                 // 8\n * You may obtain a copy of the License at                                                                          // 9\n *                                                                                                                  // 10\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 11\n *                                                                                                                  // 12\n * Unless required by applicable law or agreed to in writing, software                                              // 13\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 14\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 15\n * See the License for the specific language governing permissions and                                              // 16\n * limitations under the License.                                                                                   // 17\n * ========================================================== */                                                    // 18\n                                                                                                                    // 19\n                                                                                                                    // 20\n!function ($) {                                                                                                     // 21\n                                                                                                                    // 22\n  \"use strict\"; // jshint ;_;                                                                                       // 23\n                                                                                                                    // 24\n                                                                                                                    // 25\n  /* CSS TRANSITION SUPPORT (http://www.modernizr.com/)                                                             // 26\n   * ======================================================= */                                                     // 27\n                                                                                                                    // 28\n  $(function () {                                                                                                   // 29\n                                                                                                                    // 30\n    $.support.transition = (function () {                                                                           // 31\n                                                                                                                    // 32\n      var transitionEnd = (function () {                                                                            // 33\n                                                                                                                    // 34\n        var el = document.createElement('bootstrap')                                                                // 35\n          , transEndEventNames = {                                                                                  // 36\n               'WebkitTransition' : 'webkitTransitionEnd'                                                           // 37\n            ,  'MozTransition'    : 'transitionend'                                                                 // 38\n            ,  'OTransition'      : 'oTransitionEnd otransitionend'                                                 // 39\n            ,  'transition'       : 'transitionend'                                                                 // 40\n            }                                                                                                       // 41\n          , name                                                                                                    // 42\n                                                                                                                    // 43\n        for (name in transEndEventNames){                                                                           // 44\n          if (el.style[name] !== undefined) {                                                                       // 45\n            return transEndEventNames[name]                                                                         // 46\n          }                                                                                                         // 47\n        }                                                                                                           // 48\n                                                                                                                    // 49\n      }())                                                                                                          // 50\n                                                                                                                    // 51\n      return transitionEnd && {                                                                                     // 52\n        end: transitionEnd                                                                                          // 53\n      }                                                                                                             // 54\n                                                                                                                    // 55\n    })()                                                                                                            // 56\n                                                                                                                    // 57\n  })                                                                                                                // 58\n                                                                                                                    // 59\n}(window.jQuery);/* ==========================================================                                      // 60\n * bootstrap-alert.js v2.3.0                                                                                        // 61\n * http://twitter.github.com/bootstrap/javascript.html#alerts                                                       // 62\n * ==========================================================                                                       // 63\n * Copyright 2012 Twitter, Inc.                                                                                     // 64\n *                                                                                                                  // 65\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 66\n * you may not use this file except in compliance with the License.                                                 // 67\n * You may obtain a copy of the License at                                                                          // 68\n *                                                                                                                  // 69\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 70\n *                                                                                                                  // 71\n * Unless required by applicable law or agreed to in writing, software                                              // 72\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 73\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 74\n * See the License for the specific language governing permissions and                                              // 75\n * limitations under the License.                                                                                   // 76\n * ========================================================== */                                                    // 77\n                                                                                                                    // 78\n                                                                                                                    // 79\n!function ($) {                                                                                                     // 80\n                                                                                                                    // 81\n  \"use strict\"; // jshint ;_;                                                                                       // 82\n                                                                                                                    // 83\n                                                                                                                    // 84\n /* ALERT CLASS DEFINITION                                                                                          // 85\n  * ====================== */                                                                                       // 86\n                                                                                                                    // 87\n  var dismiss = '[data-dismiss=\"alert\"]'                                                                            // 88\n    , Alert = function (el) {                                                                                       // 89\n        $(el).on('click', dismiss, this.close)                                                                      // 90\n      }                                                                                                             // 91\n                                                                                                                    // 92\n  Alert.prototype.close = function (e) {                                                                            // 93\n    var $this = $(this)                                                                                             // 94\n      , selector = $this.attr('data-target')                                                                        // 95\n      , $parent                                                                                                     // 96\n                                                                                                                    // 97\n    if (!selector) {                                                                                                // 98\n      selector = $this.attr('href')                                                                                 // 99\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') //strip for ie7                                 // 100\n    }                                                                                                               // 101\n                                                                                                                    // 102\n    $parent = $(selector)                                                                                           // 103\n                                                                                                                    // 104\n    e && e.preventDefault()                                                                                         // 105\n                                                                                                                    // 106\n    $parent.length || ($parent = $this.hasClass('alert') ? $this : $this.parent())                                  // 107\n                                                                                                                    // 108\n    $parent.trigger(e = $.Event('close'))                                                                           // 109\n                                                                                                                    // 110\n    if (e.isDefaultPrevented()) return                                                                              // 111\n                                                                                                                    // 112\n    $parent.removeClass('in')                                                                                       // 113\n                                                                                                                    // 114\n    function removeElement() {                                                                                      // 115\n      $parent                                                                                                       // 116\n        .trigger('closed')                                                                                          // 117\n        .remove()                                                                                                   // 118\n    }                                                                                                               // 119\n                                                                                                                    // 120\n    $.support.transition && $parent.hasClass('fade') ?                                                              // 121\n      $parent.on($.support.transition.end, removeElement) :                                                         // 122\n      removeElement()                                                                                               // 123\n  }                                                                                                                 // 124\n                                                                                                                    // 125\n                                                                                                                    // 126\n /* ALERT PLUGIN DEFINITION                                                                                         // 127\n  * ======================= */                                                                                      // 128\n                                                                                                                    // 129\n  var old = $.fn.alert                                                                                              // 130\n                                                                                                                    // 131\n  $.fn.alert = function (option) {                                                                                  // 132\n    return this.each(function () {                                                                                  // 133\n      var $this = $(this)                                                                                           // 134\n        , data = $this.data('alert')                                                                                // 135\n      if (!data) $this.data('alert', (data = new Alert(this)))                                                      // 136\n      if (typeof option == 'string') data[option].call($this)                                                       // 137\n    })                                                                                                              // 138\n  }                                                                                                                 // 139\n                                                                                                                    // 140\n  $.fn.alert.Constructor = Alert                                                                                    // 141\n                                                                                                                    // 142\n                                                                                                                    // 143\n /* ALERT NO CONFLICT                                                                                               // 144\n  * ================= */                                                                                            // 145\n                                                                                                                    // 146\n  $.fn.alert.noConflict = function () {                                                                             // 147\n    $.fn.alert = old                                                                                                // 148\n    return this                                                                                                     // 149\n  }                                                                                                                 // 150\n                                                                                                                    // 151\n                                                                                                                    // 152\n /* ALERT DATA-API                                                                                                  // 153\n  * ============== */                                                                                               // 154\n                                                                                                                    // 155\n  $(document).on('click.alert.data-api', dismiss, Alert.prototype.close)                                            // 156\n                                                                                                                    // 157\n}(window.jQuery);/* ============================================================                                    // 158\n * bootstrap-button.js v2.3.0                                                                                       // 159\n * http://twitter.github.com/bootstrap/javascript.html#buttons                                                      // 160\n * ============================================================                                                     // 161\n * Copyright 2012 Twitter, Inc.                                                                                     // 162\n *                                                                                                                  // 163\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 164\n * you may not use this file except in compliance with the License.                                                 // 165\n * You may obtain a copy of the License at                                                                          // 166\n *                                                                                                                  // 167\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 168\n *                                                                                                                  // 169\n * Unless required by applicable law or agreed to in writing, software                                              // 170\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 171\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 172\n * See the License for the specific language governing permissions and                                              // 173\n * limitations under the License.                                                                                   // 174\n * ============================================================ */                                                  // 175\n                                                                                                                    // 176\n                                                                                                                    // 177\n!function ($) {                                                                                                     // 178\n                                                                                                                    // 179\n  \"use strict\"; // jshint ;_;                                                                                       // 180\n                                                                                                                    // 181\n                                                                                                                    // 182\n /* BUTTON PUBLIC CLASS DEFINITION                                                                                  // 183\n  * ============================== */                                                                               // 184\n                                                                                                                    // 185\n  var Button = function (element, options) {                                                                        // 186\n    this.$element = $(element)                                                                                      // 187\n    this.options = $.extend({}, $.fn.button.defaults, options)                                                      // 188\n  }                                                                                                                 // 189\n                                                                                                                    // 190\n  Button.prototype.setState = function (state) {                                                                    // 191\n    var d = 'disabled'                                                                                              // 192\n      , $el = this.$element                                                                                         // 193\n      , data = $el.data()                                                                                           // 194\n      , val = $el.is('input') ? 'val' : 'html'                                                                      // 195\n                                                                                                                    // 196\n    state = state + 'Text'                                                                                          // 197\n    data.resetText || $el.data('resetText', $el[val]())                                                             // 198\n                                                                                                                    // 199\n    $el[val](data[state] || this.options[state])                                                                    // 200\n                                                                                                                    // 201\n    // push to event loop to allow forms to submit                                                                  // 202\n    setTimeout(function () {                                                                                        // 203\n      state == 'loadingText' ?                                                                                      // 204\n        $el.addClass(d).attr(d, d) :                                                                                // 205\n        $el.removeClass(d).removeAttr(d)                                                                            // 206\n    }, 0)                                                                                                           // 207\n  }                                                                                                                 // 208\n                                                                                                                    // 209\n  Button.prototype.toggle = function () {                                                                           // 210\n    var $parent = this.$element.closest('[data-toggle=\"buttons-radio\"]')                                            // 211\n                                                                                                                    // 212\n    $parent && $parent                                                                                              // 213\n      .find('.active')                                                                                              // 214\n      .removeClass('active')                                                                                        // 215\n                                                                                                                    // 216\n    this.$element.toggleClass('active')                                                                             // 217\n  }                                                                                                                 // 218\n                                                                                                                    // 219\n                                                                                                                    // 220\n /* BUTTON PLUGIN DEFINITION                                                                                        // 221\n  * ======================== */                                                                                     // 222\n                                                                                                                    // 223\n  var old = $.fn.button                                                                                             // 224\n                                                                                                                    // 225\n  $.fn.button = function (option) {                                                                                 // 226\n    return this.each(function () {                                                                                  // 227\n      var $this = $(this)                                                                                           // 228\n        , data = $this.data('button')                                                                               // 229\n        , options = typeof option == 'object' && option                                                             // 230\n      if (!data) $this.data('button', (data = new Button(this, options)))                                           // 231\n      if (option == 'toggle') data.toggle()                                                                         // 232\n      else if (option) data.setState(option)                                                                        // 233\n    })                                                                                                              // 234\n  }                                                                                                                 // 235\n                                                                                                                    // 236\n  $.fn.button.defaults = {                                                                                          // 237\n    loadingText: 'loading...'                                                                                       // 238\n  }                                                                                                                 // 239\n                                                                                                                    // 240\n  $.fn.button.Constructor = Button                                                                                  // 241\n                                                                                                                    // 242\n                                                                                                                    // 243\n /* BUTTON NO CONFLICT                                                                                              // 244\n  * ================== */                                                                                           // 245\n                                                                                                                    // 246\n  $.fn.button.noConflict = function () {                                                                            // 247\n    $.fn.button = old                                                                                               // 248\n    return this                                                                                                     // 249\n  }                                                                                                                 // 250\n                                                                                                                    // 251\n                                                                                                                    // 252\n /* BUTTON DATA-API                                                                                                 // 253\n  * =============== */                                                                                              // 254\n                                                                                                                    // 255\n  $(document).on('click.button.data-api', '[data-toggle^=button]', function (e) {                                   // 256\n    var $btn = $(e.target)                                                                                          // 257\n    if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')                                                          // 258\n    $btn.button('toggle')                                                                                           // 259\n  })                                                                                                                // 260\n                                                                                                                    // 261\n}(window.jQuery);/* ==========================================================                                      // 262\n * bootstrap-carousel.js v2.3.0                                                                                     // 263\n * http://twitter.github.com/bootstrap/javascript.html#carousel                                                     // 264\n * ==========================================================                                                       // 265\n * Copyright 2012 Twitter, Inc.                                                                                     // 266\n *                                                                                                                  // 267\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 268\n * you may not use this file except in compliance with the License.                                                 // 269\n * You may obtain a copy of the License at                                                                          // 270\n *                                                                                                                  // 271\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 272\n *                                                                                                                  // 273\n * Unless required by applicable law or agreed to in writing, software                                              // 274\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 275\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 276\n * See the License for the specific language governing permissions and                                              // 277\n * limitations under the License.                                                                                   // 278\n * ========================================================== */                                                    // 279\n                                                                                                                    // 280\n                                                                                                                    // 281\n!function ($) {                                                                                                     // 282\n                                                                                                                    // 283\n  \"use strict\"; // jshint ;_;                                                                                       // 284\n                                                                                                                    // 285\n                                                                                                                    // 286\n /* CAROUSEL CLASS DEFINITION                                                                                       // 287\n  * ========================= */                                                                                    // 288\n                                                                                                                    // 289\n  var Carousel = function (element, options) {                                                                      // 290\n    this.$element = $(element)                                                                                      // 291\n    this.$indicators = this.$element.find('.carousel-indicators')                                                   // 292\n    this.options = options                                                                                          // 293\n    this.options.pause == 'hover' && this.$element                                                                  // 294\n      .on('mouseenter', $.proxy(this.pause, this))                                                                  // 295\n      .on('mouseleave', $.proxy(this.cycle, this))                                                                  // 296\n  }                                                                                                                 // 297\n                                                                                                                    // 298\n  Carousel.prototype = {                                                                                            // 299\n                                                                                                                    // 300\n    cycle: function (e) {                                                                                           // 301\n      if (!e) this.paused = false                                                                                   // 302\n      if (this.interval) clearInterval(this.interval);                                                              // 303\n      this.options.interval                                                                                         // 304\n        && !this.paused                                                                                             // 305\n        && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))                           // 306\n      return this                                                                                                   // 307\n    }                                                                                                               // 308\n                                                                                                                    // 309\n  , getActiveIndex: function () {                                                                                   // 310\n      this.$active = this.$element.find('.item.active')                                                             // 311\n      this.$items = this.$active.parent().children()                                                                // 312\n      return this.$items.index(this.$active)                                                                        // 313\n    }                                                                                                               // 314\n                                                                                                                    // 315\n  , to: function (pos) {                                                                                            // 316\n      var activeIndex = this.getActiveIndex()                                                                       // 317\n        , that = this                                                                                               // 318\n                                                                                                                    // 319\n      if (pos > (this.$items.length - 1) || pos < 0) return                                                         // 320\n                                                                                                                    // 321\n      if (this.sliding) {                                                                                           // 322\n        return this.$element.one('slid', function () {                                                              // 323\n          that.to(pos)                                                                                              // 324\n        })                                                                                                          // 325\n      }                                                                                                             // 326\n                                                                                                                    // 327\n      if (activeIndex == pos) {                                                                                     // 328\n        return this.pause().cycle()                                                                                 // 329\n      }                                                                                                             // 330\n                                                                                                                    // 331\n      return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]))                                   // 332\n    }                                                                                                               // 333\n                                                                                                                    // 334\n  , pause: function (e) {                                                                                           // 335\n      if (!e) this.paused = true                                                                                    // 336\n      if (this.$element.find('.next, .prev').length && $.support.transition.end) {                                  // 337\n        this.$element.trigger($.support.transition.end)                                                             // 338\n        this.cycle()                                                                                                // 339\n      }                                                                                                             // 340\n      clearInterval(this.interval)                                                                                  // 341\n      this.interval = null                                                                                          // 342\n      return this                                                                                                   // 343\n    }                                                                                                               // 344\n                                                                                                                    // 345\n  , next: function () {                                                                                             // 346\n      if (this.sliding) return                                                                                      // 347\n      return this.slide('next')                                                                                     // 348\n    }                                                                                                               // 349\n                                                                                                                    // 350\n  , prev: function () {                                                                                             // 351\n      if (this.sliding) return                                                                                      // 352\n      return this.slide('prev')                                                                                     // 353\n    }                                                                                                               // 354\n                                                                                                                    // 355\n  , slide: function (type, next) {                                                                                  // 356\n      var $active = this.$element.find('.item.active')                                                              // 357\n        , $next = next || $active[type]()                                                                           // 358\n        , isCycling = this.interval                                                                                 // 359\n        , direction = type == 'next' ? 'left' : 'right'                                                             // 360\n        , fallback  = type == 'next' ? 'first' : 'last'                                                             // 361\n        , that = this                                                                                               // 362\n        , e                                                                                                         // 363\n                                                                                                                    // 364\n      this.sliding = true                                                                                           // 365\n                                                                                                                    // 366\n      isCycling && this.pause()                                                                                     // 367\n                                                                                                                    // 368\n      $next = $next.length ? $next : this.$element.find('.item')[fallback]()                                        // 369\n                                                                                                                    // 370\n      e = $.Event('slide', {                                                                                        // 371\n        relatedTarget: $next[0]                                                                                     // 372\n      , direction: direction                                                                                        // 373\n      })                                                                                                            // 374\n                                                                                                                    // 375\n      if ($next.hasClass('active')) return                                                                          // 376\n                                                                                                                    // 377\n      if (this.$indicators.length) {                                                                                // 378\n        this.$indicators.find('.active').removeClass('active')                                                      // 379\n        this.$element.one('slid', function () {                                                                     // 380\n          var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()])                                // 381\n          $nextIndicator && $nextIndicator.addClass('active')                                                       // 382\n        })                                                                                                          // 383\n      }                                                                                                             // 384\n                                                                                                                    // 385\n      if ($.support.transition && this.$element.hasClass('slide')) {                                                // 386\n        this.$element.trigger(e)                                                                                    // 387\n        if (e.isDefaultPrevented()) return                                                                          // 388\n        $next.addClass(type)                                                                                        // 389\n        $next[0].offsetWidth // force reflow                                                                        // 390\n        $active.addClass(direction)                                                                                 // 391\n        $next.addClass(direction)                                                                                   // 392\n        this.$element.one($.support.transition.end, function () {                                                   // 393\n          $next.removeClass([type, direction].join(' ')).addClass('active')                                         // 394\n          $active.removeClass(['active', direction].join(' '))                                                      // 395\n          that.sliding = false                                                                                      // 396\n          setTimeout(function () { that.$element.trigger('slid') }, 0)                                              // 397\n        })                                                                                                          // 398\n      } else {                                                                                                      // 399\n        this.$element.trigger(e)                                                                                    // 400\n        if (e.isDefaultPrevented()) return                                                                          // 401\n        $active.removeClass('active')                                                                               // 402\n        $next.addClass('active')                                                                                    // 403\n        this.sliding = false                                                                                        // 404\n        this.$element.trigger('slid')                                                                               // 405\n      }                                                                                                             // 406\n                                                                                                                    // 407\n      isCycling && this.cycle()                                                                                     // 408\n                                                                                                                    // 409\n      return this                                                                                                   // 410\n    }                                                                                                               // 411\n                                                                                                                    // 412\n  }                                                                                                                 // 413\n                                                                                                                    // 414\n                                                                                                                    // 415\n /* CAROUSEL PLUGIN DEFINITION                                                                                      // 416\n  * ========================== */                                                                                   // 417\n                                                                                                                    // 418\n  var old = $.fn.carousel                                                                                           // 419\n                                                                                                                    // 420\n  $.fn.carousel = function (option) {                                                                               // 421\n    return this.each(function () {                                                                                  // 422\n      var $this = $(this)                                                                                           // 423\n        , data = $this.data('carousel')                                                                             // 424\n        , options = $.extend({}, $.fn.carousel.defaults, typeof option == 'object' && option)                       // 425\n        , action = typeof option == 'string' ? option : options.slide                                               // 426\n      if (!data) $this.data('carousel', (data = new Carousel(this, options)))                                       // 427\n      if (typeof option == 'number') data.to(option)                                                                // 428\n      else if (action) data[action]()                                                                               // 429\n      else if (options.interval) data.pause().cycle()                                                               // 430\n    })                                                                                                              // 431\n  }                                                                                                                 // 432\n                                                                                                                    // 433\n  $.fn.carousel.defaults = {                                                                                        // 434\n    interval: 5000                                                                                                  // 435\n  , pause: 'hover'                                                                                                  // 436\n  }                                                                                                                 // 437\n                                                                                                                    // 438\n  $.fn.carousel.Constructor = Carousel                                                                              // 439\n                                                                                                                    // 440\n                                                                                                                    // 441\n /* CAROUSEL NO CONFLICT                                                                                            // 442\n  * ==================== */                                                                                         // 443\n                                                                                                                    // 444\n  $.fn.carousel.noConflict = function () {                                                                          // 445\n    $.fn.carousel = old                                                                                             // 446\n    return this                                                                                                     // 447\n  }                                                                                                                 // 448\n                                                                                                                    // 449\n /* CAROUSEL DATA-API                                                                                               // 450\n  * ================= */                                                                                            // 451\n                                                                                                                    // 452\n  $(document).on('click.carousel.data-api', '[data-slide], [data-slide-to]', function (e) {                         // 453\n    var $this = $(this), href                                                                                       // 454\n      , $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) //strip for ie7\n      , options = $.extend({}, $target.data(), $this.data())                                                        // 456\n      , slideIndex                                                                                                  // 457\n                                                                                                                    // 458\n    $target.carousel(options)                                                                                       // 459\n                                                                                                                    // 460\n    if (slideIndex = $this.attr('data-slide-to')) {                                                                 // 461\n      $target.data('carousel').pause().to(slideIndex).cycle()                                                       // 462\n    }                                                                                                               // 463\n                                                                                                                    // 464\n    e.preventDefault()                                                                                              // 465\n  })                                                                                                                // 466\n                                                                                                                    // 467\n}(window.jQuery);/* =============================================================                                   // 468\n * bootstrap-collapse.js v2.3.0                                                                                     // 469\n * http://twitter.github.com/bootstrap/javascript.html#collapse                                                     // 470\n * =============================================================                                                    // 471\n * Copyright 2012 Twitter, Inc.                                                                                     // 472\n *                                                                                                                  // 473\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 474\n * you may not use this file except in compliance with the License.                                                 // 475\n * You may obtain a copy of the License at                                                                          // 476\n *                                                                                                                  // 477\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 478\n *                                                                                                                  // 479\n * Unless required by applicable law or agreed to in writing, software                                              // 480\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 481\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 482\n * See the License for the specific language governing permissions and                                              // 483\n * limitations under the License.                                                                                   // 484\n * ============================================================ */                                                  // 485\n                                                                                                                    // 486\n                                                                                                                    // 487\n!function ($) {                                                                                                     // 488\n                                                                                                                    // 489\n  \"use strict\"; // jshint ;_;                                                                                       // 490\n                                                                                                                    // 491\n                                                                                                                    // 492\n /* COLLAPSE PUBLIC CLASS DEFINITION                                                                                // 493\n  * ================================ */                                                                             // 494\n                                                                                                                    // 495\n  var Collapse = function (element, options) {                                                                      // 496\n    this.$element = $(element)                                                                                      // 497\n    this.options = $.extend({}, $.fn.collapse.defaults, options)                                                    // 498\n                                                                                                                    // 499\n    if (this.options.parent) {                                                                                      // 500\n      this.$parent = $(this.options.parent)                                                                         // 501\n    }                                                                                                               // 502\n                                                                                                                    // 503\n    this.options.toggle && this.toggle()                                                                            // 504\n  }                                                                                                                 // 505\n                                                                                                                    // 506\n  Collapse.prototype = {                                                                                            // 507\n                                                                                                                    // 508\n    constructor: Collapse                                                                                           // 509\n                                                                                                                    // 510\n  , dimension: function () {                                                                                        // 511\n      var hasWidth = this.$element.hasClass('width')                                                                // 512\n      return hasWidth ? 'width' : 'height'                                                                          // 513\n    }                                                                                                               // 514\n                                                                                                                    // 515\n  , show: function () {                                                                                             // 516\n      var dimension                                                                                                 // 517\n        , scroll                                                                                                    // 518\n        , actives                                                                                                   // 519\n        , hasData                                                                                                   // 520\n                                                                                                                    // 521\n      if (this.transitioning || this.$element.hasClass('in')) return                                                // 522\n                                                                                                                    // 523\n      dimension = this.dimension()                                                                                  // 524\n      scroll = $.camelCase(['scroll', dimension].join('-'))                                                         // 525\n      actives = this.$parent && this.$parent.find('> .accordion-group > .in')                                       // 526\n                                                                                                                    // 527\n      if (actives && actives.length) {                                                                              // 528\n        hasData = actives.data('collapse')                                                                          // 529\n        if (hasData && hasData.transitioning) return                                                                // 530\n        actives.collapse('hide')                                                                                    // 531\n        hasData || actives.data('collapse', null)                                                                   // 532\n      }                                                                                                             // 533\n                                                                                                                    // 534\n      this.$element[dimension](0)                                                                                   // 535\n      this.transition('addClass', $.Event('show'), 'shown')                                                         // 536\n      $.support.transition && this.$element[dimension](this.$element[0][scroll])                                    // 537\n    }                                                                                                               // 538\n                                                                                                                    // 539\n  , hide: function () {                                                                                             // 540\n      var dimension                                                                                                 // 541\n      if (this.transitioning || !this.$element.hasClass('in')) return                                               // 542\n      dimension = this.dimension()                                                                                  // 543\n      this.reset(this.$element[dimension]())                                                                        // 544\n      this.transition('removeClass', $.Event('hide'), 'hidden')                                                     // 545\n      this.$element[dimension](0)                                                                                   // 546\n    }                                                                                                               // 547\n                                                                                                                    // 548\n  , reset: function (size) {                                                                                        // 549\n      var dimension = this.dimension()                                                                              // 550\n                                                                                                                    // 551\n      this.$element                                                                                                 // 552\n        .removeClass('collapse')                                                                                    // 553\n        [dimension](size || 'auto')                                                                                 // 554\n        [0].offsetWidth                                                                                             // 555\n                                                                                                                    // 556\n      this.$element[size !== null ? 'addClass' : 'removeClass']('collapse')                                         // 557\n                                                                                                                    // 558\n      return this                                                                                                   // 559\n    }                                                                                                               // 560\n                                                                                                                    // 561\n  , transition: function (method, startEvent, completeEvent) {                                                      // 562\n      var that = this                                                                                               // 563\n        , complete = function () {                                                                                  // 564\n            if (startEvent.type == 'show') that.reset()                                                             // 565\n            that.transitioning = 0                                                                                  // 566\n            that.$element.trigger(completeEvent)                                                                    // 567\n          }                                                                                                         // 568\n                                                                                                                    // 569\n      this.$element.trigger(startEvent)                                                                             // 570\n                                                                                                                    // 571\n      if (startEvent.isDefaultPrevented()) return                                                                   // 572\n                                                                                                                    // 573\n      this.transitioning = 1                                                                                        // 574\n                                                                                                                    // 575\n      this.$element[method]('in')                                                                                   // 576\n                                                                                                                    // 577\n      $.support.transition && this.$element.hasClass('collapse') ?                                                  // 578\n        this.$element.one($.support.transition.end, complete) :                                                     // 579\n        complete()                                                                                                  // 580\n    }                                                                                                               // 581\n                                                                                                                    // 582\n  , toggle: function () {                                                                                           // 583\n      this[this.$element.hasClass('in') ? 'hide' : 'show']()                                                        // 584\n    }                                                                                                               // 585\n                                                                                                                    // 586\n  }                                                                                                                 // 587\n                                                                                                                    // 588\n                                                                                                                    // 589\n /* COLLAPSE PLUGIN DEFINITION                                                                                      // 590\n  * ========================== */                                                                                   // 591\n                                                                                                                    // 592\n  var old = $.fn.collapse                                                                                           // 593\n                                                                                                                    // 594\n  $.fn.collapse = function (option) {                                                                               // 595\n    return this.each(function () {                                                                                  // 596\n      var $this = $(this)                                                                                           // 597\n        , data = $this.data('collapse')                                                                             // 598\n        , options = $.extend({}, $.fn.collapse.defaults, $this.data(), typeof option == 'object' && option)         // 599\n      if (!data) $this.data('collapse', (data = new Collapse(this, options)))                                       // 600\n      if (typeof option == 'string') data[option]()                                                                 // 601\n    })                                                                                                              // 602\n  }                                                                                                                 // 603\n                                                                                                                    // 604\n  $.fn.collapse.defaults = {                                                                                        // 605\n    toggle: true                                                                                                    // 606\n  }                                                                                                                 // 607\n                                                                                                                    // 608\n  $.fn.collapse.Constructor = Collapse                                                                              // 609\n                                                                                                                    // 610\n                                                                                                                    // 611\n /* COLLAPSE NO CONFLICT                                                                                            // 612\n  * ==================== */                                                                                         // 613\n                                                                                                                    // 614\n  $.fn.collapse.noConflict = function () {                                                                          // 615\n    $.fn.collapse = old                                                                                             // 616\n    return this                                                                                                     // 617\n  }                                                                                                                 // 618\n                                                                                                                    // 619\n                                                                                                                    // 620\n /* COLLAPSE DATA-API                                                                                               // 621\n  * ================= */                                                                                            // 622\n                                                                                                                    // 623\n  $(document).on('click.collapse.data-api', '[data-toggle=collapse]', function (e) {                                // 624\n    var $this = $(this), href                                                                                       // 625\n      , target = $this.attr('data-target')                                                                          // 626\n        || e.preventDefault()                                                                                       // 627\n        || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') //strip for ie7                        // 628\n      , option = $(target).data('collapse') ? 'toggle' : $this.data()                                               // 629\n    $this[$(target).hasClass('in') ? 'addClass' : 'removeClass']('collapsed')                                       // 630\n    $(target).collapse(option)                                                                                      // 631\n  })                                                                                                                // 632\n                                                                                                                    // 633\n}(window.jQuery);/* ============================================================                                    // 634\n * bootstrap-dropdown.js v2.3.0                                                                                     // 635\n * http://twitter.github.com/bootstrap/javascript.html#dropdowns                                                    // 636\n * ============================================================                                                     // 637\n * Copyright 2012 Twitter, Inc.                                                                                     // 638\n *                                                                                                                  // 639\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 640\n * you may not use this file except in compliance with the License.                                                 // 641\n * You may obtain a copy of the License at                                                                          // 642\n *                                                                                                                  // 643\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 644\n *                                                                                                                  // 645\n * Unless required by applicable law or agreed to in writing, software                                              // 646\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 647\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 648\n * See the License for the specific language governing permissions and                                              // 649\n * limitations under the License.                                                                                   // 650\n * ============================================================ */                                                  // 651\n                                                                                                                    // 652\n                                                                                                                    // 653\n!function ($) {                                                                                                     // 654\n                                                                                                                    // 655\n  \"use strict\"; // jshint ;_;                                                                                       // 656\n                                                                                                                    // 657\n                                                                                                                    // 658\n /* DROPDOWN CLASS DEFINITION                                                                                       // 659\n  * ========================= */                                                                                    // 660\n                                                                                                                    // 661\n  var toggle = '[data-toggle=dropdown]'                                                                             // 662\n    , Dropdown = function (element) {                                                                               // 663\n        var $el = $(element).on('click.dropdown.data-api', this.toggle)                                             // 664\n        $('html').on('click.dropdown.data-api', function () {                                                       // 665\n          $el.parent().removeClass('open')                                                                          // 666\n        })                                                                                                          // 667\n      }                                                                                                             // 668\n                                                                                                                    // 669\n  Dropdown.prototype = {                                                                                            // 670\n                                                                                                                    // 671\n    constructor: Dropdown                                                                                           // 672\n                                                                                                                    // 673\n  , toggle: function (e) {                                                                                          // 674\n      var $this = $(this)                                                                                           // 675\n        , $parent                                                                                                   // 676\n        , isActive                                                                                                  // 677\n                                                                                                                    // 678\n      if ($this.is('.disabled, :disabled')) return                                                                  // 679\n                                                                                                                    // 680\n      $parent = getParent($this)                                                                                    // 681\n                                                                                                                    // 682\n      isActive = $parent.hasClass('open')                                                                           // 683\n                                                                                                                    // 684\n      clearMenus()                                                                                                  // 685\n                                                                                                                    // 686\n      if (!isActive) {                                                                                              // 687\n        $parent.toggleClass('open')                                                                                 // 688\n      }                                                                                                             // 689\n                                                                                                                    // 690\n      $this.focus()                                                                                                 // 691\n                                                                                                                    // 692\n      return false                                                                                                  // 693\n    }                                                                                                               // 694\n                                                                                                                    // 695\n  , keydown: function (e) {                                                                                         // 696\n      var $this                                                                                                     // 697\n        , $items                                                                                                    // 698\n        , $active                                                                                                   // 699\n        , $parent                                                                                                   // 700\n        , isActive                                                                                                  // 701\n        , index                                                                                                     // 702\n                                                                                                                    // 703\n      if (!/(38|40|27)/.test(e.keyCode)) return                                                                     // 704\n                                                                                                                    // 705\n      $this = $(this)                                                                                               // 706\n                                                                                                                    // 707\n      e.preventDefault()                                                                                            // 708\n      e.stopPropagation()                                                                                           // 709\n                                                                                                                    // 710\n      if ($this.is('.disabled, :disabled')) return                                                                  // 711\n                                                                                                                    // 712\n      $parent = getParent($this)                                                                                    // 713\n                                                                                                                    // 714\n      isActive = $parent.hasClass('open')                                                                           // 715\n                                                                                                                    // 716\n      if (!isActive || (isActive && e.keyCode == 27)) {                                                             // 717\n        if (e.which == 27) $parent.find(toggle).focus()                                                             // 718\n        return $this.click()                                                                                        // 719\n      }                                                                                                             // 720\n                                                                                                                    // 721\n      $items = $('[role=menu] li:not(.divider):visible a', $parent)                                                 // 722\n                                                                                                                    // 723\n      if (!$items.length) return                                                                                    // 724\n                                                                                                                    // 725\n      index = $items.index($items.filter(':focus'))                                                                 // 726\n                                                                                                                    // 727\n      if (e.keyCode == 38 && index > 0) index--                                        // up                        // 728\n      if (e.keyCode == 40 && index < $items.length - 1) index++                        // down                      // 729\n      if (!~index) index = 0                                                                                        // 730\n                                                                                                                    // 731\n      $items                                                                                                        // 732\n        .eq(index)                                                                                                  // 733\n        .focus()                                                                                                    // 734\n    }                                                                                                               // 735\n                                                                                                                    // 736\n  }                                                                                                                 // 737\n                                                                                                                    // 738\n  function clearMenus() {                                                                                           // 739\n    $(toggle).each(function () {                                                                                    // 740\n      getParent($(this)).removeClass('open')                                                                        // 741\n    })                                                                                                              // 742\n  }                                                                                                                 // 743\n                                                                                                                    // 744\n  function getParent($this) {                                                                                       // 745\n    var selector = $this.attr('data-target')                                                                        // 746\n      , $parent                                                                                                     // 747\n                                                                                                                    // 748\n    if (!selector) {                                                                                                // 749\n      selector = $this.attr('href')                                                                                 // 750\n      selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') //strip for ie7           // 751\n    }                                                                                                               // 752\n                                                                                                                    // 753\n    $parent = selector && $(selector)                                                                               // 754\n                                                                                                                    // 755\n    if (!$parent || !$parent.length) $parent = $this.parent()                                                       // 756\n                                                                                                                    // 757\n    return $parent                                                                                                  // 758\n  }                                                                                                                 // 759\n                                                                                                                    // 760\n                                                                                                                    // 761\n  /* DROPDOWN PLUGIN DEFINITION                                                                                     // 762\n   * ========================== */                                                                                  // 763\n                                                                                                                    // 764\n  var old = $.fn.dropdown                                                                                           // 765\n                                                                                                                    // 766\n  $.fn.dropdown = function (option) {                                                                               // 767\n    return this.each(function () {                                                                                  // 768\n      var $this = $(this)                                                                                           // 769\n        , data = $this.data('dropdown')                                                                             // 770\n      if (!data) $this.data('dropdown', (data = new Dropdown(this)))                                                // 771\n      if (typeof option == 'string') data[option].call($this)                                                       // 772\n    })                                                                                                              // 773\n  }                                                                                                                 // 774\n                                                                                                                    // 775\n  $.fn.dropdown.Constructor = Dropdown                                                                              // 776\n                                                                                                                    // 777\n                                                                                                                    // 778\n /* DROPDOWN NO CONFLICT                                                                                            // 779\n  * ==================== */                                                                                         // 780\n                                                                                                                    // 781\n  $.fn.dropdown.noConflict = function () {                                                                          // 782\n    $.fn.dropdown = old                                                                                             // 783\n    return this                                                                                                     // 784\n  }                                                                                                                 // 785\n                                                                                                                    // 786\n                                                                                                                    // 787\n  /* APPLY TO STANDARD DROPDOWN ELEMENTS                                                                            // 788\n   * =================================== */                                                                         // 789\n                                                                                                                    // 790\n  $(document)                                                                                                       // 791\n    .on('click.dropdown.data-api', clearMenus)                                                                      // 792\n    .on('click.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })                          // 793\n    .on('.dropdown-menu', function (e) { e.stopPropagation() })                                                     // 794\n    .on('click.dropdown.data-api'  , toggle, Dropdown.prototype.toggle)                                             // 795\n    .on('keydown.dropdown.data-api', toggle + ', [role=menu]' , Dropdown.prototype.keydown)                         // 796\n                                                                                                                    // 797\n}(window.jQuery);                                                                                                   // 798\n/* =========================================================                                                        // 799\n * bootstrap-modal.js v2.3.0                                                                                        // 800\n * http://twitter.github.com/bootstrap/javascript.html#modals                                                       // 801\n * =========================================================                                                        // 802\n * Copyright 2012 Twitter, Inc.                                                                                     // 803\n *                                                                                                                  // 804\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 805\n * you may not use this file except in compliance with the License.                                                 // 806\n * You may obtain a copy of the License at                                                                          // 807\n *                                                                                                                  // 808\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 809\n *                                                                                                                  // 810\n * Unless required by applicable law or agreed to in writing, software                                              // 811\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 812\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 813\n * See the License for the specific language governing permissions and                                              // 814\n * limitations under the License.                                                                                   // 815\n * ========================================================= */                                                     // 816\n                                                                                                                    // 817\n                                                                                                                    // 818\n!function ($) {                                                                                                     // 819\n                                                                                                                    // 820\n  \"use strict\"; // jshint ;_;                                                                                       // 821\n                                                                                                                    // 822\n                                                                                                                    // 823\n /* MODAL CLASS DEFINITION                                                                                          // 824\n  * ====================== */                                                                                       // 825\n                                                                                                                    // 826\n  var Modal = function (element, options) {                                                                         // 827\n    this.options = options                                                                                          // 828\n    this.$element = $(element)                                                                                      // 829\n      .delegate('[data-dismiss=\"modal\"]', 'click.dismiss.modal', $.proxy(this.hide, this))                          // 830\n    this.options.remote && this.$element.find('.modal-body').load(this.options.remote)                              // 831\n  }                                                                                                                 // 832\n                                                                                                                    // 833\n  Modal.prototype = {                                                                                               // 834\n                                                                                                                    // 835\n      constructor: Modal                                                                                            // 836\n                                                                                                                    // 837\n    , toggle: function () {                                                                                         // 838\n        return this[!this.isShown ? 'show' : 'hide']()                                                              // 839\n      }                                                                                                             // 840\n                                                                                                                    // 841\n    , show: function () {                                                                                           // 842\n        var that = this                                                                                             // 843\n          , e = $.Event('show')                                                                                     // 844\n                                                                                                                    // 845\n        this.$element.trigger(e)                                                                                    // 846\n                                                                                                                    // 847\n        if (this.isShown || e.isDefaultPrevented()) return                                                          // 848\n                                                                                                                    // 849\n        this.isShown = true                                                                                         // 850\n                                                                                                                    // 851\n        this.escape()                                                                                               // 852\n                                                                                                                    // 853\n        this.backdrop(function () {                                                                                 // 854\n          var transition = $.support.transition && that.$element.hasClass('fade')                                   // 855\n                                                                                                                    // 856\n          if (!that.$element.parent().length) {                                                                     // 857\n            that.$element.appendTo(document.body) //don't move modals dom position                                  // 858\n          }                                                                                                         // 859\n                                                                                                                    // 860\n          that.$element.show()                                                                                      // 861\n                                                                                                                    // 862\n          if (transition) {                                                                                         // 863\n            that.$element[0].offsetWidth // force reflow                                                            // 864\n          }                                                                                                         // 865\n                                                                                                                    // 866\n          that.$element                                                                                             // 867\n            .addClass('in')                                                                                         // 868\n            .attr('aria-hidden', false)                                                                             // 869\n                                                                                                                    // 870\n          that.enforceFocus()                                                                                       // 871\n                                                                                                                    // 872\n          transition ?                                                                                              // 873\n            that.$element.one($.support.transition.end, function () { that.$element.focus().trigger('shown') }) :   // 874\n            that.$element.focus().trigger('shown')                                                                  // 875\n                                                                                                                    // 876\n        })                                                                                                          // 877\n      }                                                                                                             // 878\n                                                                                                                    // 879\n    , hide: function (e) {                                                                                          // 880\n        e && e.preventDefault()                                                                                     // 881\n                                                                                                                    // 882\n        var that = this                                                                                             // 883\n                                                                                                                    // 884\n        e = $.Event('hide')                                                                                         // 885\n                                                                                                                    // 886\n        this.$element.trigger(e)                                                                                    // 887\n                                                                                                                    // 888\n        if (!this.isShown || e.isDefaultPrevented()) return                                                         // 889\n                                                                                                                    // 890\n        this.isShown = false                                                                                        // 891\n                                                                                                                    // 892\n        this.escape()                                                                                               // 893\n                                                                                                                    // 894\n        $(document).off('focusin.modal')                                                                            // 895\n                                                                                                                    // 896\n        this.$element                                                                                               // 897\n          .removeClass('in')                                                                                        // 898\n          .attr('aria-hidden', true)                                                                                // 899\n                                                                                                                    // 900\n        $.support.transition && this.$element.hasClass('fade') ?                                                    // 901\n          this.hideWithTransition() :                                                                               // 902\n          this.hideModal()                                                                                          // 903\n      }                                                                                                             // 904\n                                                                                                                    // 905\n    , enforceFocus: function () {                                                                                   // 906\n        var that = this                                                                                             // 907\n        $(document).on('focusin.modal', function (e) {                                                              // 908\n          if (that.$element[0] !== e.target && !that.$element.has(e.target).length) {                               // 909\n            that.$element.focus()                                                                                   // 910\n          }                                                                                                         // 911\n        })                                                                                                          // 912\n      }                                                                                                             // 913\n                                                                                                                    // 914\n    , escape: function () {                                                                                         // 915\n        var that = this                                                                                             // 916\n        if (this.isShown && this.options.keyboard) {                                                                // 917\n          this.$element.on('keyup.dismiss.modal', function ( e ) {                                                  // 918\n            e.which == 27 && that.hide()                                                                            // 919\n          })                                                                                                        // 920\n        } else if (!this.isShown) {                                                                                 // 921\n          this.$element.off('keyup.dismiss.modal')                                                                  // 922\n        }                                                                                                           // 923\n      }                                                                                                             // 924\n                                                                                                                    // 925\n    , hideWithTransition: function () {                                                                             // 926\n        var that = this                                                                                             // 927\n          , timeout = setTimeout(function () {                                                                      // 928\n              that.$element.off($.support.transition.end)                                                           // 929\n              that.hideModal()                                                                                      // 930\n            }, 500)                                                                                                 // 931\n                                                                                                                    // 932\n        this.$element.one($.support.transition.end, function () {                                                   // 933\n          clearTimeout(timeout)                                                                                     // 934\n          that.hideModal()                                                                                          // 935\n        })                                                                                                          // 936\n      }                                                                                                             // 937\n                                                                                                                    // 938\n    , hideModal: function () {                                                                                      // 939\n        var that = this                                                                                             // 940\n        this.$element.hide()                                                                                        // 941\n        this.backdrop(function () {                                                                                 // 942\n          that.removeBackdrop()                                                                                     // 943\n          that.$element.trigger('hidden')                                                                           // 944\n        })                                                                                                          // 945\n      }                                                                                                             // 946\n                                                                                                                    // 947\n    , removeBackdrop: function () {                                                                                 // 948\n        this.$backdrop.remove()                                                                                     // 949\n        this.$backdrop = null                                                                                       // 950\n      }                                                                                                             // 951\n                                                                                                                    // 952\n    , backdrop: function (callback) {                                                                               // 953\n        var that = this                                                                                             // 954\n          , animate = this.$element.hasClass('fade') ? 'fade' : ''                                                  // 955\n                                                                                                                    // 956\n        if (this.isShown && this.options.backdrop) {                                                                // 957\n          var doAnimate = $.support.transition && animate                                                           // 958\n                                                                                                                    // 959\n          this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')                                      // 960\n            .appendTo(document.body)                                                                                // 961\n                                                                                                                    // 962\n          this.$backdrop.click(                                                                                     // 963\n            this.options.backdrop == 'static' ?                                                                     // 964\n              $.proxy(this.$element[0].focus, this.$element[0])                                                     // 965\n            : $.proxy(this.hide, this)                                                                              // 966\n          )                                                                                                         // 967\n                                                                                                                    // 968\n          if (doAnimate) this.$backdrop[0].offsetWidth // force reflow                                              // 969\n                                                                                                                    // 970\n          this.$backdrop.addClass('in')                                                                             // 971\n                                                                                                                    // 972\n          if (!callback) return                                                                                     // 973\n                                                                                                                    // 974\n          doAnimate ?                                                                                               // 975\n            this.$backdrop.one($.support.transition.end, callback) :                                                // 976\n            callback()                                                                                              // 977\n                                                                                                                    // 978\n        } else if (!this.isShown && this.$backdrop) {                                                               // 979\n          this.$backdrop.removeClass('in')                                                                          // 980\n                                                                                                                    // 981\n          $.support.transition && this.$element.hasClass('fade')?                                                   // 982\n            this.$backdrop.one($.support.transition.end, callback) :                                                // 983\n            callback()                                                                                              // 984\n                                                                                                                    // 985\n        } else if (callback) {                                                                                      // 986\n          callback()                                                                                                // 987\n        }                                                                                                           // 988\n      }                                                                                                             // 989\n  }                                                                                                                 // 990\n                                                                                                                    // 991\n                                                                                                                    // 992\n /* MODAL PLUGIN DEFINITION                                                                                         // 993\n  * ======================= */                                                                                      // 994\n                                                                                                                    // 995\n  var old = $.fn.modal                                                                                              // 996\n                                                                                                                    // 997\n  $.fn.modal = function (option) {                                                                                  // 998\n    return this.each(function () {                                                                                  // 999\n      var $this = $(this)                                                                                           // 1000\n        , data = $this.data('modal')                                                                                // 1001\n        , options = $.extend({}, $.fn.modal.defaults, $this.data(), typeof option == 'object' && option)            // 1002\n      if (!data) $this.data('modal', (data = new Modal(this, options)))                                             // 1003\n      if (typeof option == 'string') data[option]()                                                                 // 1004\n      else if (options.show) data.show()                                                                            // 1005\n    })                                                                                                              // 1006\n  }                                                                                                                 // 1007\n                                                                                                                    // 1008\n  $.fn.modal.defaults = {                                                                                           // 1009\n      backdrop: true                                                                                                // 1010\n    , keyboard: true                                                                                                // 1011\n    , show: true                                                                                                    // 1012\n  }                                                                                                                 // 1013\n                                                                                                                    // 1014\n  $.fn.modal.Constructor = Modal                                                                                    // 1015\n                                                                                                                    // 1016\n                                                                                                                    // 1017\n /* MODAL NO CONFLICT                                                                                               // 1018\n  * ================= */                                                                                            // 1019\n                                                                                                                    // 1020\n  $.fn.modal.noConflict = function () {                                                                             // 1021\n    $.fn.modal = old                                                                                                // 1022\n    return this                                                                                                     // 1023\n  }                                                                                                                 // 1024\n                                                                                                                    // 1025\n                                                                                                                    // 1026\n /* MODAL DATA-API                                                                                                  // 1027\n  * ============== */                                                                                               // 1028\n                                                                                                                    // 1029\n  $(document).on('click.modal.data-api', '[data-toggle=\"modal\"]', function (e) {                                    // 1030\n    var $this = $(this)                                                                                             // 1031\n      , href = $this.attr('href')                                                                                   // 1032\n      , $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) //strip for ie7      // 1033\n      , option = $target.data('modal') ? 'toggle' : $.extend({ remote:!/#/.test(href) && href }, $target.data(), $this.data())\n                                                                                                                    // 1035\n    e.preventDefault()                                                                                              // 1036\n                                                                                                                    // 1037\n    $target                                                                                                         // 1038\n      .modal(option)                                                                                                // 1039\n      .one('hide', function () {                                                                                    // 1040\n        $this.focus()                                                                                               // 1041\n      })                                                                                                            // 1042\n  })                                                                                                                // 1043\n                                                                                                                    // 1044\n}(window.jQuery);                                                                                                   // 1045\n/* ===========================================================                                                      // 1046\n * bootstrap-tooltip.js v2.3.0                                                                                      // 1047\n * http://twitter.github.com/bootstrap/javascript.html#tooltips                                                     // 1048\n * Inspired by the original jQuery.tipsy by Jason Frame                                                             // 1049\n * ===========================================================                                                      // 1050\n * Copyright 2012 Twitter, Inc.                                                                                     // 1051\n *                                                                                                                  // 1052\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 1053\n * you may not use this file except in compliance with the License.                                                 // 1054\n * You may obtain a copy of the License at                                                                          // 1055\n *                                                                                                                  // 1056\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 1057\n *                                                                                                                  // 1058\n * Unless required by applicable law or agreed to in writing, software                                              // 1059\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 1060\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 1061\n * See the License for the specific language governing permissions and                                              // 1062\n * limitations under the License.                                                                                   // 1063\n * ========================================================== */                                                    // 1064\n                                                                                                                    // 1065\n                                                                                                                    // 1066\n!function ($) {                                                                                                     // 1067\n                                                                                                                    // 1068\n  \"use strict\"; // jshint ;_;                                                                                       // 1069\n                                                                                                                    // 1070\n                                                                                                                    // 1071\n /* TOOLTIP PUBLIC CLASS DEFINITION                                                                                 // 1072\n  * =============================== */                                                                              // 1073\n                                                                                                                    // 1074\n  var Tooltip = function (element, options) {                                                                       // 1075\n    this.init('tooltip', element, options)                                                                          // 1076\n  }                                                                                                                 // 1077\n                                                                                                                    // 1078\n  Tooltip.prototype = {                                                                                             // 1079\n                                                                                                                    // 1080\n    constructor: Tooltip                                                                                            // 1081\n                                                                                                                    // 1082\n  , init: function (type, element, options) {                                                                       // 1083\n      var eventIn                                                                                                   // 1084\n        , eventOut                                                                                                  // 1085\n        , triggers                                                                                                  // 1086\n        , trigger                                                                                                   // 1087\n        , i                                                                                                         // 1088\n                                                                                                                    // 1089\n      this.type = type                                                                                              // 1090\n      this.$element = $(element)                                                                                    // 1091\n      this.options = this.getOptions(options)                                                                       // 1092\n      this.enabled = true                                                                                           // 1093\n                                                                                                                    // 1094\n      triggers = this.options.trigger.split(' ')                                                                    // 1095\n                                                                                                                    // 1096\n      for (i = triggers.length; i--;) {                                                                             // 1097\n        trigger = triggers[i]                                                                                       // 1098\n        if (trigger == 'click') {                                                                                   // 1099\n          this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))                 // 1100\n        } else if (trigger != 'manual') {                                                                           // 1101\n          eventIn = trigger == 'hover' ? 'mouseenter' : 'focus'                                                     // 1102\n          eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'                                                     // 1103\n          this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this))             // 1104\n          this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))            // 1105\n        }                                                                                                           // 1106\n      }                                                                                                             // 1107\n                                                                                                                    // 1108\n      this.options.selector ?                                                                                       // 1109\n        (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :                         // 1110\n        this.fixTitle()                                                                                             // 1111\n    }                                                                                                               // 1112\n                                                                                                                    // 1113\n  , getOptions: function (options) {                                                                                // 1114\n      options = $.extend({}, $.fn[this.type].defaults, this.$element.data(), options)                               // 1115\n                                                                                                                    // 1116\n      if (options.delay && typeof options.delay == 'number') {                                                      // 1117\n        options.delay = {                                                                                           // 1118\n          show: options.delay                                                                                       // 1119\n        , hide: options.delay                                                                                       // 1120\n        }                                                                                                           // 1121\n      }                                                                                                             // 1122\n                                                                                                                    // 1123\n      return options                                                                                                // 1124\n    }                                                                                                               // 1125\n                                                                                                                    // 1126\n  , enter: function (e) {                                                                                           // 1127\n      var self = $(e.currentTarget)[this.type](this._options).data(this.type)                                       // 1128\n                                                                                                                    // 1129\n      if (!self.options.delay || !self.options.delay.show) return self.show()                                       // 1130\n                                                                                                                    // 1131\n      clearTimeout(this.timeout)                                                                                    // 1132\n      self.hoverState = 'in'                                                                                        // 1133\n      this.timeout = setTimeout(function() {                                                                        // 1134\n        if (self.hoverState == 'in') self.show()                                                                    // 1135\n      }, self.options.delay.show)                                                                                   // 1136\n    }                                                                                                               // 1137\n                                                                                                                    // 1138\n  , leave: function (e) {                                                                                           // 1139\n      var self = $(e.currentTarget)[this.type](this._options).data(this.type)                                       // 1140\n                                                                                                                    // 1141\n      if (this.timeout) clearTimeout(this.timeout)                                                                  // 1142\n      if (!self.options.delay || !self.options.delay.hide) return self.hide()                                       // 1143\n                                                                                                                    // 1144\n      self.hoverState = 'out'                                                                                       // 1145\n      this.timeout = setTimeout(function() {                                                                        // 1146\n        if (self.hoverState == 'out') self.hide()                                                                   // 1147\n      }, self.options.delay.hide)                                                                                   // 1148\n    }                                                                                                               // 1149\n                                                                                                                    // 1150\n  , show: function () {                                                                                             // 1151\n      var $tip                                                                                                      // 1152\n        , pos                                                                                                       // 1153\n        , actualWidth                                                                                               // 1154\n        , actualHeight                                                                                              // 1155\n        , placement                                                                                                 // 1156\n        , tp                                                                                                        // 1157\n        , e = $.Event('show')                                                                                       // 1158\n                                                                                                                    // 1159\n      if (this.hasContent() && this.enabled) {                                                                      // 1160\n        this.$element.trigger(e)                                                                                    // 1161\n        if (e.isDefaultPrevented()) return                                                                          // 1162\n        $tip = this.tip()                                                                                           // 1163\n        this.setContent()                                                                                           // 1164\n                                                                                                                    // 1165\n        if (this.options.animation) {                                                                               // 1166\n          $tip.addClass('fade')                                                                                     // 1167\n        }                                                                                                           // 1168\n                                                                                                                    // 1169\n        placement = typeof this.options.placement == 'function' ?                                                   // 1170\n          this.options.placement.call(this, $tip[0], this.$element[0]) :                                            // 1171\n          this.options.placement                                                                                    // 1172\n                                                                                                                    // 1173\n        $tip                                                                                                        // 1174\n          .detach()                                                                                                 // 1175\n          .css({ top: 0, left: 0, display: 'block' })                                                               // 1176\n                                                                                                                    // 1177\n        this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)            // 1178\n                                                                                                                    // 1179\n        pos = this.getPosition()                                                                                    // 1180\n                                                                                                                    // 1181\n        actualWidth = $tip[0].offsetWidth                                                                           // 1182\n        actualHeight = $tip[0].offsetHeight                                                                         // 1183\n                                                                                                                    // 1184\n        switch (placement) {                                                                                        // 1185\n          case 'bottom':                                                                                            // 1186\n            tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2}                      // 1187\n            break                                                                                                   // 1188\n          case 'top':                                                                                               // 1189\n            tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2}                    // 1190\n            break                                                                                                   // 1191\n          case 'left':                                                                                              // 1192\n            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth}                   // 1193\n            break                                                                                                   // 1194\n          case 'right':                                                                                             // 1195\n            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width}                     // 1196\n            break                                                                                                   // 1197\n        }                                                                                                           // 1198\n                                                                                                                    // 1199\n        this.applyPlacement(tp, placement)                                                                          // 1200\n        this.$element.trigger('shown')                                                                              // 1201\n      }                                                                                                             // 1202\n    }                                                                                                               // 1203\n                                                                                                                    // 1204\n  , applyPlacement: function(offset, placement){                                                                    // 1205\n      var $tip = this.tip()                                                                                         // 1206\n        , width = $tip[0].offsetWidth                                                                               // 1207\n        , height = $tip[0].offsetHeight                                                                             // 1208\n        , actualWidth                                                                                               // 1209\n        , actualHeight                                                                                              // 1210\n        , delta                                                                                                     // 1211\n        , replace                                                                                                   // 1212\n                                                                                                                    // 1213\n      $tip                                                                                                          // 1214\n        .offset(offset)                                                                                             // 1215\n        .addClass(placement)                                                                                        // 1216\n        .addClass('in')                                                                                             // 1217\n                                                                                                                    // 1218\n      actualWidth = $tip[0].offsetWidth                                                                             // 1219\n      actualHeight = $tip[0].offsetHeight                                                                           // 1220\n                                                                                                                    // 1221\n      if (placement == 'top' && actualHeight != height) {                                                           // 1222\n        offset.top = offset.top + height - actualHeight                                                             // 1223\n        replace = true                                                                                              // 1224\n      }                                                                                                             // 1225\n                                                                                                                    // 1226\n      if (placement == 'bottom' || placement == 'top') {                                                            // 1227\n        delta = 0                                                                                                   // 1228\n                                                                                                                    // 1229\n        if (offset.left < 0){                                                                                       // 1230\n          delta = offset.left * -2                                                                                  // 1231\n          offset.left = 0                                                                                           // 1232\n          $tip.offset(offset)                                                                                       // 1233\n          actualWidth = $tip[0].offsetWidth                                                                         // 1234\n          actualHeight = $tip[0].offsetHeight                                                                       // 1235\n        }                                                                                                           // 1236\n                                                                                                                    // 1237\n        this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')                                         // 1238\n      } else {                                                                                                      // 1239\n        this.replaceArrow(actualHeight - height, actualHeight, 'top')                                               // 1240\n      }                                                                                                             // 1241\n                                                                                                                    // 1242\n      if (replace) $tip.offset(offset)                                                                              // 1243\n    }                                                                                                               // 1244\n                                                                                                                    // 1245\n  , replaceArrow: function(delta, dimension, position){                                                             // 1246\n      this                                                                                                          // 1247\n        .arrow()                                                                                                    // 1248\n        .css(position, delta ? (50 * (1 - delta / dimension) + \"%\") : '')                                           // 1249\n    }                                                                                                               // 1250\n                                                                                                                    // 1251\n  , setContent: function () {                                                                                       // 1252\n      var $tip = this.tip()                                                                                         // 1253\n        , title = this.getTitle()                                                                                   // 1254\n                                                                                                                    // 1255\n      $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)                                       // 1256\n      $tip.removeClass('fade in top bottom left right')                                                             // 1257\n    }                                                                                                               // 1258\n                                                                                                                    // 1259\n  , hide: function () {                                                                                             // 1260\n      var that = this                                                                                               // 1261\n        , $tip = this.tip()                                                                                         // 1262\n        , e = $.Event('hide')                                                                                       // 1263\n                                                                                                                    // 1264\n      this.$element.trigger(e)                                                                                      // 1265\n      if (e.isDefaultPrevented()) return                                                                            // 1266\n                                                                                                                    // 1267\n      $tip.removeClass('in')                                                                                        // 1268\n                                                                                                                    // 1269\n      function removeWithAnimation() {                                                                              // 1270\n        var timeout = setTimeout(function () {                                                                      // 1271\n          $tip.off($.support.transition.end).detach()                                                               // 1272\n        }, 500)                                                                                                     // 1273\n                                                                                                                    // 1274\n        $tip.one($.support.transition.end, function () {                                                            // 1275\n          clearTimeout(timeout)                                                                                     // 1276\n          $tip.detach()                                                                                             // 1277\n        })                                                                                                          // 1278\n      }                                                                                                             // 1279\n                                                                                                                    // 1280\n      $.support.transition && this.$tip.hasClass('fade') ?                                                          // 1281\n        removeWithAnimation() :                                                                                     // 1282\n        $tip.detach()                                                                                               // 1283\n                                                                                                                    // 1284\n      this.$element.trigger('hidden')                                                                               // 1285\n                                                                                                                    // 1286\n      return this                                                                                                   // 1287\n    }                                                                                                               // 1288\n                                                                                                                    // 1289\n  , fixTitle: function () {                                                                                         // 1290\n      var $e = this.$element                                                                                        // 1291\n      if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {                                 // 1292\n        $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')                                    // 1293\n      }                                                                                                             // 1294\n    }                                                                                                               // 1295\n                                                                                                                    // 1296\n  , hasContent: function () {                                                                                       // 1297\n      return this.getTitle()                                                                                        // 1298\n    }                                                                                                               // 1299\n                                                                                                                    // 1300\n  , getPosition: function () {                                                                                      // 1301\n      var el = this.$element[0]                                                                                     // 1302\n      return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {          // 1303\n        width: el.offsetWidth                                                                                       // 1304\n      , height: el.offsetHeight                                                                                     // 1305\n      }, this.$element.offset())                                                                                    // 1306\n    }                                                                                                               // 1307\n                                                                                                                    // 1308\n  , getTitle: function () {                                                                                         // 1309\n      var title                                                                                                     // 1310\n        , $e = this.$element                                                                                        // 1311\n        , o = this.options                                                                                          // 1312\n                                                                                                                    // 1313\n      title = $e.attr('data-original-title')                                                                        // 1314\n        || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)                                          // 1315\n                                                                                                                    // 1316\n      return title                                                                                                  // 1317\n    }                                                                                                               // 1318\n                                                                                                                    // 1319\n  , tip: function () {                                                                                              // 1320\n      return this.$tip = this.$tip || $(this.options.template)                                                      // 1321\n    }                                                                                                               // 1322\n                                                                                                                    // 1323\n  , arrow: function(){                                                                                              // 1324\n      return this.$arrow = this.$arrow || this.tip().find(\".tooltip-arrow\")                                         // 1325\n    }                                                                                                               // 1326\n                                                                                                                    // 1327\n  , validate: function () {                                                                                         // 1328\n      if (!this.$element[0].parentNode) {                                                                           // 1329\n        this.hide()                                                                                                 // 1330\n        this.$element = null                                                                                        // 1331\n        this.options = null                                                                                         // 1332\n      }                                                                                                             // 1333\n    }                                                                                                               // 1334\n                                                                                                                    // 1335\n  , enable: function () {                                                                                           // 1336\n      this.enabled = true                                                                                           // 1337\n    }                                                                                                               // 1338\n                                                                                                                    // 1339\n  , disable: function () {                                                                                          // 1340\n      this.enabled = false                                                                                          // 1341\n    }                                                                                                               // 1342\n                                                                                                                    // 1343\n  , toggleEnabled: function () {                                                                                    // 1344\n      this.enabled = !this.enabled                                                                                  // 1345\n    }                                                                                                               // 1346\n                                                                                                                    // 1347\n  , toggle: function (e) {                                                                                          // 1348\n      var self = e ? $(e.currentTarget)[this.type](this._options).data(this.type) : this                            // 1349\n      self.tip().hasClass('in') ? self.hide() : self.show()                                                         // 1350\n    }                                                                                                               // 1351\n                                                                                                                    // 1352\n  , destroy: function () {                                                                                          // 1353\n      this.hide().$element.off('.' + this.type).removeData(this.type)                                               // 1354\n    }                                                                                                               // 1355\n                                                                                                                    // 1356\n  }                                                                                                                 // 1357\n                                                                                                                    // 1358\n                                                                                                                    // 1359\n /* TOOLTIP PLUGIN DEFINITION                                                                                       // 1360\n  * ========================= */                                                                                    // 1361\n                                                                                                                    // 1362\n  var old = $.fn.tooltip                                                                                            // 1363\n                                                                                                                    // 1364\n  $.fn.tooltip = function ( option ) {                                                                              // 1365\n    return this.each(function () {                                                                                  // 1366\n      var $this = $(this)                                                                                           // 1367\n        , data = $this.data('tooltip')                                                                              // 1368\n        , options = typeof option == 'object' && option                                                             // 1369\n      if (!data) $this.data('tooltip', (data = new Tooltip(this, options)))                                         // 1370\n      if (typeof option == 'string') data[option]()                                                                 // 1371\n    })                                                                                                              // 1372\n  }                                                                                                                 // 1373\n                                                                                                                    // 1374\n  $.fn.tooltip.Constructor = Tooltip                                                                                // 1375\n                                                                                                                    // 1376\n  $.fn.tooltip.defaults = {                                                                                         // 1377\n    animation: true                                                                                                 // 1378\n  , placement: 'top'                                                                                                // 1379\n  , selector: false                                                                                                 // 1380\n  , template: '<div class=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>'       // 1381\n  , trigger: 'hover focus'                                                                                          // 1382\n  , title: ''                                                                                                       // 1383\n  , delay: 0                                                                                                        // 1384\n  , html: false                                                                                                     // 1385\n  , container: false                                                                                                // 1386\n  }                                                                                                                 // 1387\n                                                                                                                    // 1388\n                                                                                                                    // 1389\n /* TOOLTIP NO CONFLICT                                                                                             // 1390\n  * =================== */                                                                                          // 1391\n                                                                                                                    // 1392\n  $.fn.tooltip.noConflict = function () {                                                                           // 1393\n    $.fn.tooltip = old                                                                                              // 1394\n    return this                                                                                                     // 1395\n  }                                                                                                                 // 1396\n                                                                                                                    // 1397\n}(window.jQuery);                                                                                                   // 1398\n/* ===========================================================                                                      // 1399\n * bootstrap-popover.js v2.3.0                                                                                      // 1400\n * http://twitter.github.com/bootstrap/javascript.html#popovers                                                     // 1401\n * ===========================================================                                                      // 1402\n * Copyright 2012 Twitter, Inc.                                                                                     // 1403\n *                                                                                                                  // 1404\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 1405\n * you may not use this file except in compliance with the License.                                                 // 1406\n * You may obtain a copy of the License at                                                                          // 1407\n *                                                                                                                  // 1408\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 1409\n *                                                                                                                  // 1410\n * Unless required by applicable law or agreed to in writing, software                                              // 1411\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 1412\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 1413\n * See the License for the specific language governing permissions and                                              // 1414\n * limitations under the License.                                                                                   // 1415\n * =========================================================== */                                                   // 1416\n                                                                                                                    // 1417\n                                                                                                                    // 1418\n!function ($) {                                                                                                     // 1419\n                                                                                                                    // 1420\n  \"use strict\"; // jshint ;_;                                                                                       // 1421\n                                                                                                                    // 1422\n                                                                                                                    // 1423\n /* POPOVER PUBLIC CLASS DEFINITION                                                                                 // 1424\n  * =============================== */                                                                              // 1425\n                                                                                                                    // 1426\n  var Popover = function (element, options) {                                                                       // 1427\n    this.init('popover', element, options)                                                                          // 1428\n  }                                                                                                                 // 1429\n                                                                                                                    // 1430\n                                                                                                                    // 1431\n  /* NOTE: POPOVER EXTENDS BOOTSTRAP-TOOLTIP.js                                                                     // 1432\n     ========================================== */                                                                  // 1433\n                                                                                                                    // 1434\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype, {                                            // 1435\n                                                                                                                    // 1436\n    constructor: Popover                                                                                            // 1437\n                                                                                                                    // 1438\n  , setContent: function () {                                                                                       // 1439\n      var $tip = this.tip()                                                                                         // 1440\n        , title = this.getTitle()                                                                                   // 1441\n        , content = this.getContent()                                                                               // 1442\n                                                                                                                    // 1443\n      $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)                                       // 1444\n      $tip.find('.popover-content')[this.options.html ? 'html' : 'text'](content)                                   // 1445\n                                                                                                                    // 1446\n      $tip.removeClass('fade top bottom left right in')                                                             // 1447\n    }                                                                                                               // 1448\n                                                                                                                    // 1449\n  , hasContent: function () {                                                                                       // 1450\n      return this.getTitle() || this.getContent()                                                                   // 1451\n    }                                                                                                               // 1452\n                                                                                                                    // 1453\n  , getContent: function () {                                                                                       // 1454\n      var content                                                                                                   // 1455\n        , $e = this.$element                                                                                        // 1456\n        , o = this.options                                                                                          // 1457\n                                                                                                                    // 1458\n      content = (typeof o.content == 'function' ? o.content.call($e[0]) :  o.content)                               // 1459\n        || $e.attr('data-content')                                                                                  // 1460\n                                                                                                                    // 1461\n      return content                                                                                                // 1462\n    }                                                                                                               // 1463\n                                                                                                                    // 1464\n  , tip: function () {                                                                                              // 1465\n      if (!this.$tip) {                                                                                             // 1466\n        this.$tip = $(this.options.template)                                                                        // 1467\n      }                                                                                                             // 1468\n      return this.$tip                                                                                              // 1469\n    }                                                                                                               // 1470\n                                                                                                                    // 1471\n  , destroy: function () {                                                                                          // 1472\n      this.hide().$element.off('.' + this.type).removeData(this.type)                                               // 1473\n    }                                                                                                               // 1474\n                                                                                                                    // 1475\n  })                                                                                                                // 1476\n                                                                                                                    // 1477\n                                                                                                                    // 1478\n /* POPOVER PLUGIN DEFINITION                                                                                       // 1479\n  * ======================= */                                                                                      // 1480\n                                                                                                                    // 1481\n  var old = $.fn.popover                                                                                            // 1482\n                                                                                                                    // 1483\n  $.fn.popover = function (option) {                                                                                // 1484\n    return this.each(function () {                                                                                  // 1485\n      var $this = $(this)                                                                                           // 1486\n        , data = $this.data('popover')                                                                              // 1487\n        , options = typeof option == 'object' && option                                                             // 1488\n      if (!data) $this.data('popover', (data = new Popover(this, options)))                                         // 1489\n      if (typeof option == 'string') data[option]()                                                                 // 1490\n    })                                                                                                              // 1491\n  }                                                                                                                 // 1492\n                                                                                                                    // 1493\n  $.fn.popover.Constructor = Popover                                                                                // 1494\n                                                                                                                    // 1495\n  $.fn.popover.defaults = $.extend({} , $.fn.tooltip.defaults, {                                                    // 1496\n    placement: 'right'                                                                                              // 1497\n  , trigger: 'click'                                                                                                // 1498\n  , content: ''                                                                                                     // 1499\n  , template: '<div class=\"popover\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })                                                                                                                // 1501\n                                                                                                                    // 1502\n                                                                                                                    // 1503\n /* POPOVER NO CONFLICT                                                                                             // 1504\n  * =================== */                                                                                          // 1505\n                                                                                                                    // 1506\n  $.fn.popover.noConflict = function () {                                                                           // 1507\n    $.fn.popover = old                                                                                              // 1508\n    return this                                                                                                     // 1509\n  }                                                                                                                 // 1510\n                                                                                                                    // 1511\n}(window.jQuery);                                                                                                   // 1512\n/* =============================================================                                                    // 1513\n * bootstrap-scrollspy.js v2.3.0                                                                                    // 1514\n * http://twitter.github.com/bootstrap/javascript.html#scrollspy                                                    // 1515\n * =============================================================                                                    // 1516\n * Copyright 2012 Twitter, Inc.                                                                                     // 1517\n *                                                                                                                  // 1518\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 1519\n * you may not use this file except in compliance with the License.                                                 // 1520\n * You may obtain a copy of the License at                                                                          // 1521\n *                                                                                                                  // 1522\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 1523\n *                                                                                                                  // 1524\n * Unless required by applicable law or agreed to in writing, software                                              // 1525\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 1526\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 1527\n * See the License for the specific language governing permissions and                                              // 1528\n * limitations under the License.                                                                                   // 1529\n * ============================================================== */                                                // 1530\n                                                                                                                    // 1531\n                                                                                                                    // 1532\n!function ($) {                                                                                                     // 1533\n                                                                                                                    // 1534\n  \"use strict\"; // jshint ;_;                                                                                       // 1535\n                                                                                                                    // 1536\n                                                                                                                    // 1537\n /* SCROLLSPY CLASS DEFINITION                                                                                      // 1538\n  * ========================== */                                                                                   // 1539\n                                                                                                                    // 1540\n  function ScrollSpy(element, options) {                                                                            // 1541\n    var process = $.proxy(this.process, this)                                                                       // 1542\n      , $element = $(element).is('body') ? $(window) : $(element)                                                   // 1543\n      , href                                                                                                        // 1544\n    this.options = $.extend({}, $.fn.scrollspy.defaults, options)                                                   // 1545\n    this.$scrollElement = $element.on('scroll.scroll-spy.data-api', process)                                        // 1546\n    this.selector = (this.options.target                                                                            // 1547\n      || ((href = $(element).attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) //strip for ie7                   // 1548\n      || '') + ' .nav li > a'                                                                                       // 1549\n    this.$body = $('body')                                                                                          // 1550\n    this.refresh()                                                                                                  // 1551\n    this.process()                                                                                                  // 1552\n  }                                                                                                                 // 1553\n                                                                                                                    // 1554\n  ScrollSpy.prototype = {                                                                                           // 1555\n                                                                                                                    // 1556\n      constructor: ScrollSpy                                                                                        // 1557\n                                                                                                                    // 1558\n    , refresh: function () {                                                                                        // 1559\n        var self = this                                                                                             // 1560\n          , $targets                                                                                                // 1561\n                                                                                                                    // 1562\n        this.offsets = $([])                                                                                        // 1563\n        this.targets = $([])                                                                                        // 1564\n                                                                                                                    // 1565\n        $targets = this.$body                                                                                       // 1566\n          .find(this.selector)                                                                                      // 1567\n          .map(function () {                                                                                        // 1568\n            var $el = $(this)                                                                                       // 1569\n              , href = $el.data('target') || $el.attr('href')                                                       // 1570\n              , $href = /^#\\w/.test(href) && $(href)                                                                // 1571\n            return ( $href                                                                                          // 1572\n              && $href.length                                                                                       // 1573\n              && [[ $href.position().top + (!$.isWindow(self.$scrollElement.get(0)) && self.$scrollElement.scrollTop()), href ]] ) || null\n          })                                                                                                        // 1575\n          .sort(function (a, b) { return a[0] - b[0] })                                                             // 1576\n          .each(function () {                                                                                       // 1577\n            self.offsets.push(this[0])                                                                              // 1578\n            self.targets.push(this[1])                                                                              // 1579\n          })                                                                                                        // 1580\n      }                                                                                                             // 1581\n                                                                                                                    // 1582\n    , process: function () {                                                                                        // 1583\n        var scrollTop = this.$scrollElement.scrollTop() + this.options.offset                                       // 1584\n          , scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight                        // 1585\n          , maxScroll = scrollHeight - this.$scrollElement.height()                                                 // 1586\n          , offsets = this.offsets                                                                                  // 1587\n          , targets = this.targets                                                                                  // 1588\n          , activeTarget = this.activeTarget                                                                        // 1589\n          , i                                                                                                       // 1590\n                                                                                                                    // 1591\n        if (scrollTop >= maxScroll) {                                                                               // 1592\n          return activeTarget != (i = targets.last()[0])                                                            // 1593\n            && this.activate ( i )                                                                                  // 1594\n        }                                                                                                           // 1595\n                                                                                                                    // 1596\n        for (i = offsets.length; i--;) {                                                                            // 1597\n          activeTarget != targets[i]                                                                                // 1598\n            && scrollTop >= offsets[i]                                                                              // 1599\n            && (!offsets[i + 1] || scrollTop <= offsets[i + 1])                                                     // 1600\n            && this.activate( targets[i] )                                                                          // 1601\n        }                                                                                                           // 1602\n      }                                                                                                             // 1603\n                                                                                                                    // 1604\n    , activate: function (target) {                                                                                 // 1605\n        var active                                                                                                  // 1606\n          , selector                                                                                                // 1607\n                                                                                                                    // 1608\n        this.activeTarget = target                                                                                  // 1609\n                                                                                                                    // 1610\n        $(this.selector)                                                                                            // 1611\n          .parent('.active')                                                                                        // 1612\n          .removeClass('active')                                                                                    // 1613\n                                                                                                                    // 1614\n        selector = this.selector                                                                                    // 1615\n          + '[data-target=\"' + target + '\"],'                                                                       // 1616\n          + this.selector + '[href=\"' + target + '\"]'                                                               // 1617\n                                                                                                                    // 1618\n        active = $(selector)                                                                                        // 1619\n          .parent('li')                                                                                             // 1620\n          .addClass('active')                                                                                       // 1621\n                                                                                                                    // 1622\n        if (active.parent('.dropdown-menu').length)  {                                                              // 1623\n          active = active.closest('li.dropdown').addClass('active')                                                 // 1624\n        }                                                                                                           // 1625\n                                                                                                                    // 1626\n        active.trigger('activate')                                                                                  // 1627\n      }                                                                                                             // 1628\n                                                                                                                    // 1629\n  }                                                                                                                 // 1630\n                                                                                                                    // 1631\n                                                                                                                    // 1632\n /* SCROLLSPY PLUGIN DEFINITION                                                                                     // 1633\n  * =========================== */                                                                                  // 1634\n                                                                                                                    // 1635\n  var old = $.fn.scrollspy                                                                                          // 1636\n                                                                                                                    // 1637\n  $.fn.scrollspy = function (option) {                                                                              // 1638\n    return this.each(function () {                                                                                  // 1639\n      var $this = $(this)                                                                                           // 1640\n        , data = $this.data('scrollspy')                                                                            // 1641\n        , options = typeof option == 'object' && option                                                             // 1642\n      if (!data) $this.data('scrollspy', (data = new ScrollSpy(this, options)))                                     // 1643\n      if (typeof option == 'string') data[option]()                                                                 // 1644\n    })                                                                                                              // 1645\n  }                                                                                                                 // 1646\n                                                                                                                    // 1647\n  $.fn.scrollspy.Constructor = ScrollSpy                                                                            // 1648\n                                                                                                                    // 1649\n  $.fn.scrollspy.defaults = {                                                                                       // 1650\n    offset: 10                                                                                                      // 1651\n  }                                                                                                                 // 1652\n                                                                                                                    // 1653\n                                                                                                                    // 1654\n /* SCROLLSPY NO CONFLICT                                                                                           // 1655\n  * ===================== */                                                                                        // 1656\n                                                                                                                    // 1657\n  $.fn.scrollspy.noConflict = function () {                                                                         // 1658\n    $.fn.scrollspy = old                                                                                            // 1659\n    return this                                                                                                     // 1660\n  }                                                                                                                 // 1661\n                                                                                                                    // 1662\n                                                                                                                    // 1663\n /* SCROLLSPY DATA-API                                                                                              // 1664\n  * ================== */                                                                                           // 1665\n                                                                                                                    // 1666\n  $(window).on('load', function () {                                                                                // 1667\n    $('[data-spy=\"scroll\"]').each(function () {                                                                     // 1668\n      var $spy = $(this)                                                                                            // 1669\n      $spy.scrollspy($spy.data())                                                                                   // 1670\n    })                                                                                                              // 1671\n  })                                                                                                                // 1672\n                                                                                                                    // 1673\n}(window.jQuery);/* ========================================================                                        // 1674\n * bootstrap-tab.js v2.3.0                                                                                          // 1675\n * http://twitter.github.com/bootstrap/javascript.html#tabs                                                         // 1676\n * ========================================================                                                         // 1677\n * Copyright 2012 Twitter, Inc.                                                                                     // 1678\n *                                                                                                                  // 1679\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 1680\n * you may not use this file except in compliance with the License.                                                 // 1681\n * You may obtain a copy of the License at                                                                          // 1682\n *                                                                                                                  // 1683\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 1684\n *                                                                                                                  // 1685\n * Unless required by applicable law or agreed to in writing, software                                              // 1686\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 1687\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 1688\n * See the License for the specific language governing permissions and                                              // 1689\n * limitations under the License.                                                                                   // 1690\n * ======================================================== */                                                      // 1691\n                                                                                                                    // 1692\n                                                                                                                    // 1693\n!function ($) {                                                                                                     // 1694\n                                                                                                                    // 1695\n  \"use strict\"; // jshint ;_;                                                                                       // 1696\n                                                                                                                    // 1697\n                                                                                                                    // 1698\n /* TAB CLASS DEFINITION                                                                                            // 1699\n  * ==================== */                                                                                         // 1700\n                                                                                                                    // 1701\n  var Tab = function (element) {                                                                                    // 1702\n    this.element = $(element)                                                                                       // 1703\n  }                                                                                                                 // 1704\n                                                                                                                    // 1705\n  Tab.prototype = {                                                                                                 // 1706\n                                                                                                                    // 1707\n    constructor: Tab                                                                                                // 1708\n                                                                                                                    // 1709\n  , show: function () {                                                                                             // 1710\n      var $this = this.element                                                                                      // 1711\n        , $ul = $this.closest('ul:not(.dropdown-menu)')                                                             // 1712\n        , selector = $this.attr('data-target')                                                                      // 1713\n        , previous                                                                                                  // 1714\n        , $target                                                                                                   // 1715\n        , e                                                                                                         // 1716\n                                                                                                                    // 1717\n      if (!selector) {                                                                                              // 1718\n        selector = $this.attr('href')                                                                               // 1719\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') //strip for ie7                               // 1720\n      }                                                                                                             // 1721\n                                                                                                                    // 1722\n      if ( $this.parent('li').hasClass('active') ) return                                                           // 1723\n                                                                                                                    // 1724\n      previous = $ul.find('.active:last a')[0]                                                                      // 1725\n                                                                                                                    // 1726\n      e = $.Event('show', {                                                                                         // 1727\n        relatedTarget: previous                                                                                     // 1728\n      })                                                                                                            // 1729\n                                                                                                                    // 1730\n      $this.trigger(e)                                                                                              // 1731\n                                                                                                                    // 1732\n      if (e.isDefaultPrevented()) return                                                                            // 1733\n                                                                                                                    // 1734\n      $target = $(selector)                                                                                         // 1735\n                                                                                                                    // 1736\n      this.activate($this.parent('li'), $ul)                                                                        // 1737\n      this.activate($target, $target.parent(), function () {                                                        // 1738\n        $this.trigger({                                                                                             // 1739\n          type: 'shown'                                                                                             // 1740\n        , relatedTarget: previous                                                                                   // 1741\n        })                                                                                                          // 1742\n      })                                                                                                            // 1743\n    }                                                                                                               // 1744\n                                                                                                                    // 1745\n  , activate: function ( element, container, callback) {                                                            // 1746\n      var $active = container.find('> .active')                                                                     // 1747\n        , transition = callback                                                                                     // 1748\n            && $.support.transition                                                                                 // 1749\n            && $active.hasClass('fade')                                                                             // 1750\n                                                                                                                    // 1751\n      function next() {                                                                                             // 1752\n        $active                                                                                                     // 1753\n          .removeClass('active')                                                                                    // 1754\n          .find('> .dropdown-menu > .active')                                                                       // 1755\n          .removeClass('active')                                                                                    // 1756\n                                                                                                                    // 1757\n        element.addClass('active')                                                                                  // 1758\n                                                                                                                    // 1759\n        if (transition) {                                                                                           // 1760\n          element[0].offsetWidth // reflow for transition                                                           // 1761\n          element.addClass('in')                                                                                    // 1762\n        } else {                                                                                                    // 1763\n          element.removeClass('fade')                                                                               // 1764\n        }                                                                                                           // 1765\n                                                                                                                    // 1766\n        if ( element.parent('.dropdown-menu') ) {                                                                   // 1767\n          element.closest('li.dropdown').addClass('active')                                                         // 1768\n        }                                                                                                           // 1769\n                                                                                                                    // 1770\n        callback && callback()                                                                                      // 1771\n      }                                                                                                             // 1772\n                                                                                                                    // 1773\n      transition ?                                                                                                  // 1774\n        $active.one($.support.transition.end, next) :                                                               // 1775\n        next()                                                                                                      // 1776\n                                                                                                                    // 1777\n      $active.removeClass('in')                                                                                     // 1778\n    }                                                                                                               // 1779\n  }                                                                                                                 // 1780\n                                                                                                                    // 1781\n                                                                                                                    // 1782\n /* TAB PLUGIN DEFINITION                                                                                           // 1783\n  * ===================== */                                                                                        // 1784\n                                                                                                                    // 1785\n  var old = $.fn.tab                                                                                                // 1786\n                                                                                                                    // 1787\n  $.fn.tab = function ( option ) {                                                                                  // 1788\n    return this.each(function () {                                                                                  // 1789\n      var $this = $(this)                                                                                           // 1790\n        , data = $this.data('tab')                                                                                  // 1791\n      if (!data) $this.data('tab', (data = new Tab(this)))                                                          // 1792\n      if (typeof option == 'string') data[option]()                                                                 // 1793\n    })                                                                                                              // 1794\n  }                                                                                                                 // 1795\n                                                                                                                    // 1796\n  $.fn.tab.Constructor = Tab                                                                                        // 1797\n                                                                                                                    // 1798\n                                                                                                                    // 1799\n /* TAB NO CONFLICT                                                                                                 // 1800\n  * =============== */                                                                                              // 1801\n                                                                                                                    // 1802\n  $.fn.tab.noConflict = function () {                                                                               // 1803\n    $.fn.tab = old                                                                                                  // 1804\n    return this                                                                                                     // 1805\n  }                                                                                                                 // 1806\n                                                                                                                    // 1807\n                                                                                                                    // 1808\n /* TAB DATA-API                                                                                                    // 1809\n  * ============ */                                                                                                 // 1810\n                                                                                                                    // 1811\n  $(document).on('click.tab.data-api', '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', function (e) {                  // 1812\n    e.preventDefault()                                                                                              // 1813\n    $(this).tab('show')                                                                                             // 1814\n  })                                                                                                                // 1815\n                                                                                                                    // 1816\n}(window.jQuery);/* =============================================================                                   // 1817\n * bootstrap-typeahead.js v2.3.0                                                                                    // 1818\n * http://twitter.github.com/bootstrap/javascript.html#typeahead                                                    // 1819\n * =============================================================                                                    // 1820\n * Copyright 2012 Twitter, Inc.                                                                                     // 1821\n *                                                                                                                  // 1822\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 1823\n * you may not use this file except in compliance with the License.                                                 // 1824\n * You may obtain a copy of the License at                                                                          // 1825\n *                                                                                                                  // 1826\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 1827\n *                                                                                                                  // 1828\n * Unless required by applicable law or agreed to in writing, software                                              // 1829\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 1830\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 1831\n * See the License for the specific language governing permissions and                                              // 1832\n * limitations under the License.                                                                                   // 1833\n * ============================================================ */                                                  // 1834\n                                                                                                                    // 1835\n                                                                                                                    // 1836\n!function($){                                                                                                       // 1837\n                                                                                                                    // 1838\n  \"use strict\"; // jshint ;_;                                                                                       // 1839\n                                                                                                                    // 1840\n                                                                                                                    // 1841\n /* TYPEAHEAD PUBLIC CLASS DEFINITION                                                                               // 1842\n  * ================================= */                                                                            // 1843\n                                                                                                                    // 1844\n  var Typeahead = function (element, options) {                                                                     // 1845\n    this.$element = $(element)                                                                                      // 1846\n    this.options = $.extend({}, $.fn.typeahead.defaults, options)                                                   // 1847\n    this.matcher = this.options.matcher || this.matcher                                                             // 1848\n    this.sorter = this.options.sorter || this.sorter                                                                // 1849\n    this.highlighter = this.options.highlighter || this.highlighter                                                 // 1850\n    this.updater = this.options.updater || this.updater                                                             // 1851\n    this.source = this.options.source                                                                               // 1852\n    this.$menu = $(this.options.menu)                                                                               // 1853\n    this.shown = false                                                                                              // 1854\n    this.listen()                                                                                                   // 1855\n  }                                                                                                                 // 1856\n                                                                                                                    // 1857\n  Typeahead.prototype = {                                                                                           // 1858\n                                                                                                                    // 1859\n    constructor: Typeahead                                                                                          // 1860\n                                                                                                                    // 1861\n  , select: function () {                                                                                           // 1862\n      var val = this.$menu.find('.active').attr('data-value')                                                       // 1863\n      this.$element                                                                                                 // 1864\n        .val(this.updater(val))                                                                                     // 1865\n        .change()                                                                                                   // 1866\n      return this.hide()                                                                                            // 1867\n    }                                                                                                               // 1868\n                                                                                                                    // 1869\n  , updater: function (item) {                                                                                      // 1870\n      return item                                                                                                   // 1871\n    }                                                                                                               // 1872\n                                                                                                                    // 1873\n  , show: function () {                                                                                             // 1874\n      var pos = $.extend({}, this.$element.position(), {                                                            // 1875\n        height: this.$element[0].offsetHeight                                                                       // 1876\n      })                                                                                                            // 1877\n                                                                                                                    // 1878\n      this.$menu                                                                                                    // 1879\n        .insertAfter(this.$element)                                                                                 // 1880\n        .css({                                                                                                      // 1881\n          top: pos.top + pos.height                                                                                 // 1882\n        , left: pos.left                                                                                            // 1883\n        })                                                                                                          // 1884\n        .show()                                                                                                     // 1885\n                                                                                                                    // 1886\n      this.shown = true                                                                                             // 1887\n      return this                                                                                                   // 1888\n    }                                                                                                               // 1889\n                                                                                                                    // 1890\n  , hide: function () {                                                                                             // 1891\n      this.$menu.hide()                                                                                             // 1892\n      this.shown = false                                                                                            // 1893\n      return this                                                                                                   // 1894\n    }                                                                                                               // 1895\n                                                                                                                    // 1896\n  , lookup: function (event) {                                                                                      // 1897\n      var items                                                                                                     // 1898\n                                                                                                                    // 1899\n      this.query = this.$element.val()                                                                              // 1900\n                                                                                                                    // 1901\n      if (!this.query || this.query.length < this.options.minLength) {                                              // 1902\n        return this.shown ? this.hide() : this                                                                      // 1903\n      }                                                                                                             // 1904\n                                                                                                                    // 1905\n      items = $.isFunction(this.source) ? this.source(this.query, $.proxy(this.process, this)) : this.source        // 1906\n                                                                                                                    // 1907\n      return items ? this.process(items) : this                                                                     // 1908\n    }                                                                                                               // 1909\n                                                                                                                    // 1910\n  , process: function (items) {                                                                                     // 1911\n      var that = this                                                                                               // 1912\n                                                                                                                    // 1913\n      items = $.grep(items, function (item) {                                                                       // 1914\n        return that.matcher(item)                                                                                   // 1915\n      })                                                                                                            // 1916\n                                                                                                                    // 1917\n      items = this.sorter(items)                                                                                    // 1918\n                                                                                                                    // 1919\n      if (!items.length) {                                                                                          // 1920\n        return this.shown ? this.hide() : this                                                                      // 1921\n      }                                                                                                             // 1922\n                                                                                                                    // 1923\n      return this.render(items.slice(0, this.options.items)).show()                                                 // 1924\n    }                                                                                                               // 1925\n                                                                                                                    // 1926\n  , matcher: function (item) {                                                                                      // 1927\n      return ~item.toLowerCase().indexOf(this.query.toLowerCase())                                                  // 1928\n    }                                                                                                               // 1929\n                                                                                                                    // 1930\n  , sorter: function (items) {                                                                                      // 1931\n      var beginswith = []                                                                                           // 1932\n        , caseSensitive = []                                                                                        // 1933\n        , caseInsensitive = []                                                                                      // 1934\n        , item                                                                                                      // 1935\n                                                                                                                    // 1936\n      while (item = items.shift()) {                                                                                // 1937\n        if (!item.toLowerCase().indexOf(this.query.toLowerCase())) beginswith.push(item)                            // 1938\n        else if (~item.indexOf(this.query)) caseSensitive.push(item)                                                // 1939\n        else caseInsensitive.push(item)                                                                             // 1940\n      }                                                                                                             // 1941\n                                                                                                                    // 1942\n      return beginswith.concat(caseSensitive, caseInsensitive)                                                      // 1943\n    }                                                                                                               // 1944\n                                                                                                                    // 1945\n  , highlighter: function (item) {                                                                                  // 1946\n      var query = this.query.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&')                                         // 1947\n      return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {                               // 1948\n        return '<strong>' + match + '</strong>'                                                                     // 1949\n      })                                                                                                            // 1950\n    }                                                                                                               // 1951\n                                                                                                                    // 1952\n  , render: function (items) {                                                                                      // 1953\n      var that = this                                                                                               // 1954\n                                                                                                                    // 1955\n      items = $(items).map(function (i, item) {                                                                     // 1956\n        i = $(that.options.item).attr('data-value', item)                                                           // 1957\n        i.find('a').html(that.highlighter(item))                                                                    // 1958\n        return i[0]                                                                                                 // 1959\n      })                                                                                                            // 1960\n                                                                                                                    // 1961\n      items.first().addClass('active')                                                                              // 1962\n      this.$menu.html(items)                                                                                        // 1963\n      return this                                                                                                   // 1964\n    }                                                                                                               // 1965\n                                                                                                                    // 1966\n  , next: function (event) {                                                                                        // 1967\n      var active = this.$menu.find('.active').removeClass('active')                                                 // 1968\n        , next = active.next()                                                                                      // 1969\n                                                                                                                    // 1970\n      if (!next.length) {                                                                                           // 1971\n        next = $(this.$menu.find('li')[0])                                                                          // 1972\n      }                                                                                                             // 1973\n                                                                                                                    // 1974\n      next.addClass('active')                                                                                       // 1975\n    }                                                                                                               // 1976\n                                                                                                                    // 1977\n  , prev: function (event) {                                                                                        // 1978\n      var active = this.$menu.find('.active').removeClass('active')                                                 // 1979\n        , prev = active.prev()                                                                                      // 1980\n                                                                                                                    // 1981\n      if (!prev.length) {                                                                                           // 1982\n        prev = this.$menu.find('li').last()                                                                         // 1983\n      }                                                                                                             // 1984\n                                                                                                                    // 1985\n      prev.addClass('active')                                                                                       // 1986\n    }                                                                                                               // 1987\n                                                                                                                    // 1988\n  , listen: function () {                                                                                           // 1989\n      this.$element                                                                                                 // 1990\n        .on('focus',    $.proxy(this.focus, this))                                                                  // 1991\n        .on('blur',     $.proxy(this.blur, this))                                                                   // 1992\n        .on('keypress', $.proxy(this.keypress, this))                                                               // 1993\n        .on('keyup',    $.proxy(this.keyup, this))                                                                  // 1994\n                                                                                                                    // 1995\n      if (this.eventSupported('keydown')) {                                                                         // 1996\n        this.$element.on('keydown', $.proxy(this.keydown, this))                                                    // 1997\n      }                                                                                                             // 1998\n                                                                                                                    // 1999\n      this.$menu                                                                                                    // 2000\n        .on('click', $.proxy(this.click, this))                                                                     // 2001\n        .on('mouseenter', 'li', $.proxy(this.mouseenter, this))                                                     // 2002\n        .on('mouseleave', 'li', $.proxy(this.mouseleave, this))                                                     // 2003\n    }                                                                                                               // 2004\n                                                                                                                    // 2005\n  , eventSupported: function(eventName) {                                                                           // 2006\n      var isSupported = eventName in this.$element                                                                  // 2007\n      if (!isSupported) {                                                                                           // 2008\n        this.$element.setAttribute(eventName, 'return;')                                                            // 2009\n        isSupported = typeof this.$element[eventName] === 'function'                                                // 2010\n      }                                                                                                             // 2011\n      return isSupported                                                                                            // 2012\n    }                                                                                                               // 2013\n                                                                                                                    // 2014\n  , move: function (e) {                                                                                            // 2015\n      if (!this.shown) return                                                                                       // 2016\n                                                                                                                    // 2017\n      switch(e.keyCode) {                                                                                           // 2018\n        case 9: // tab                                                                                              // 2019\n        case 13: // enter                                                                                           // 2020\n        case 27: // escape                                                                                          // 2021\n          e.preventDefault()                                                                                        // 2022\n          break                                                                                                     // 2023\n                                                                                                                    // 2024\n        case 38: // up arrow                                                                                        // 2025\n          e.preventDefault()                                                                                        // 2026\n          this.prev()                                                                                               // 2027\n          break                                                                                                     // 2028\n                                                                                                                    // 2029\n        case 40: // down arrow                                                                                      // 2030\n          e.preventDefault()                                                                                        // 2031\n          this.next()                                                                                               // 2032\n          break                                                                                                     // 2033\n      }                                                                                                             // 2034\n                                                                                                                    // 2035\n      e.stopPropagation()                                                                                           // 2036\n    }                                                                                                               // 2037\n                                                                                                                    // 2038\n  , keydown: function (e) {                                                                                         // 2039\n      this.suppressKeyPressRepeat = ~$.inArray(e.keyCode, [40,38,9,13,27])                                          // 2040\n      this.move(e)                                                                                                  // 2041\n    }                                                                                                               // 2042\n                                                                                                                    // 2043\n  , keypress: function (e) {                                                                                        // 2044\n      if (this.suppressKeyPressRepeat) return                                                                       // 2045\n      this.move(e)                                                                                                  // 2046\n    }                                                                                                               // 2047\n                                                                                                                    // 2048\n  , keyup: function (e) {                                                                                           // 2049\n      switch(e.keyCode) {                                                                                           // 2050\n        case 40: // down arrow                                                                                      // 2051\n        case 38: // up arrow                                                                                        // 2052\n        case 16: // shift                                                                                           // 2053\n        case 17: // ctrl                                                                                            // 2054\n        case 18: // alt                                                                                             // 2055\n          break                                                                                                     // 2056\n                                                                                                                    // 2057\n        case 9: // tab                                                                                              // 2058\n        case 13: // enter                                                                                           // 2059\n          if (!this.shown) return                                                                                   // 2060\n          this.select()                                                                                             // 2061\n          break                                                                                                     // 2062\n                                                                                                                    // 2063\n        case 27: // escape                                                                                          // 2064\n          if (!this.shown) return                                                                                   // 2065\n          this.hide()                                                                                               // 2066\n          break                                                                                                     // 2067\n                                                                                                                    // 2068\n        default:                                                                                                    // 2069\n          this.lookup()                                                                                             // 2070\n      }                                                                                                             // 2071\n                                                                                                                    // 2072\n      e.stopPropagation()                                                                                           // 2073\n      e.preventDefault()                                                                                            // 2074\n  }                                                                                                                 // 2075\n                                                                                                                    // 2076\n  , focus: function (e) {                                                                                           // 2077\n      this.focused = true                                                                                           // 2078\n    }                                                                                                               // 2079\n                                                                                                                    // 2080\n  , blur: function (e) {                                                                                            // 2081\n      this.focused = false                                                                                          // 2082\n      if (!this.mousedover && this.shown) this.hide()                                                               // 2083\n    }                                                                                                               // 2084\n                                                                                                                    // 2085\n  , click: function (e) {                                                                                           // 2086\n      e.stopPropagation()                                                                                           // 2087\n      e.preventDefault()                                                                                            // 2088\n      this.select()                                                                                                 // 2089\n      this.$element.focus()                                                                                         // 2090\n    }                                                                                                               // 2091\n                                                                                                                    // 2092\n  , mouseenter: function (e) {                                                                                      // 2093\n      this.mousedover = true                                                                                        // 2094\n      this.$menu.find('.active').removeClass('active')                                                              // 2095\n      $(e.currentTarget).addClass('active')                                                                         // 2096\n    }                                                                                                               // 2097\n                                                                                                                    // 2098\n  , mouseleave: function (e) {                                                                                      // 2099\n      this.mousedover = false                                                                                       // 2100\n      if (!this.focused && this.shown) this.hide()                                                                  // 2101\n    }                                                                                                               // 2102\n                                                                                                                    // 2103\n  }                                                                                                                 // 2104\n                                                                                                                    // 2105\n                                                                                                                    // 2106\n  /* TYPEAHEAD PLUGIN DEFINITION                                                                                    // 2107\n   * =========================== */                                                                                 // 2108\n                                                                                                                    // 2109\n  var old = $.fn.typeahead                                                                                          // 2110\n                                                                                                                    // 2111\n  $.fn.typeahead = function (option) {                                                                              // 2112\n    return this.each(function () {                                                                                  // 2113\n      var $this = $(this)                                                                                           // 2114\n        , data = $this.data('typeahead')                                                                            // 2115\n        , options = typeof option == 'object' && option                                                             // 2116\n      if (!data) $this.data('typeahead', (data = new Typeahead(this, options)))                                     // 2117\n      if (typeof option == 'string') data[option]()                                                                 // 2118\n    })                                                                                                              // 2119\n  }                                                                                                                 // 2120\n                                                                                                                    // 2121\n  $.fn.typeahead.defaults = {                                                                                       // 2122\n    source: []                                                                                                      // 2123\n  , items: 8                                                                                                        // 2124\n  , menu: '<ul class=\"typeahead dropdown-menu\"></ul>'                                                               // 2125\n  , item: '<li><a href=\"#\"></a></li>'                                                                               // 2126\n  , minLength: 1                                                                                                    // 2127\n  }                                                                                                                 // 2128\n                                                                                                                    // 2129\n  $.fn.typeahead.Constructor = Typeahead                                                                            // 2130\n                                                                                                                    // 2131\n                                                                                                                    // 2132\n /* TYPEAHEAD NO CONFLICT                                                                                           // 2133\n  * =================== */                                                                                          // 2134\n                                                                                                                    // 2135\n  $.fn.typeahead.noConflict = function () {                                                                         // 2136\n    $.fn.typeahead = old                                                                                            // 2137\n    return this                                                                                                     // 2138\n  }                                                                                                                 // 2139\n                                                                                                                    // 2140\n                                                                                                                    // 2141\n /* TYPEAHEAD DATA-API                                                                                              // 2142\n  * ================== */                                                                                           // 2143\n                                                                                                                    // 2144\n  $(document).on('focus.typeahead.data-api', '[data-provide=\"typeahead\"]', function (e) {                           // 2145\n    var $this = $(this)                                                                                             // 2146\n    if ($this.data('typeahead')) return                                                                             // 2147\n    $this.typeahead($this.data())                                                                                   // 2148\n  })                                                                                                                // 2149\n                                                                                                                    // 2150\n}(window.jQuery);                                                                                                   // 2151\n/* ==========================================================                                                       // 2152\n * bootstrap-affix.js v2.3.0                                                                                        // 2153\n * http://twitter.github.com/bootstrap/javascript.html#affix                                                        // 2154\n * ==========================================================                                                       // 2155\n * Copyright 2012 Twitter, Inc.                                                                                     // 2156\n *                                                                                                                  // 2157\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 2158\n * you may not use this file except in compliance with the License.                                                 // 2159\n * You may obtain a copy of the License at                                                                          // 2160\n *                                                                                                                  // 2161\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 2162\n *                                                                                                                  // 2163\n * Unless required by applicable law or agreed to in writing, software                                              // 2164\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 2165\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 2166\n * See the License for the specific language governing permissions and                                              // 2167\n * limitations under the License.                                                                                   // 2168\n * ========================================================== */                                                    // 2169\n                                                                                                                    // 2170\n                                                                                                                    // 2171\n!function ($) {                                                                                                     // 2172\n                                                                                                                    // 2173\n  \"use strict\"; // jshint ;_;                                                                                       // 2174\n                                                                                                                    // 2175\n                                                                                                                    // 2176\n /* AFFIX CLASS DEFINITION                                                                                          // 2177\n  * ====================== */                                                                                       // 2178\n                                                                                                                    // 2179\n  var Affix = function (element, options) {                                                                         // 2180\n    this.options = $.extend({}, $.fn.affix.defaults, options)                                                       // 2181\n    this.$window = $(window)                                                                                        // 2182\n      .on('scroll.affix.data-api', $.proxy(this.checkPosition, this))                                               // 2183\n      .on('click.affix.data-api',  $.proxy(function () { setTimeout($.proxy(this.checkPosition, this), 1) }, this)) // 2184\n    this.$element = $(element)                                                                                      // 2185\n    this.checkPosition()                                                                                            // 2186\n  }                                                                                                                 // 2187\n                                                                                                                    // 2188\n  Affix.prototype.checkPosition = function () {                                                                     // 2189\n    if (!this.$element.is(':visible')) return                                                                       // 2190\n                                                                                                                    // 2191\n    var scrollHeight = $(document).height()                                                                         // 2192\n      , scrollTop = this.$window.scrollTop()                                                                        // 2193\n      , position = this.$element.offset()                                                                           // 2194\n      , offset = this.options.offset                                                                                // 2195\n      , offsetBottom = offset.bottom                                                                                // 2196\n      , offsetTop = offset.top                                                                                      // 2197\n      , reset = 'affix affix-top affix-bottom'                                                                      // 2198\n      , affix                                                                                                       // 2199\n                                                                                                                    // 2200\n    if (typeof offset != 'object') offsetBottom = offsetTop = offset                                                // 2201\n    if (typeof offsetTop == 'function') offsetTop = offset.top()                                                    // 2202\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom()                                           // 2203\n                                                                                                                    // 2204\n    affix = this.unpin != null && (scrollTop + this.unpin <= position.top) ?                                        // 2205\n      false    : offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ?   // 2206\n      'bottom' : offsetTop != null && scrollTop <= offsetTop ?                                                      // 2207\n      'top'    : false                                                                                              // 2208\n                                                                                                                    // 2209\n    if (this.affixed === affix) return                                                                              // 2210\n                                                                                                                    // 2211\n    this.affixed = affix                                                                                            // 2212\n    this.unpin = affix == 'bottom' ? position.top - scrollTop : null                                                // 2213\n                                                                                                                    // 2214\n    this.$element.removeClass(reset).addClass('affix' + (affix ? '-' + affix : ''))                                 // 2215\n  }                                                                                                                 // 2216\n                                                                                                                    // 2217\n                                                                                                                    // 2218\n /* AFFIX PLUGIN DEFINITION                                                                                         // 2219\n  * ======================= */                                                                                      // 2220\n                                                                                                                    // 2221\n  var old = $.fn.affix                                                                                              // 2222\n                                                                                                                    // 2223\n  $.fn.affix = function (option) {                                                                                  // 2224\n    return this.each(function () {                                                                                  // 2225\n      var $this = $(this)                                                                                           // 2226\n        , data = $this.data('affix')                                                                                // 2227\n        , options = typeof option == 'object' && option                                                             // 2228\n      if (!data) $this.data('affix', (data = new Affix(this, options)))                                             // 2229\n      if (typeof option == 'string') data[option]()                                                                 // 2230\n    })                                                                                                              // 2231\n  }                                                                                                                 // 2232\n                                                                                                                    // 2233\n  $.fn.affix.Constructor = Affix                                                                                    // 2234\n                                                                                                                    // 2235\n  $.fn.affix.defaults = {                                                                                           // 2236\n    offset: 0                                                                                                       // 2237\n  }                                                                                                                 // 2238\n                                                                                                                    // 2239\n                                                                                                                    // 2240\n /* AFFIX NO CONFLICT                                                                                               // 2241\n  * ================= */                                                                                            // 2242\n                                                                                                                    // 2243\n  $.fn.affix.noConflict = function () {                                                                             // 2244\n    $.fn.affix = old                                                                                                // 2245\n    return this                                                                                                     // 2246\n  }                                                                                                                 // 2247\n                                                                                                                    // 2248\n                                                                                                                    // 2249\n /* AFFIX DATA-API                                                                                                  // 2250\n  * ============== */                                                                                               // 2251\n                                                                                                                    // 2252\n  $(window).on('load', function () {                                                                                // 2253\n    $('[data-spy=\"affix\"]').each(function () {                                                                      // 2254\n      var $spy = $(this)                                                                                            // 2255\n        , data = $spy.data()                                                                                        // 2256\n                                                                                                                    // 2257\n      data.offset = data.offset || {}                                                                               // 2258\n                                                                                                                    // 2259\n      data.offsetBottom && (data.offset.bottom = data.offsetBottom)                                                 // 2260\n      data.offsetTop && (data.offset.top = data.offsetTop)                                                          // 2261\n                                                                                                                    // 2262\n      $spy.affix(data)                                                                                              // 2263\n    })                                                                                                              // 2264\n  })                                                                                                                // 2265\n                                                                                                                    // 2266\n                                                                                                                    // 2267\n}(window.jQuery);                                                                                                   // 2268\n                                                                                                                    // 2269\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 2279\n}).call(this);                                                                                                         // 2280\n                                                                                                                       // 2281\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage.bootstrap = {};\n\n})();\n","servePath":"/packages/bootstrap.js","sourceMap":{"version":3,"sources":["/packages/bootstrap/packages/bootstrap.js"],"names":[],"mappingsfile":"/packages/bootstrap.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/bootstrap/js/bootstrap.js                                                                               //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n/* ===================================================                                                              // 1\n * bootstrap-transition.js v2.3.0                                                                                   // 2\n * http://twitter.github.com/bootstrap/javascript.html#transitions                                                  // 3\n * ===================================================                                                              // 4\n * Copyright 2012 Twitter, Inc.                                                                                     // 5\n *                                                                                                                  // 6\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 7\n * you may not use this file except in compliance with the License.                                                 // 8\n * You may obtain a copy of the License at                                                                          // 9\n *                                                                                                                  // 10\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 11\n *                                                                                                                  // 12\n * Unless required by applicable law or agreed to in writing, software                                              // 13\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 14\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 15\n * See the License for the specific language governing permissions and                                              // 16\n * limitations under the License.                                                                                   // 17\n * ========================================================== */                                                    // 18\n                                                                                                                    // 19\n                                                                                                                    // 20\n!function ($) {                                                                                                     // 21\n                                                                                                                    // 22\n  \"use strict\"; // jshint ;_;                                                                                       // 23\n                                                                                                                    // 24\n                                                                                                                    // 25\n  /* CSS TRANSITION SUPPORT (http://www.modernizr.com/)                                                             // 26\n   * ======================================================= */                                                     // 27\n                                                                                                                    // 28\n  $(function () {                                                                                                   // 29\n                                                                                                                    // 30\n    $.support.transition = (function () {                                                                           // 31\n                                                                                                                    // 32\n      var transitionEnd = (function () {                                                                            // 33\n                                                                                                                    // 34\n        var el = document.createElement('bootstrap')                                                                // 35\n          , transEndEventNames = {                                                                                  // 36\n               'WebkitTransition' : 'webkitTransitionEnd'                                                           // 37\n            ,  'MozTransition'    : 'transitionend'                                                                 // 38\n            ,  'OTransition'      : 'oTransitionEnd otransitionend'                                                 // 39\n            ,  'transition'       : 'transitionend'                                                                 // 40\n            }                                                                                                       // 41\n          , name                                                                                                    // 42\n                                                                                                                    // 43\n        for (name in transEndEventNames){                                                                           // 44\n          if (el.style[name] !== undefined) {                                                                       // 45\n            return transEndEventNames[name]                                                                         // 46\n          }                                                                                                         // 47\n        }                                                                                                           // 48\n                                                                                                                    // 49\n      }())                                                                                                          // 50\n                                                                                                                    // 51\n      return transitionEnd && {                                                                                     // 52\n        end: transitionEnd                                                                                          // 53\n      }                                                                                                             // 54\n                                                                                                                    // 55\n    })()                                                                                                            // 56\n                                                                                                                    // 57\n  })                                                                                                                // 58\n                                                                                                                    // 59\n}(window.jQuery);/* ==========================================================                                      // 60\n * bootstrap-alert.js v2.3.0                                                                                        // 61\n * http://twitter.github.com/bootstrap/javascript.html#alerts                                                       // 62\n * ==========================================================                                                       // 63\n * Copyright 2012 Twitter, Inc.                                                                                     // 64\n *                                                                                                                  // 65\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 66\n * you may not use this file except in compliance with the License.                                                 // 67\n * You may obtain a copy of the License at                                                                          // 68\n *                                                                                                                  // 69\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 70\n *                                                                                                                  // 71\n * Unless required by applicable law or agreed to in writing, software                                              // 72\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 73\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 74\n * See the License for the specific language governing permissions and                                              // 75\n * limitations under the License.                                                                                   // 76\n * ========================================================== */                                                    // 77\n                                                                                                                    // 78\n                                                                                                                    // 79\n!function ($) {                                                                                                     // 80\n                                                                                                                    // 81\n  \"use strict\"; // jshint ;_;                                                                                       // 82\n                                                                                                                    // 83\n                                                                                                                    // 84\n /* ALERT CLASS DEFINITION                                                                                          // 85\n  * ====================== */                                                                                       // 86\n                                                                                                                    // 87\n  var dismiss = '[data-dismiss=\"alert\"]'                                                                            // 88\n    , Alert = function (el) {                                                                                       // 89\n        $(el).on('click', dismiss, this.close)                                                                      // 90\n      }                                                                                                             // 91\n                                                                                                                    // 92\n  Alert.prototype.close = function (e) {                                                                            // 93\n    var $this = $(this)                                                                                             // 94\n      , selector = $this.attr('data-target')                                                                        // 95\n      , $parent                                                                                                     // 96\n                                                                                                                    // 97\n    if (!selector) {                                                                                                // 98\n      selector = $this.attr('href')                                                                                 // 99\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') //strip for ie7                                 // 100\n    }                                                                                                               // 101\n                                                                                                                    // 102\n    $parent = $(selector)                                                                                           // 103\n                                                                                                                    // 104\n    e && e.preventDefault()                                                                                         // 105\n                                                                                                                    // 106\n    $parent.length || ($parent = $this.hasClass('alert') ? $this : $this.parent())                                  // 107\n                                                                                                                    // 108\n    $parent.trigger(e = $.Event('close'))                                                                           // 109\n                                                                                                                    // 110\n    if (e.isDefaultPrevented()) return                                                                              // 111\n                                                                                                                    // 112\n    $parent.removeClass('in')                                                                                       // 113\n                                                                                                                    // 114\n    function removeElement() {                                                                                      // 115\n      $parent                                                                                                       // 116\n        .trigger('closed')                                                                                          // 117\n        .remove()                                                                                                   // 118\n    }                                                                                                               // 119\n                                                                                                                    // 120\n    $.support.transition && $parent.hasClass('fade') ?                                                              // 121\n      $parent.on($.support.transition.end, removeElement) :                                                         // 122\n      removeElement()                                                                                               // 123\n  }                                                                                                                 // 124\n                                                                                                                    // 125\n                                                                                                                    // 126\n /* ALERT PLUGIN DEFINITION                                                                                         // 127\n  * ======================= */                                                                                      // 128\n                                                                                                                    // 129\n  var old = $.fn.alert                                                                                              // 130\n                                                                                                                    // 131\n  $.fn.alert = function (option) {                                                                                  // 132\n    return this.each(function () {                                                                                  // 133\n      var $this = $(this)                                                                                           // 134\n        , data = $this.data('alert')                                                                                // 135\n      if (!data) $this.data('alert', (data = new Alert(this)))                                                      // 136\n      if (typeof option == 'string') data[option].call($this)                                                       // 137\n    })                                                                                                              // 138\n  }                                                                                                                 // 139\n                                                                                                                    // 140\n  $.fn.alert.Constructor = Alert                                                                                    // 141\n                                                                                                                    // 142\n                                                                                                                    // 143\n /* ALERT NO CONFLICT                                                                                               // 144\n  * ================= */                                                                                            // 145\n                                                                                                                    // 146\n  $.fn.alert.noConflict = function () {                                                                             // 147\n    $.fn.alert = old                                                                                                // 148\n    return this                                                                                                     // 149\n  }                                                                                                                 // 150\n                                                                                                                    // 151\n                                                                                                                    // 152\n /* ALERT DATA-API                                                                                                  // 153\n  * ============== */                                                                                               // 154\n                                                                                                                    // 155\n  $(document).on('click.alert.data-api', dismiss, Alert.prototype.close)                                            // 156\n                                                                                                                    // 157\n}(window.jQuery);/* ============================================================                                    // 158\n * bootstrap-button.js v2.3.0                                                                                       // 159\n * http://twitter.github.com/bootstrap/javascript.html#buttons                                                      // 160\n * ============================================================                                                     // 161\n * Copyright 2012 Twitter, Inc.                                                                                     // 162\n *                                                                                                                  // 163\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 164\n * you may not use this file except in compliance with the License.                                                 // 165\n * You may obtain a copy of the License at                                                                          // 166\n *                                                                                                                  // 167\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 168\n *                                                                                                                  // 169\n * Unless required by applicable law or agreed to in writing, software                                              // 170\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 171\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 172\n * See the License for the specific language governing permissions and                                              // 173\n * limitations under the License.                                                                                   // 174\n * ============================================================ */                                                  // 175\n                                                                                                                    // 176\n                                                                                                                    // 177\n!function ($) {                                                                                                     // 178\n                                                                                                                    // 179\n  \"use strict\"; // jshint ;_;                                                                                       // 180\n                                                                                                                    // 181\n                                                                                                                    // 182\n /* BUTTON PUBLIC CLASS DEFINITION                                                                                  // 183\n  * ============================== */                                                                               // 184\n                                                                                                                    // 185\n  var Button = function (element, options) {                                                                        // 186\n    this.$element = $(element)                                                                                      // 187\n    this.options = $.extend({}, $.fn.button.defaults, options)                                                      // 188\n  }                                                                                                                 // 189\n                                                                                                                    // 190\n  Button.prototype.setState = function (state) {                                                                    // 191\n    var d = 'disabled'                                                                                              // 192\n      , $el = this.$element                                                                                         // 193\n      , data = $el.data()                                                                                           // 194\n      , val = $el.is('input') ? 'val' : 'html'                                                                      // 195\n                                                                                                                    // 196\n    state = state + 'Text'                                                                                          // 197\n    data.resetText || $el.data('resetText', $el[val]())                                                             // 198\n                                                                                                                    // 199\n    $el[val](data[state] || this.options[state])                                                                    // 200\n                                                                                                                    // 201\n    // push to event loop to allow forms to submit                                                                  // 202\n    setTimeout(function () {                                                                                        // 203\n      state == 'loadingText' ?                                                                                      // 204\n        $el.addClass(d).attr(d, d) :                                                                                // 205\n        $el.removeClass(d).removeAttr(d)                                                                            // 206\n    }, 0)                                                                                                           // 207\n  }                                                                                                                 // 208\n                                                                                                                    // 209\n  Button.prototype.toggle = function () {                                                                           // 210\n    var $parent = this.$element.closest('[data-toggle=\"buttons-radio\"]')                                            // 211\n                                                                                                                    // 212\n    $parent && $parent                                                                                              // 213\n      .find('.active')                                                                                              // 214\n      .removeClass('active')                                                                                        // 215\n                                                                                                                    // 216\n    this.$element.toggleClass('active')                                                                             // 217\n  }                                                                                                                 // 218\n                                                                                                                    // 219\n                                                                                                                    // 220\n /* BUTTON PLUGIN DEFINITION                                                                                        // 221\n  * ======================== */                                                                                     // 222\n                                                                                                                    // 223\n  var old = $.fn.button                                                                                             // 224\n                                                                                                                    // 225\n  $.fn.button = function (option) {                                                                                 // 226\n    return this.each(function () {                                                                                  // 227\n      var $this = $(this)                                                                                           // 228\n        , data = $this.data('button')                                                                               // 229\n        , options = typeof option == 'object' && option                                                             // 230\n      if (!data) $this.data('button', (data = new Button(this, options)))                                           // 231\n      if (option == 'toggle') data.toggle()                                                                         // 232\n      else if (option) data.setState(option)                                                                        // 233\n    })                                                                                                              // 234\n  }                                                                                                                 // 235\n                                                                                                                    // 236\n  $.fn.button.defaults = {                                                                                          // 237\n    loadingText: 'loading...'                                                                                       // 238\n  }                                                                                                                 // 239\n                                                                                                                    // 240\n  $.fn.button.Constructor = Button                                                                                  // 241\n                                                                                                                    // 242\n                                                                                                                    // 243\n /* BUTTON NO CONFLICT                                                                                              // 244\n  * ================== */                                                                                           // 245\n                                                                                                                    // 246\n  $.fn.button.noConflict = function () {                                                                            // 247\n    $.fn.button = old                                                                                               // 248\n    return this                                                                                                     // 249\n  }                                                                                                                 // 250\n                                                                                                                    // 251\n                                                                                                                    // 252\n /* BUTTON DATA-API                                                                                                 // 253\n  * =============== */                                                                                              // 254\n                                                                                                                    // 255\n  $(document).on('click.button.data-api', '[data-toggle^=button]', function (e) {                                   // 256\n    var $btn = $(e.target)                                                                                          // 257\n    if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')                                                          // 258\n    $btn.button('toggle')                                                                                           // 259\n  })                                                                                                                // 260\n                                                                                                                    // 261\n}(window.jQuery);/* ==========================================================                                      // 262\n * bootstrap-carousel.js v2.3.0                                                                                     // 263\n * http://twitter.github.com/bootstrap/javascript.html#carousel                                                     // 264\n * ==========================================================                                                       // 265\n * Copyright 2012 Twitter, Inc.                                                                                     // 266\n *                                                                                                                  // 267\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 268\n * you may not use this file except in compliance with the License.                                                 // 269\n * You may obtain a copy of the License at                                                                          // 270\n *                                                                                                                  // 271\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 272\n *                                                                                                                  // 273\n * Unless required by applicable law or agreed to in writing, software                                              // 274\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 275\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 276\n * See the License for the specific language governing permissions and                                              // 277\n * limitations under the License.                                                                                   // 278\n * ========================================================== */                                                    // 279\n                                                                                                                    // 280\n                                                                                                                    // 281\n!function ($) {                                                                                                     // 282\n                                                                                                                    // 283\n  \"use strict\"; // jshint ;_;                                                                                       // 284\n                                                                                                                    // 285\n                                                                                                                    // 286\n /* CAROUSEL CLASS DEFINITION                                                                                       // 287\n  * ========================= */                                                                                    // 288\n                                                                                                                    // 289\n  var Carousel = function (element, options) {                                                                      // 290\n    this.$element = $(element)                                                                                      // 291\n    this.$indicators = this.$element.find('.carousel-indicators')                                                   // 292\n    this.options = options                                                                                          // 293\n    this.options.pause == 'hover' && this.$element                                                                  // 294\n      .on('mouseenter', $.proxy(this.pause, this))                                                                  // 295\n      .on('mouseleave', $.proxy(this.cycle, this))                                                                  // 296\n  }                                                                                                                 // 297\n                                                                                                                    // 298\n  Carousel.prototype = {                                                                                            // 299\n                                                                                                                    // 300\n    cycle: function (e) {                                                                                           // 301\n      if (!e) this.paused = false                                                                                   // 302\n      if (this.interval) clearInterval(this.interval);                                                              // 303\n      this.options.interval                                                                                         // 304\n        && !this.paused                                                                                             // 305\n        && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))                           // 306\n      return this                                                                                                   // 307\n    }                                                                                                               // 308\n                                                                                                                    // 309\n  , getActiveIndex: function () {                                                                                   // 310\n      this.$active = this.$element.find('.item.active')                                                             // 311\n      this.$items = this.$active.parent().children()                                                                // 312\n      return this.$items.index(this.$active)                                                                        // 313\n    }                                                                                                               // 314\n                                                                                                                    // 315\n  , to: function (pos) {                                                                                            // 316\n      var activeIndex = this.getActiveIndex()                                                                       // 317\n        , that = this                                                                                               // 318\n                                                                                                                    // 319\n      if (pos > (this.$items.length - 1) || pos < 0) return                                                         // 320\n                                                                                                                    // 321\n      if (this.sliding) {                                                                                           // 322\n        return this.$element.one('slid', function () {                                                              // 323\n          that.to(pos)                                                                                              // 324\n        })                                                                                                          // 325\n      }                                                                                                             // 326\n                                                                                                                    // 327\n      if (activeIndex == pos) {                                                                                     // 328\n        return this.pause().cycle()                                                                                 // 329\n      }                                                                                                             // 330\n                                                                                                                    // 331\n      return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]))                                   // 332\n    }                                                                                                               // 333\n                                                                                                                    // 334\n  , pause: function (e) {                                                                                           // 335\n      if (!e) this.paused = true                                                                                    // 336\n      if (this.$element.find('.next, .prev').length && $.support.transition.end) {                                  // 337\n        this.$element.trigger($.support.transition.end)                                                             // 338\n        this.cycle()                                                                                                // 339\n      }                                                                                                             // 340\n      clearInterval(this.interval)                                                                                  // 341\n      this.interval = null                                                                                          // 342\n      return this                                                                                                   // 343\n    }                                                                                                               // 344\n                                                                                                                    // 345\n  , next: function () {                                                                                             // 346\n      if (this.sliding) return                                                                                      // 347\n      return this.slide('next')                                                                                     // 348\n    }                                                                                                               // 349\n                                                                                                                    // 350\n  , prev: function () {                                                                                             // 351\n      if (this.sliding) return                                                                                      // 352\n      return this.slide('prev')                                                                                     // 353\n    }                                                                                                               // 354\n                                                                                                                    // 355\n  , slide: function (type, next) {                                                                                  // 356\n      var $active = this.$element.find('.item.active')                                                              // 357\n        , $next = next || $active[type]()                                                                           // 358\n        , isCycling = this.interval                                                                                 // 359\n        , direction = type == 'next' ? 'left' : 'right'                                                             // 360\n        , fallback  = type == 'next' ? 'first' : 'last'                                                             // 361\n        , that = this                                                                                               // 362\n        , e                                                                                                         // 363\n                                                                                                                    // 364\n      this.sliding = true                                                                                           // 365\n                                                                                                                    // 366\n      isCycling && this.pause()                                                                                     // 367\n                                                                                                                    // 368\n      $next = $next.length ? $next : this.$element.find('.item')[fallback]()                                        // 369\n                                                                                                                    // 370\n      e = $.Event('slide', {                                                                                        // 371\n        relatedTarget: $next[0]                                                                                     // 372\n      , direction: direction                                                                                        // 373\n      })                                                                                                            // 374\n                                                                                                                    // 375\n      if ($next.hasClass('active')) return                                                                          // 376\n                                                                                                                    // 377\n      if (this.$indicators.length) {                                                                                // 378\n        this.$indicators.find('.active').removeClass('active')                                                      // 379\n        this.$element.one('slid', function () {                                                                     // 380\n          var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()])                                // 381\n          $nextIndicator && $nextIndicator.addClass('active')                                                       // 382\n        })                                                                                                          // 383\n      }                                                                                                             // 384\n                                                                                                                    // 385\n      if ($.support.transition && this.$element.hasClass('slide')) {                                                // 386\n        this.$element.trigger(e)                                                                                    // 387\n        if (e.isDefaultPrevented()) return                                                                          // 388\n        $next.addClass(type)                                                                                        // 389\n        $next[0].offsetWidth // force reflow                                                                        // 390\n        $active.addClass(direction)                                                                                 // 391\n        $next.addClass(direction)                                                                                   // 392\n        this.$element.one($.support.transition.end, function () {                                                   // 393\n          $next.removeClass([type, direction].join(' ')).addClass('active')                                         // 394\n          $active.removeClass(['active', direction].join(' '))                                                      // 395\n          that.sliding = false                                                                                      // 396\n          setTimeout(function () { that.$element.trigger('slid') }, 0)                                              // 397\n        })                                                                                                          // 398\n      } else {                                                                                                      // 399\n        this.$element.trigger(e)                                                                                    // 400\n        if (e.isDefaultPrevented()) return                                                                          // 401\n        $active.removeClass('active')                                                                               // 402\n        $next.addClass('active')                                                                                    // 403\n        this.sliding = false                                                                                        // 404\n        this.$element.trigger('slid')                                                                               // 405\n      }                                                                                                             // 406\n                                                                                                                    // 407\n      isCycling && this.cycle()                                                                                     // 408\n                                                                                                                    // 409\n      return this                                                                                                   // 410\n    }                                                                                                               // 411\n                                                                                                                    // 412\n  }                                                                                                                 // 413\n                                                                                                                    // 414\n                                                                                                                    // 415\n /* CAROUSEL PLUGIN DEFINITION                                                                                      // 416\n  * ========================== */                                                                                   // 417\n                                                                                                                    // 418\n  var old = $.fn.carousel                                                                                           // 419\n                                                                                                                    // 420\n  $.fn.carousel = function (option) {                                                                               // 421\n    return this.each(function () {                                                                                  // 422\n      var $this = $(this)                                                                                           // 423\n        , data = $this.data('carousel')                                                                             // 424\n        , options = $.extend({}, $.fn.carousel.defaults, typeof option == 'object' && option)                       // 425\n        , action = typeof option == 'string' ? option : options.slide                                               // 426\n      if (!data) $this.data('carousel', (data = new Carousel(this, options)))                                       // 427\n      if (typeof option == 'number') data.to(option)                                                                // 428\n      else if (action) data[action]()                                                                               // 429\n      else if (options.interval) data.pause().cycle()                                                               // 430\n    })                                                                                                              // 431\n  }                                                                                                                 // 432\n                                                                                                                    // 433\n  $.fn.carousel.defaults = {                                                                                        // 434\n    interval: 5000                                                                                                  // 435\n  , pause: 'hover'                                                                                                  // 436\n  }                                                                                                                 // 437\n                                                                                                                    // 438\n  $.fn.carousel.Constructor = Carousel                                                                              // 439\n                                                                                                                    // 440\n                                                                                                                    // 441\n /* CAROUSEL NO CONFLICT                                                                                            // 442\n  * ==================== */                                                                                         // 443\n                                                                                                                    // 444\n  $.fn.carousel.noConflict = function () {                                                                          // 445\n    $.fn.carousel = old                                                                                             // 446\n    return this                                                                                                     // 447\n  }                                                                                                                 // 448\n                                                                                                                    // 449\n /* CAROUSEL DATA-API                                                                                               // 450\n  * ================= */                                                                                            // 451\n                                                                                                                    // 452\n  $(document).on('click.carousel.data-api', '[data-slide], [data-slide-to]', function (e) {                         // 453\n    var $this = $(this), href                                                                                       // 454\n      , $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) //strip for ie7\n      , options = $.extend({}, $target.data(), $this.data())                                                        // 456\n      , slideIndex                                                                                                  // 457\n                                                                                                                    // 458\n    $target.carousel(options)                                                                                       // 459\n                                                                                                                    // 460\n    if (slideIndex = $this.attr('data-slide-to')) {                                                                 // 461\n      $target.data('carousel').pause().to(slideIndex).cycle()                                                       // 462\n    }                                                                                                               // 463\n                                                                                                                    // 464\n    e.preventDefault()                                                                                              // 465\n  })                                                                                                                // 466\n                                                                                                                    // 467\n}(window.jQuery);/* =============================================================                                   // 468\n * bootstrap-collapse.js v2.3.0                                                                                     // 469\n * http://twitter.github.com/bootstrap/javascript.html#collapse                                                     // 470\n * =============================================================                                                    // 471\n * Copyright 2012 Twitter, Inc.                                                                                     // 472\n *                                                                                                                  // 473\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 474\n * you may not use this file except in compliance with the License.                                                 // 475\n * You may obtain a copy of the License at                                                                          // 476\n *                                                                                                                  // 477\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 478\n *                                                                                                                  // 479\n * Unless required by applicable law or agreed to in writing, software                                              // 480\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 481\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 482\n * See the License for the specific language governing permissions and                                              // 483\n * limitations under the License.                                                                                   // 484\n * ============================================================ */                                                  // 485\n                                                                                                                    // 486\n                                                                                                                    // 487\n!function ($) {                                                                                                     // 488\n                                                                                                                    // 489\n  \"use strict\"; // jshint ;_;                                                                                       // 490\n                                                                                                                    // 491\n                                                                                                                    // 492\n /* COLLAPSE PUBLIC CLASS DEFINITION                                                                                // 493\n  * ================================ */                                                                             // 494\n                                                                                                                    // 495\n  var Collapse = function (element, options) {                                                                      // 496\n    this.$element = $(element)                                                                                      // 497\n    this.options = $.extend({}, $.fn.collapse.defaults, options)                                                    // 498\n                                                                                                                    // 499\n    if (this.options.parent) {                                                                                      // 500\n      this.$parent = $(this.options.parent)                                                                         // 501\n    }                                                                                                               // 502\n                                                                                                                    // 503\n    this.options.toggle && this.toggle()                                                                            // 504\n  }                                                                                                                 // 505\n                                                                                                                    // 506\n  Collapse.prototype = {                                                                                            // 507\n                                                                                                                    // 508\n    constructor: Collapse                                                                                           // 509\n                                                                                                                    // 510\n  , dimension: function () {                                                                                        // 511\n      var hasWidth = this.$element.hasClass('width')                                                                // 512\n      return hasWidth ? 'width' : 'height'                                                                          // 513\n    }                                                                                                               // 514\n                                                                                                                    // 515\n  , show: function () {                                                                                             // 516\n      var dimension                                                                                                 // 517\n        , scroll                                                                                                    // 518\n        , actives                                                                                                   // 519\n        , hasData                                                                                                   // 520\n                                                                                                                    // 521\n      if (this.transitioning || this.$element.hasClass('in')) return                                                // 522\n                                                                                                                    // 523\n      dimension = this.dimension()                                                                                  // 524\n      scroll = $.camelCase(['scroll', dimension].join('-'))                                                         // 525\n      actives = this.$parent && this.$parent.find('> .accordion-group > .in')                                       // 526\n                                                                                                                    // 527\n      if (actives && actives.length) {                                                                              // 528\n        hasData = actives.data('collapse')                                                                          // 529\n        if (hasData && hasData.transitioning) return                                                                // 530\n        actives.collapse('hide')                                                                                    // 531\n        hasData || actives.data('collapse', null)                                                                   // 532\n      }                                                                                                             // 533\n                                                                                                                    // 534\n      this.$element[dimension](0)                                                                                   // 535\n      this.transition('addClass', $.Event('show'), 'shown')                                                         // 536\n      $.support.transition && this.$element[dimension](this.$element[0][scroll])                                    // 537\n    }                                                                                                               // 538\n                                                                                                                    // 539\n  , hide: function () {                                                                                             // 540\n      var dimension                                                                                                 // 541\n      if (this.transitioning || !this.$element.hasClass('in')) return                                               // 542\n      dimension = this.dimension()                                                                                  // 543\n      this.reset(this.$element[dimension]())                                                                        // 544\n      this.transition('removeClass', $.Event('hide'), 'hidden')                                                     // 545\n      this.$element[dimension](0)                                                                                   // 546\n    }                                                                                                               // 547\n                                                                                                                    // 548\n  , reset: function (size) {                                                                                        // 549\n      var dimension = this.dimension()                                                                              // 550\n                                                                                                                    // 551\n      this.$element                                                                                                 // 552\n        .removeClass('collapse')                                                                                    // 553\n        [dimension](size || 'auto')                                                                                 // 554\n        [0].offsetWidth                                                                                             // 555\n                                                                                                                    // 556\n      this.$element[size !== null ? 'addClass' : 'removeClass']('collapse')                                         // 557\n                                                                                                                    // 558\n      return this                                                                                                   // 559\n    }                                                                                                               // 560\n                                                                                                                    // 561\n  , transition: function (method, startEvent, completeEvent) {                                                      // 562\n      var that = this                                                                                               // 563\n        , complete = function () {                                                                                  // 564\n            if (startEvent.type == 'show') that.reset()                                                             // 565\n            that.transitioning = 0                                                                                  // 566\n            that.$element.trigger(completeEvent)                                                                    // 567\n          }                                                                                                         // 568\n                                                                                                                    // 569\n      this.$element.trigger(startEvent)                                                                             // 570\n                                                                                                                    // 571\n      if (startEvent.isDefaultPrevented()) return                                                                   // 572\n                                                                                                                    // 573\n      this.transitioning = 1                                                                                        // 574\n                                                                                                                    // 575\n      this.$element[method]('in')                                                                                   // 576\n                                                                                                                    // 577\n      $.support.transition && this.$element.hasClass('collapse') ?                                                  // 578\n        this.$element.one($.support.transition.end, complete) :                                                     // 579\n        complete()                                                                                                  // 580\n    }                                                                                                               // 581\n                                                                                                                    // 582\n  , toggle: function () {                                                                                           // 583\n      this[this.$element.hasClass('in') ? 'hide' : 'show']()                                                        // 584\n    }                                                                                                               // 585\n                                                                                                                    // 586\n  }                                                                                                                 // 587\n                                                                                                                    // 588\n                                                                                                                    // 589\n /* COLLAPSE PLUGIN DEFINITION                                                                                      // 590\n  * ========================== */                                                                                   // 591\n                                                                                                                    // 592\n  var old = $.fn.collapse                                                                                           // 593\n                                                                                                                    // 594\n  $.fn.collapse = function (option) {                                                                               // 595\n    return this.each(function () {                                                                                  // 596\n      var $this = $(this)                                                                                           // 597\n        , data = $this.data('collapse')                                                                             // 598\n        , options = $.extend({}, $.fn.collapse.defaults, $this.data(), typeof option == 'object' && option)         // 599\n      if (!data) $this.data('collapse', (data = new Collapse(this, options)))                                       // 600\n      if (typeof option == 'string') data[option]()                                                                 // 601\n    })                                                                                                              // 602\n  }                                                                                                                 // 603\n                                                                                                                    // 604\n  $.fn.collapse.defaults = {                                                                                        // 605\n    toggle: true                                                                                                    // 606\n  }                                                                                                                 // 607\n                                                                                                                    // 608\n  $.fn.collapse.Constructor = Collapse                                                                              // 609\n                                                                                                                    // 610\n                                                                                                                    // 611\n /* COLLAPSE NO CONFLICT                                                                                            // 612\n  * ==================== */                                                                                         // 613\n                                                                                                                    // 614\n  $.fn.collapse.noConflict = function () {                                                                          // 615\n    $.fn.collapse = old                                                                                             // 616\n    return this                                                                                                     // 617\n  }                                                                                                                 // 618\n                                                                                                                    // 619\n                                                                                                                    // 620\n /* COLLAPSE DATA-API                                                                                               // 621\n  * ================= */                                                                                            // 622\n                                                                                                                    // 623\n  $(document).on('click.collapse.data-api', '[data-toggle=collapse]', function (e) {                                // 624\n    var $this = $(this), href                                                                                       // 625\n      , target = $this.attr('data-target')                                                                          // 626\n        || e.preventDefault()                                                                                       // 627\n        || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') //strip for ie7                        // 628\n      , option = $(target).data('collapse') ? 'toggle' : $this.data()                                               // 629\n    $this[$(target).hasClass('in') ? 'addClass' : 'removeClass']('collapsed')                                       // 630\n    $(target).collapse(option)                                                                                      // 631\n  })                                                                                                                // 632\n                                                                                                                    // 633\n}(window.jQuery);/* ============================================================                                    // 634\n * bootstrap-dropdown.js v2.3.0                                                                                     // 635\n * http://twitter.github.com/bootstrap/javascript.html#dropdowns                                                    // 636\n * ============================================================                                                     // 637\n * Copyright 2012 Twitter, Inc.                                                                                     // 638\n *                                                                                                                  // 639\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 640\n * you may not use this file except in compliance with the License.                                                 // 641\n * You may obtain a copy of the License at                                                                          // 642\n *                                                                                                                  // 643\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 644\n *                                                                                                                  // 645\n * Unless required by applicable law or agreed to in writing, software                                              // 646\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 647\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 648\n * See the License for the specific language governing permissions and                                              // 649\n * limitations under the License.                                                                                   // 650\n * ============================================================ */                                                  // 651\n                                                                                                                    // 652\n                                                                                                                    // 653\n!function ($) {                                                                                                     // 654\n                                                                                                                    // 655\n  \"use strict\"; // jshint ;_;                                                                                       // 656\n                                                                                                                    // 657\n                                                                                                                    // 658\n /* DROPDOWN CLASS DEFINITION                                                                                       // 659\n  * ========================= */                                                                                    // 660\n                                                                                                                    // 661\n  var toggle = '[data-toggle=dropdown]'                                                                             // 662\n    , Dropdown = function (element) {                                                                               // 663\n        var $el = $(element).on('click.dropdown.data-api', this.toggle)                                             // 664\n        $('html').on('click.dropdown.data-api', function () {                                                       // 665\n          $el.parent().removeClass('open')                                                                          // 666\n        })                                                                                                          // 667\n      }                                                                                                             // 668\n                                                                                                                    // 669\n  Dropdown.prototype = {                                                                                            // 670\n                                                                                                                    // 671\n    constructor: Dropdown                                                                                           // 672\n                                                                                                                    // 673\n  , toggle: function (e) {                                                                                          // 674\n      var $this = $(this)                                                                                           // 675\n        , $parent                                                                                                   // 676\n        , isActive                                                                                                  // 677\n                                                                                                                    // 678\n      if ($this.is('.disabled, :disabled')) return                                                                  // 679\n                                                                                                                    // 680\n      $parent = getParent($this)                                                                                    // 681\n                                                                                                                    // 682\n      isActive = $parent.hasClass('open')                                                                           // 683\n                                                                                                                    // 684\n      clearMenus()                                                                                                  // 685\n                                                                                                                    // 686\n      if (!isActive) {                                                                                              // 687\n        $parent.toggleClass('open')                                                                                 // 688\n      }                                                                                                             // 689\n                                                                                                                    // 690\n      $this.focus()                                                                                                 // 691\n                                                                                                                    // 692\n      return false                                                                                                  // 693\n    }                                                                                                               // 694\n                                                                                                                    // 695\n  , keydown: function (e) {                                                                                         // 696\n      var $this                                                                                                     // 697\n        , $items                                                                                                    // 698\n        , $active                                                                                                   // 699\n        , $parent                                                                                                   // 700\n        , isActive                                                                                                  // 701\n        , index                                                                                                     // 702\n                                                                                                                    // 703\n      if (!/(38|40|27)/.test(e.keyCode)) return                                                                     // 704\n                                                                                                                    // 705\n      $this = $(this)                                                                                               // 706\n                                                                                                                    // 707\n      e.preventDefault()                                                                                            // 708\n      e.stopPropagation()                                                                                           // 709\n                                                                                                                    // 710\n      if ($this.is('.disabled, :disabled')) return                                                                  // 711\n                                                                                                                    // 712\n      $parent = getParent($this)                                                                                    // 713\n                                                                                                                    // 714\n      isActive = $parent.hasClass('open')                                                                           // 715\n                                                                                                                    // 716\n      if (!isActive || (isActive && e.keyCode == 27)) {                                                             // 717\n        if (e.which == 27) $parent.find(toggle).focus()                                                             // 718\n        return $this.click()                                                                                        // 719\n      }                                                                                                             // 720\n                                                                                                                    // 721\n      $items = $('[role=menu] li:not(.divider):visible a', $parent)                                                 // 722\n                                                                                                                    // 723\n      if (!$items.length) return                                                                                    // 724\n                                                                                                                    // 725\n      index = $items.index($items.filter(':focus'))                                                                 // 726\n                                                                                                                    // 727\n      if (e.keyCode == 38 && index > 0) index--                                        // up                        // 728\n      if (e.keyCode == 40 && index < $items.length - 1) index++                        // down                      // 729\n      if (!~index) index = 0                                                                                        // 730\n                                                                                                                    // 731\n      $items                                                                                                        // 732\n        .eq(index)                                                                                                  // 733\n        .focus()                                                                                                    // 734\n    }                                                                                                               // 735\n                                                                                                                    // 736\n  }                                                                                                                 // 737\n                                                                                                                    // 738\n  function clearMenus() {                                                                                           // 739\n    $(toggle).each(function () {                                                                                    // 740\n      getParent($(this)).removeClass('open')                                                                        // 741\n    })                                                                                                              // 742\n  }                                                                                                                 // 743\n                                                                                                                    // 744\n  function getParent($this) {                                                                                       // 745\n    var selector = $this.attr('data-target')                                                                        // 746\n      , $parent                                                                                                     // 747\n                                                                                                                    // 748\n    if (!selector) {                                                                                                // 749\n      selector = $this.attr('href')                                                                                 // 750\n      selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') //strip for ie7           // 751\n    }                                                                                                               // 752\n                                                                                                                    // 753\n    $parent = selector && $(selector)                                                                               // 754\n                                                                                                                    // 755\n    if (!$parent || !$parent.length) $parent = $this.parent()                                                       // 756\n                                                                                                                    // 757\n    return $parent                                                                                                  // 758\n  }                                                                                                                 // 759\n                                                                                                                    // 760\n                                                                                                                    // 761\n  /* DROPDOWN PLUGIN DEFINITION                                                                                     // 762\n   * ========================== */                                                                                  // 763\n                                                                                                                    // 764\n  var old = $.fn.dropdown                                                                                           // 765\n                                                                                                                    // 766\n  $.fn.dropdown = function (option) {                                                                               // 767\n    return this.each(function () {                                                                                  // 768\n      var $this = $(this)                                                                                           // 769\n        , data = $this.data('dropdown')                                                                             // 770\n      if (!data) $this.data('dropdown', (data = new Dropdown(this)))                                                // 771\n      if (typeof option == 'string') data[option].call($this)                                                       // 772\n    })                                                                                                              // 773\n  }                                                                                                                 // 774\n                                                                                                                    // 775\n  $.fn.dropdown.Constructor = Dropdown                                                                              // 776\n                                                                                                                    // 777\n                                                                                                                    // 778\n /* DROPDOWN NO CONFLICT                                                                                            // 779\n  * ==================== */                                                                                         // 780\n                                                                                                                    // 781\n  $.fn.dropdown.noConflict = function () {                                                                          // 782\n    $.fn.dropdown = old                                                                                             // 783\n    return this                                                                                                     // 784\n  }                                                                                                                 // 785\n                                                                                                                    // 786\n                                                                                                                    // 787\n  /* APPLY TO STANDARD DROPDOWN ELEMENTS                                                                            // 788\n   * =================================== */                                                                         // 789\n                                                                                                                    // 790\n  $(document)                                                                                                       // 791\n    .on('click.dropdown.data-api', clearMenus)                                                                      // 792\n    .on('click.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })                          // 793\n    .on('.dropdown-menu', function (e) { e.stopPropagation() })                                                     // 794\n    .on('click.dropdown.data-api'  , toggle, Dropdown.prototype.toggle)                                             // 795\n    .on('keydown.dropdown.data-api', toggle + ', [role=menu]' , Dropdown.prototype.keydown)                         // 796\n                                                                                                                    // 797\n}(window.jQuery);                                                                                                   // 798\n/* =========================================================                                                        // 799\n * bootstrap-modal.js v2.3.0                                                                                        // 800\n * http://twitter.github.com/bootstrap/javascript.html#modals                                                       // 801\n * =========================================================                                                        // 802\n * Copyright 2012 Twitter, Inc.                                                                                     // 803\n *                                                                                                                  // 804\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 805\n * you may not use this file except in compliance with the License.                                                 // 806\n * You may obtain a copy of the License at                                                                          // 807\n *                                                                                                                  // 808\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 809\n *                                                                                                                  // 810\n * Unless required by applicable law or agreed to in writing, software                                              // 811\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 812\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 813\n * See the License for the specific language governing permissions and                                              // 814\n * limitations under the License.                                                                                   // 815\n * ========================================================= */                                                     // 816\n                                                                                                                    // 817\n                                                                                                                    // 818\n!function ($) {                                                                                                     // 819\n                                                                                                                    // 820\n  \"use strict\"; // jshint ;_;                                                                                       // 821\n                                                                                                                    // 822\n                                                                                                                    // 823\n /* MODAL CLASS DEFINITION                                                                                          // 824\n  * ====================== */                                                                                       // 825\n                                                                                                                    // 826\n  var Modal = function (element, options) {                                                                         // 827\n    this.options = options                                                                                          // 828\n    this.$element = $(element)                                                                                      // 829\n      .delegate('[data-dismiss=\"modal\"]', 'click.dismiss.modal', $.proxy(this.hide, this))                          // 830\n    this.options.remote && this.$element.find('.modal-body').load(this.options.remote)                              // 831\n  }                                                                                                                 // 832\n                                                                                                                    // 833\n  Modal.prototype = {                                                                                               // 834\n                                                                                                                    // 835\n      constructor: Modal                                                                                            // 836\n                                                                                                                    // 837\n    , toggle: function () {                                                                                         // 838\n        return this[!this.isShown ? 'show' : 'hide']()                                                              // 839\n      }                                                                                                             // 840\n                                                                                                                    // 841\n    , show: function () {                                                                                           // 842\n        var that = this                                                                                             // 843\n          , e = $.Event('show')                                                                                     // 844\n                                                                                                                    // 845\n        this.$element.trigger(e)                                                                                    // 846\n                                                                                                                    // 847\n        if (this.isShown || e.isDefaultPrevented()) return                                                          // 848\n                                                                                                                    // 849\n        this.isShown = true                                                                                         // 850\n                                                                                                                    // 851\n        this.escape()                                                                                               // 852\n                                                                                                                    // 853\n        this.backdrop(function () {                                                                                 // 854\n          var transition = $.support.transition && that.$element.hasClass('fade')                                   // 855\n                                                                                                                    // 856\n          if (!that.$element.parent().length) {                                                                     // 857\n            that.$element.appendTo(document.body) //don't move modals dom position                                  // 858\n          }                                                                                                         // 859\n                                                                                                                    // 860\n          that.$element.show()                                                                                      // 861\n                                                                                                                    // 862\n          if (transition) {                                                                                         // 863\n            that.$element[0].offsetWidth // force reflow                                                            // 864\n          }                                                                                                         // 865\n                                                                                                                    // 866\n          that.$element                                                                                             // 867\n            .addClass('in')                                                                                         // 868\n            .attr('aria-hidden', false)                                                                             // 869\n                                                                                                                    // 870\n          that.enforceFocus()                                                                                       // 871\n                                                                                                                    // 872\n          transition ?                                                                                              // 873\n            that.$element.one($.support.transition.end, function () { that.$element.focus().trigger('shown') }) :   // 874\n            that.$element.focus().trigger('shown')                                                                  // 875\n                                                                                                                    // 876\n        })                                                                                                          // 877\n      }                                                                                                             // 878\n                                                                                                                    // 879\n    , hide: function (e) {                                                                                          // 880\n        e && e.preventDefault()                                                                                     // 881\n                                                                                                                    // 882\n        var that = this                                                                                             // 883\n                                                                                                                    // 884\n        e = $.Event('hide')                                                                                         // 885\n                                                                                                                    // 886\n        this.$element.trigger(e)                                                                                    // 887\n                                                                                                                    // 888\n        if (!this.isShown || e.isDefaultPrevented()) return                                                         // 889\n                                                                                                                    // 890\n        this.isShown = false                                                                                        // 891\n                                                                                                                    // 892\n        this.escape()                                                                                               // 893\n                                                                                                                    // 894\n        $(document).off('focusin.modal')                                                                            // 895\n                                                                                                                    // 896\n        this.$element                                                                                               // 897\n          .removeClass('in')                                                                                        // 898\n          .attr('aria-hidden', true)                                                                                // 899\n                                                                                                                    // 900\n        $.support.transition && this.$element.hasClass('fade') ?                                                    // 901\n          this.hideWithTransition() :                                                                               // 902\n          this.hideModal()                                                                                          // 903\n      }                                                                                                             // 904\n                                                                                                                    // 905\n    , enforceFocus: function () {                                                                                   // 906\n        var that = this                                                                                             // 907\n        $(document).on('focusin.modal', function (e) {                                                              // 908\n          if (that.$element[0] !== e.target && !that.$element.has(e.target).length) {                               // 909\n            that.$element.focus()                                                                                   // 910\n          }                                                                                                         // 911\n        })                                                                                                          // 912\n      }                                                                                                             // 913\n                                                                                                                    // 914\n    , escape: function () {                                                                                         // 915\n        var that = this                                                                                             // 916\n        if (this.isShown && this.options.keyboard) {                                                                // 917\n          this.$element.on('keyup.dismiss.modal', function ( e ) {                                                  // 918\n            e.which == 27 && that.hide()                                                                            // 919\n          })                                                                                                        // 920\n        } else if (!this.isShown) {                                                                                 // 921\n          this.$element.off('keyup.dismiss.modal')                                                                  // 922\n        }                                                                                                           // 923\n      }                                                                                                             // 924\n                                                                                                                    // 925\n    , hideWithTransition: function () {                                                                             // 926\n        var that = this                                                                                             // 927\n          , timeout = setTimeout(function () {                                                                      // 928\n              that.$element.off($.support.transition.end)                                                           // 929\n              that.hideModal()                                                                                      // 930\n            }, 500)                                                                                                 // 931\n                                                                                                                    // 932\n        this.$element.one($.support.transition.end, function () {                                                   // 933\n          clearTimeout(timeout)                                                                                     // 934\n          that.hideModal()                                                                                          // 935\n        })                                                                                                          // 936\n      }                                                                                                             // 937\n                                                                                                                    // 938\n    , hideModal: function () {                                                                                      // 939\n        var that = this                                                                                             // 940\n        this.$element.hide()                                                                                        // 941\n        this.backdrop(function () {                                                                                 // 942\n          that.removeBackdrop()                                                                                     // 943\n          that.$element.trigger('hidden')                                                                           // 944\n        })                                                                                                          // 945\n      }                                                                                                             // 946\n                                                                                                                    // 947\n    , removeBackdrop: function () {                                                                                 // 948\n        this.$backdrop.remove()                                                                                     // 949\n        this.$backdrop = null                                                                                       // 950\n      }                                                                                                             // 951\n                                                                                                                    // 952\n    , backdrop: function (callback) {                                                                               // 953\n        var that = this                                                                                             // 954\n          , animate = this.$element.hasClass('fade') ? 'fade' : ''                                                  // 955\n                                                                                                                    // 956\n        if (this.isShown && this.options.backdrop) {                                                                // 957\n          var doAnimate = $.support.transition && animate                                                           // 958\n                                                                                                                    // 959\n          this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')                                      // 960\n            .appendTo(document.body)                                                                                // 961\n                                                                                                                    // 962\n          this.$backdrop.click(                                                                                     // 963\n            this.options.backdrop == 'static' ?                                                                     // 964\n              $.proxy(this.$element[0].focus, this.$element[0])                                                     // 965\n            : $.proxy(this.hide, this)                                                                              // 966\n          )                                                                                                         // 967\n                                                                                                                    // 968\n          if (doAnimate) this.$backdrop[0].offsetWidth // force reflow                                              // 969\n                                                                                                                    // 970\n          this.$backdrop.addClass('in')                                                                             // 971\n                                                                                                                    // 972\n          if (!callback) return                                                                                     // 973\n                                                                                                                    // 974\n          doAnimate ?                                                                                               // 975\n            this.$backdrop.one($.support.transition.end, callback) :                                                // 976\n            callback()                                                                                              // 977\n                                                                                                                    // 978\n        } else if (!this.isShown && this.$backdrop) {                                                               // 979\n          this.$backdrop.removeClass('in')                                                                          // 980\n                                                                                                                    // 981\n          $.support.transition && this.$element.hasClass('fade')?                                                   // 982\n            this.$backdrop.one($.support.transition.end, callback) :                                                // 983\n            callback()                                                                                              // 984\n                                                                                                                    // 985\n        } else if (callback) {                                                                                      // 986\n          callback()                                                                                                // 987\n        }                                                                                                           // 988\n      }                                                                                                             // 989\n  }                                                                                                                 // 990\n                                                                                                                    // 991\n                                                                                                                    // 992\n /* MODAL PLUGIN DEFINITION                                                                                         // 993\n  * ======================= */                                                                                      // 994\n                                                                                                                    // 995\n  var old = $.fn.modal                                                                                              // 996\n                                                                                                                    // 997\n  $.fn.modal = function (option) {                                                                                  // 998\n    return this.each(function () {                                                                                  // 999\n      var $this = $(this)                                                                                           // 1000\n        , data = $this.data('modal')                                                                                // 1001\n        , options = $.extend({}, $.fn.modal.defaults, $this.data(), typeof option == 'object' && option)            // 1002\n      if (!data) $this.data('modal', (data = new Modal(this, options)))                                             // 1003\n      if (typeof option == 'string') data[option]()                                                                 // 1004\n      else if (options.show) data.show()                                                                            // 1005\n    })                                                                                                              // 1006\n  }                                                                                                                 // 1007\n                                                                                                                    // 1008\n  $.fn.modal.defaults = {                                                                                           // 1009\n      backdrop: true                                                                                                // 1010\n    , keyboard: true                                                                                                // 1011\n    , show: true                                                                                                    // 1012\n  }                                                                                                                 // 1013\n                                                                                                                    // 1014\n  $.fn.modal.Constructor = Modal                                                                                    // 1015\n                                                                                                                    // 1016\n                                                                                                                    // 1017\n /* MODAL NO CONFLICT                                                                                               // 1018\n  * ================= */                                                                                            // 1019\n                                                                                                                    // 1020\n  $.fn.modal.noConflict = function () {                                                                             // 1021\n    $.fn.modal = old                                                                                                // 1022\n    return this                                                                                                     // 1023\n  }                                                                                                                 // 1024\n                                                                                                                    // 1025\n                                                                                                                    // 1026\n /* MODAL DATA-API                                                                                                  // 1027\n  * ============== */                                                                                               // 1028\n                                                                                                                    // 1029\n  $(document).on('click.modal.data-api', '[data-toggle=\"modal\"]', function (e) {                                    // 1030\n    var $this = $(this)                                                                                             // 1031\n      , href = $this.attr('href')                                                                                   // 1032\n      , $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) //strip for ie7      // 1033\n      , option = $target.data('modal') ? 'toggle' : $.extend({ remote:!/#/.test(href) && href }, $target.data(), $this.data())\n                                                                                                                    // 1035\n    e.preventDefault()                                                                                              // 1036\n                                                                                                                    // 1037\n    $target                                                                                                         // 1038\n      .modal(option)                                                                                                // 1039\n      .one('hide', function () {                                                                                    // 1040\n        $this.focus()                                                                                               // 1041\n      })                                                                                                            // 1042\n  })                                                                                                                // 1043\n                                                                                                                    // 1044\n}(window.jQuery);                                                                                                   // 1045\n/* ===========================================================                                                      // 1046\n * bootstrap-tooltip.js v2.3.0                                                                                      // 1047\n * http://twitter.github.com/bootstrap/javascript.html#tooltips                                                     // 1048\n * Inspired by the original jQuery.tipsy by Jason Frame                                                             // 1049\n * ===========================================================                                                      // 1050\n * Copyright 2012 Twitter, Inc.                                                                                     // 1051\n *                                                                                                                  // 1052\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 1053\n * you may not use this file except in compliance with the License.                                                 // 1054\n * You may obtain a copy of the License at                                                                          // 1055\n *                                                                                                                  // 1056\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 1057\n *                                                                                                                  // 1058\n * Unless required by applicable law or agreed to in writing, software                                              // 1059\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 1060\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 1061\n * See the License for the specific language governing permissions and                                              // 1062\n * limitations under the License.                                                                                   // 1063\n * ========================================================== */                                                    // 1064\n                                                                                                                    // 1065\n                                                                                                                    // 1066\n!function ($) {                                                                                                     // 1067\n                                                                                                                    // 1068\n  \"use strict\"; // jshint ;_;                                                                                       // 1069\n                                                                                                                    // 1070\n                                                                                                                    // 1071\n /* TOOLTIP PUBLIC CLASS DEFINITION                                                                                 // 1072\n  * =============================== */                                                                              // 1073\n                                                                                                                    // 1074\n  var Tooltip = function (element, options) {                                                                       // 1075\n    this.init('tooltip', element, options)                                                                          // 1076\n  }                                                                                                                 // 1077\n                                                                                                                    // 1078\n  Tooltip.prototype = {                                                                                             // 1079\n                                                                                                                    // 1080\n    constructor: Tooltip                                                                                            // 1081\n                                                                                                                    // 1082\n  , init: function (type, element, options) {                                                                       // 1083\n      var eventIn                                                                                                   // 1084\n        , eventOut                                                                                                  // 1085\n        , triggers                                                                                                  // 1086\n        , trigger                                                                                                   // 1087\n        , i                                                                                                         // 1088\n                                                                                                                    // 1089\n      this.type = type                                                                                              // 1090\n      this.$element = $(element)                                                                                    // 1091\n      this.options = this.getOptions(options)                                                                       // 1092\n      this.enabled = true                                                                                           // 1093\n                                                                                                                    // 1094\n      triggers = this.options.trigger.split(' ')                                                                    // 1095\n                                                                                                                    // 1096\n      for (i = triggers.length; i--;) {                                                                             // 1097\n        trigger = triggers[i]                                                                                       // 1098\n        if (trigger == 'click') {                                                                                   // 1099\n          this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))                 // 1100\n        } else if (trigger != 'manual') {                                                                           // 1101\n          eventIn = trigger == 'hover' ? 'mouseenter' : 'focus'                                                     // 1102\n          eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'                                                     // 1103\n          this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this))             // 1104\n          this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))            // 1105\n        }                                                                                                           // 1106\n      }                                                                                                             // 1107\n                                                                                                                    // 1108\n      this.options.selector ?                                                                                       // 1109\n        (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :                         // 1110\n        this.fixTitle()                                                                                             // 1111\n    }                                                                                                               // 1112\n                                                                                                                    // 1113\n  , getOptions: function (options) {                                                                                // 1114\n      options = $.extend({}, $.fn[this.type].defaults, this.$element.data(), options)                               // 1115\n                                                                                                                    // 1116\n      if (options.delay && typeof options.delay == 'number') {                                                      // 1117\n        options.delay = {                                                                                           // 1118\n          show: options.delay                                                                                       // 1119\n        , hide: options.delay                                                                                       // 1120\n        }                                                                                                           // 1121\n      }                                                                                                             // 1122\n                                                                                                                    // 1123\n      return options                                                                                                // 1124\n    }                                                                                                               // 1125\n                                                                                                                    // 1126\n  , enter: function (e) {                                                                                           // 1127\n      var self = $(e.currentTarget)[this.type](this._options).data(this.type)                                       // 1128\n                                                                                                                    // 1129\n      if (!self.options.delay || !self.options.delay.show) return self.show()                                       // 1130\n                                                                                                                    // 1131\n      clearTimeout(this.timeout)                                                                                    // 1132\n      self.hoverState = 'in'                                                                                        // 1133\n      this.timeout = setTimeout(function() {                                                                        // 1134\n        if (self.hoverState == 'in') self.show()                                                                    // 1135\n      }, self.options.delay.show)                                                                                   // 1136\n    }                                                                                                               // 1137\n                                                                                                                    // 1138\n  , leave: function (e) {                                                                                           // 1139\n      var self = $(e.currentTarget)[this.type](this._options).data(this.type)                                       // 1140\n                                                                                                                    // 1141\n      if (this.timeout) clearTimeout(this.timeout)                                                                  // 1142\n      if (!self.options.delay || !self.options.delay.hide) return self.hide()                                       // 1143\n                                                                                                                    // 1144\n      self.hoverState = 'out'                                                                                       // 1145\n      this.timeout = setTimeout(function() {                                                                        // 1146\n        if (self.hoverState == 'out') self.hide()                                                                   // 1147\n      }, self.options.delay.hide)                                                                                   // 1148\n    }                                                                                                               // 1149\n                                                                                                                    // 1150\n  , show: function () {                                                                                             // 1151\n      var $tip                                                                                                      // 1152\n        , pos                                                                                                       // 1153\n        , actualWidth                                                                                               // 1154\n        , actualHeight                                                                                              // 1155\n        , placement                                                                                                 // 1156\n        , tp                                                                                                        // 1157\n        , e = $.Event('show')                                                                                       // 1158\n                                                                                                                    // 1159\n      if (this.hasContent() && this.enabled) {                                                                      // 1160\n        this.$element.trigger(e)                                                                                    // 1161\n        if (e.isDefaultPrevented()) return                                                                          // 1162\n        $tip = this.tip()                                                                                           // 1163\n        this.setContent()                                                                                           // 1164\n                                                                                                                    // 1165\n        if (this.options.animation) {                                                                               // 1166\n          $tip.addClass('fade')                                                                                     // 1167\n        }                                                                                                           // 1168\n                                                                                                                    // 1169\n        placement = typeof this.options.placement == 'function' ?                                                   // 1170\n          this.options.placement.call(this, $tip[0], this.$element[0]) :                                            // 1171\n          this.options.placement                                                                                    // 1172\n                                                                                                                    // 1173\n        $tip                                                                                                        // 1174\n          .detach()                                                                                                 // 1175\n          .css({ top: 0, left: 0, display: 'block' })                                                               // 1176\n                                                                                                                    // 1177\n        this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)            // 1178\n                                                                                                                    // 1179\n        pos = this.getPosition()                                                                                    // 1180\n                                                                                                                    // 1181\n        actualWidth = $tip[0].offsetWidth                                                                           // 1182\n        actualHeight = $tip[0].offsetHeight                                                                         // 1183\n                                                                                                                    // 1184\n        switch (placement) {                                                                                        // 1185\n          case 'bottom':                                                                                            // 1186\n            tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2}                      // 1187\n            break                                                                                                   // 1188\n          case 'top':                                                                                               // 1189\n            tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2}                    // 1190\n            break                                                                                                   // 1191\n          case 'left':                                                                                              // 1192\n            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth}                   // 1193\n            break                                                                                                   // 1194\n          case 'right':                                                                                             // 1195\n            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width}                     // 1196\n            break                                                                                                   // 1197\n        }                                                                                                           // 1198\n                                                                                                                    // 1199\n        this.applyPlacement(tp, placement)                                                                          // 1200\n        this.$element.trigger('shown')                                                                              // 1201\n      }                                                                                                             // 1202\n    }                                                                                                               // 1203\n                                                                                                                    // 1204\n  , applyPlacement: function(offset, placement){                                                                    // 1205\n      var $tip = this.tip()                                                                                         // 1206\n        , width = $tip[0].offsetWidth                                                                               // 1207\n        , height = $tip[0].offsetHeight                                                                             // 1208\n        , actualWidth                                                                                               // 1209\n        , actualHeight                                                                                              // 1210\n        , delta                                                                                                     // 1211\n        , replace                                                                                                   // 1212\n                                                                                                                    // 1213\n      $tip                                                                                                          // 1214\n        .offset(offset)                                                                                             // 1215\n        .addClass(placement)                                                                                        // 1216\n        .addClass('in')                                                                                             // 1217\n                                                                                                                    // 1218\n      actualWidth = $tip[0].offsetWidth                                                                             // 1219\n      actualHeight = $tip[0].offsetHeight                                                                           // 1220\n                                                                                                                    // 1221\n      if (placement == 'top' && actualHeight != height) {                                                           // 1222\n        offset.top = offset.top + height - actualHeight                                                             // 1223\n        replace = true                                                                                              // 1224\n      }                                                                                                             // 1225\n                                                                                                                    // 1226\n      if (placement == 'bottom' || placement == 'top') {                                                            // 1227\n        delta = 0                                                                                                   // 1228\n                                                                                                                    // 1229\n        if (offset.left < 0){                                                                                       // 1230\n          delta = offset.left * -2                                                                                  // 1231\n          offset.left = 0                                                                                           // 1232\n          $tip.offset(offset)                                                                                       // 1233\n          actualWidth = $tip[0].offsetWidth                                                                         // 1234\n          actualHeight = $tip[0].offsetHeight                                                                       // 1235\n        }                                                                                                           // 1236\n                                                                                                                    // 1237\n        this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')                                         // 1238\n      } else {                                                                                                      // 1239\n        this.replaceArrow(actualHeight - height, actualHeight, 'top')                                               // 1240\n      }                                                                                                             // 1241\n                                                                                                                    // 1242\n      if (replace) $tip.offset(offset)                                                                              // 1243\n    }                                                                                                               // 1244\n                                                                                                                    // 1245\n  , replaceArrow: function(delta, dimension, position){                                                             // 1246\n      this                                                                                                          // 1247\n        .arrow()                                                                                                    // 1248\n        .css(position, delta ? (50 * (1 - delta / dimension) + \"%\") : '')                                           // 1249\n    }                                                                                                               // 1250\n                                                                                                                    // 1251\n  , setContent: function () {                                                                                       // 1252\n      var $tip = this.tip()                                                                                         // 1253\n        , title = this.getTitle()                                                                                   // 1254\n                                                                                                                    // 1255\n      $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)                                       // 1256\n      $tip.removeClass('fade in top bottom left right')                                                             // 1257\n    }                                                                                                               // 1258\n                                                                                                                    // 1259\n  , hide: function () {                                                                                             // 1260\n      var that = this                                                                                               // 1261\n        , $tip = this.tip()                                                                                         // 1262\n        , e = $.Event('hide')                                                                                       // 1263\n                                                                                                                    // 1264\n      this.$element.trigger(e)                                                                                      // 1265\n      if (e.isDefaultPrevented()) return                                                                            // 1266\n                                                                                                                    // 1267\n      $tip.removeClass('in')                                                                                        // 1268\n                                                                                                                    // 1269\n      function removeWithAnimation() {                                                                              // 1270\n        var timeout = setTimeout(function () {                                                                      // 1271\n          $tip.off($.support.transition.end).detach()                                                               // 1272\n        }, 500)                                                                                                     // 1273\n                                                                                                                    // 1274\n        $tip.one($.support.transition.end, function () {                                                            // 1275\n          clearTimeout(timeout)                                                                                     // 1276\n          $tip.detach()                                                                                             // 1277\n        })                                                                                                          // 1278\n      }                                                                                                             // 1279\n                                                                                                                    // 1280\n      $.support.transition && this.$tip.hasClass('fade') ?                                                          // 1281\n        removeWithAnimation() :                                                                                     // 1282\n        $tip.detach()                                                                                               // 1283\n                                                                                                                    // 1284\n      this.$element.trigger('hidden')                                                                               // 1285\n                                                                                                                    // 1286\n      return this                                                                                                   // 1287\n    }                                                                                                               // 1288\n                                                                                                                    // 1289\n  , fixTitle: function () {                                                                                         // 1290\n      var $e = this.$element                                                                                        // 1291\n      if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {                                 // 1292\n        $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')                                    // 1293\n      }                                                                                                             // 1294\n    }                                                                                                               // 1295\n                                                                                                                    // 1296\n  , hasContent: function () {                                                                                       // 1297\n      return this.getTitle()                                                                                        // 1298\n    }                                                                                                               // 1299\n                                                                                                                    // 1300\n  , getPosition: function () {                                                                                      // 1301\n      var el = this.$element[0]                                                                                     // 1302\n      return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {          // 1303\n        width: el.offsetWidth                                                                                       // 1304\n      , height: el.offsetHeight                                                                                     // 1305\n      }, this.$element.offset())                                                                                    // 1306\n    }                                                                                                               // 1307\n                                                                                                                    // 1308\n  , getTitle: function () {                                                                                         // 1309\n      var title                                                                                                     // 1310\n        , $e = this.$element                                                                                        // 1311\n        , o = this.options                                                                                          // 1312\n                                                                                                                    // 1313\n      title = $e.attr('data-original-title')                                                                        // 1314\n        || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)                                          // 1315\n                                                                                                                    // 1316\n      return title                                                                                                  // 1317\n    }                                                                                                               // 1318\n                                                                                                                    // 1319\n  , tip: function () {                                                                                              // 1320\n      return this.$tip = this.$tip || $(this.options.template)                                                      // 1321\n    }                                                                                                               // 1322\n                                                                                                                    // 1323\n  , arrow: function(){                                                                                              // 1324\n      return this.$arrow = this.$arrow || this.tip().find(\".tooltip-arrow\")                                         // 1325\n    }                                                                                                               // 1326\n                                                                                                                    // 1327\n  , validate: function () {                                                                                         // 1328\n      if (!this.$element[0].parentNode) {                                                                           // 1329\n        this.hide()                                                                                                 // 1330\n        this.$element = null                                                                                        // 1331\n        this.options = null                                                                                         // 1332\n      }                                                                                                             // 1333\n    }                                                                                                               // 1334\n                                                                                                                    // 1335\n  , enable: function () {                                                                                           // 1336\n      this.enabled = true                                                                                           // 1337\n    }                                                                                                               // 1338\n                                                                                                                    // 1339\n  , disable: function () {                                                                                          // 1340\n      this.enabled = false                                                                                          // 1341\n    }                                                                                                               // 1342\n                                                                                                                    // 1343\n  , toggleEnabled: function () {                                                                                    // 1344\n      this.enabled = !this.enabled                                                                                  // 1345\n    }                                                                                                               // 1346\n                                                                                                                    // 1347\n  , toggle: function (e) {                                                                                          // 1348\n      var self = e ? $(e.currentTarget)[this.type](this._options).data(this.type) : this                            // 1349\n      self.tip().hasClass('in') ? self.hide() : self.show()                                                         // 1350\n    }                                                                                                               // 1351\n                                                                                                                    // 1352\n  , destroy: function () {                                                                                          // 1353\n      this.hide().$element.off('.' + this.type).removeData(this.type)                                               // 1354\n    }                                                                                                               // 1355\n                                                                                                                    // 1356\n  }                                                                                                                 // 1357\n                                                                                                                    // 1358\n                                                                                                                    // 1359\n /* TOOLTIP PLUGIN DEFINITION                                                                                       // 1360\n  * ========================= */                                                                                    // 1361\n                                                                                                                    // 1362\n  var old = $.fn.tooltip                                                                                            // 1363\n                                                                                                                    // 1364\n  $.fn.tooltip = function ( option ) {                                                                              // 1365\n    return this.each(function () {                                                                                  // 1366\n      var $this = $(this)                                                                                           // 1367\n        , data = $this.data('tooltip')                                                                              // 1368\n        , options = typeof option == 'object' && option                                                             // 1369\n      if (!data) $this.data('tooltip', (data = new Tooltip(this, options)))                                         // 1370\n      if (typeof option == 'string') data[option]()                                                                 // 1371\n    })                                                                                                              // 1372\n  }                                                                                                                 // 1373\n                                                                                                                    // 1374\n  $.fn.tooltip.Constructor = Tooltip                                                                                // 1375\n                                                                                                                    // 1376\n  $.fn.tooltip.defaults = {                                                                                         // 1377\n    animation: true                                                                                                 // 1378\n  , placement: 'top'                                                                                                // 1379\n  , selector: false                                                                                                 // 1380\n  , template: '<div class=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>'       // 1381\n  , trigger: 'hover focus'                                                                                          // 1382\n  , title: ''                                                                                                       // 1383\n  , delay: 0                                                                                                        // 1384\n  , html: false                                                                                                     // 1385\n  , container: false                                                                                                // 1386\n  }                                                                                                                 // 1387\n                                                                                                                    // 1388\n                                                                                                                    // 1389\n /* TOOLTIP NO CONFLICT                                                                                             // 1390\n  * =================== */                                                                                          // 1391\n                                                                                                                    // 1392\n  $.fn.tooltip.noConflict = function () {                                                                           // 1393\n    $.fn.tooltip = old                                                                                              // 1394\n    return this                                                                                                     // 1395\n  }                                                                                                                 // 1396\n                                                                                                                    // 1397\n}(window.jQuery);                                                                                                   // 1398\n/* ===========================================================                                                      // 1399\n * bootstrap-popover.js v2.3.0                                                                                      // 1400\n * http://twitter.github.com/bootstrap/javascript.html#popovers                                                     // 1401\n * ===========================================================                                                      // 1402\n * Copyright 2012 Twitter, Inc.                                                                                     // 1403\n *                                                                                                                  // 1404\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 1405\n * you may not use this file except in compliance with the License.                                                 // 1406\n * You may obtain a copy of the License at                                                                          // 1407\n *                                                                                                                  // 1408\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 1409\n *                                                                                                                  // 1410\n * Unless required by applicable law or agreed to in writing, software                                              // 1411\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 1412\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 1413\n * See the License for the specific language governing permissions and                                              // 1414\n * limitations under the License.                                                                                   // 1415\n * =========================================================== */                                                   // 1416\n                                                                                                                    // 1417\n                                                                                                                    // 1418\n!function ($) {                                                                                                     // 1419\n                                                                                                                    // 1420\n  \"use strict\"; // jshint ;_;                                                                                       // 1421\n                                                                                                                    // 1422\n                                                                                                                    // 1423\n /* POPOVER PUBLIC CLASS DEFINITION                                                                                 // 1424\n  * =============================== */                                                                              // 1425\n                                                                                                                    // 1426\n  var Popover = function (element, options) {                                                                       // 1427\n    this.init('popover', element, options)                                                                          // 1428\n  }                                                                                                                 // 1429\n                                                                                                                    // 1430\n                                                                                                                    // 1431\n  /* NOTE: POPOVER EXTENDS BOOTSTRAP-TOOLTIP.js                                                                     // 1432\n     ========================================== */                                                                  // 1433\n                                                                                                                    // 1434\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype, {                                            // 1435\n                                                                                                                    // 1436\n    constructor: Popover                                                                                            // 1437\n                                                                                                                    // 1438\n  , setContent: function () {                                                                                       // 1439\n      var $tip = this.tip()                                                                                         // 1440\n        , title = this.getTitle()                                                                                   // 1441\n        , content = this.getContent()                                                                               // 1442\n                                                                                                                    // 1443\n      $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)                                       // 1444\n      $tip.find('.popover-content')[this.options.html ? 'html' : 'text'](content)                                   // 1445\n                                                                                                                    // 1446\n      $tip.removeClass('fade top bottom left right in')                                                             // 1447\n    }                                                                                                               // 1448\n                                                                                                                    // 1449\n  , hasContent: function () {                                                                                       // 1450\n      return this.getTitle() || this.getContent()                                                                   // 1451\n    }                                                                                                               // 1452\n                                                                                                                    // 1453\n  , getContent: function () {                                                                                       // 1454\n      var content                                                                                                   // 1455\n        , $e = this.$element                                                                                        // 1456\n        , o = this.options                                                                                          // 1457\n                                                                                                                    // 1458\n      content = (typeof o.content == 'function' ? o.content.call($e[0]) :  o.content)                               // 1459\n        || $e.attr('data-content')                                                                                  // 1460\n                                                                                                                    // 1461\n      return content                                                                                                // 1462\n    }                                                                                                               // 1463\n                                                                                                                    // 1464\n  , tip: function () {                                                                                              // 1465\n      if (!this.$tip) {                                                                                             // 1466\n        this.$tip = $(this.options.template)                                                                        // 1467\n      }                                                                                                             // 1468\n      return this.$tip                                                                                              // 1469\n    }                                                                                                               // 1470\n                                                                                                                    // 1471\n  , destroy: function () {                                                                                          // 1472\n      this.hide().$element.off('.' + this.type).removeData(this.type)                                               // 1473\n    }                                                                                                               // 1474\n                                                                                                                    // 1475\n  })                                                                                                                // 1476\n                                                                                                                    // 1477\n                                                                                                                    // 1478\n /* POPOVER PLUGIN DEFINITION                                                                                       // 1479\n  * ======================= */                                                                                      // 1480\n                                                                                                                    // 1481\n  var old = $.fn.popover                                                                                            // 1482\n                                                                                                                    // 1483\n  $.fn.popover = function (option) {                                                                                // 1484\n    return this.each(function () {                                                                                  // 1485\n      var $this = $(this)                                                                                           // 1486\n        , data = $this.data('popover')                                                                              // 1487\n        , options = typeof option == 'object' && option                                                             // 1488\n      if (!data) $this.data('popover', (data = new Popover(this, options)))                                         // 1489\n      if (typeof option == 'string') data[option]()                                                                 // 1490\n    })                                                                                                              // 1491\n  }                                                                                                                 // 1492\n                                                                                                                    // 1493\n  $.fn.popover.Constructor = Popover                                                                                // 1494\n                                                                                                                    // 1495\n  $.fn.popover.defaults = $.extend({} , $.fn.tooltip.defaults, {                                                    // 1496\n    placement: 'right'                                                                                              // 1497\n  , trigger: 'click'                                                                                                // 1498\n  , content: ''                                                                                                     // 1499\n  , template: '<div class=\"popover\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })                                                                                                                // 1501\n                                                                                                                    // 1502\n                                                                                                                    // 1503\n /* POPOVER NO CONFLICT                                                                                             // 1504\n  * =================== */                                                                                          // 1505\n                                                                                                                    // 1506\n  $.fn.popover.noConflict = function () {                                                                           // 1507\n    $.fn.popover = old                                                                                              // 1508\n    return this                                                                                                     // 1509\n  }                                                                                                                 // 1510\n                                                                                                                    // 1511\n}(window.jQuery);                                                                                                   // 1512\n/* =============================================================                                                    // 1513\n * bootstrap-scrollspy.js v2.3.0                                                                                    // 1514\n * http://twitter.github.com/bootstrap/javascript.html#scrollspy                                                    // 1515\n * =============================================================                                                    // 1516\n * Copyright 2012 Twitter, Inc.                                                                                     // 1517\n *                                                                                                                  // 1518\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 1519\n * you may not use this file except in compliance with the License.                                                 // 1520\n * You may obtain a copy of the License at                                                                          // 1521\n *                                                                                                                  // 1522\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 1523\n *                                                                                                                  // 1524\n * Unless required by applicable law or agreed to in writing, software                                              // 1525\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 1526\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 1527\n * See the License for the specific language governing permissions and                                              // 1528\n * limitations under the License.                                                                                   // 1529\n * ============================================================== */                                                // 1530\n                                                                                                                    // 1531\n                                                                                                                    // 1532\n!function ($) {                                                                                                     // 1533\n                                                                                                                    // 1534\n  \"use strict\"; // jshint ;_;                                                                                       // 1535\n                                                                                                                    // 1536\n                                                                                                                    // 1537\n /* SCROLLSPY CLASS DEFINITION                                                                                      // 1538\n  * ========================== */                                                                                   // 1539\n                                                                                                                    // 1540\n  function ScrollSpy(element, options) {                                                                            // 1541\n    var process = $.proxy(this.process, this)                                                                       // 1542\n      , $element = $(element).is('body') ? $(window) : $(element)                                                   // 1543\n      , href                                                                                                        // 1544\n    this.options = $.extend({}, $.fn.scrollspy.defaults, options)                                                   // 1545\n    this.$scrollElement = $element.on('scroll.scroll-spy.data-api', process)                                        // 1546\n    this.selector = (this.options.target                                                                            // 1547\n      || ((href = $(element).attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) //strip for ie7                   // 1548\n      || '') + ' .nav li > a'                                                                                       // 1549\n    this.$body = $('body')                                                                                          // 1550\n    this.refresh()                                                                                                  // 1551\n    this.process()                                                                                                  // 1552\n  }                                                                                                                 // 1553\n                                                                                                                    // 1554\n  ScrollSpy.prototype = {                                                                                           // 1555\n                                                                                                                    // 1556\n      constructor: ScrollSpy                                                                                        // 1557\n                                                                                                                    // 1558\n    , refresh: function () {                                                                                        // 1559\n        var self = this                                                                                             // 1560\n          , $targets                                                                                                // 1561\n                                                                                                                    // 1562\n        this.offsets = $([])                                                                                        // 1563\n        this.targets = $([])                                                                                        // 1564\n                                                                                                                    // 1565\n        $targets = this.$body                                                                                       // 1566\n          .find(this.selector)                                                                                      // 1567\n          .map(function () {                                                                                        // 1568\n            var $el = $(this)                                                                                       // 1569\n              , href = $el.data('target') || $el.attr('href')                                                       // 1570\n              , $href = /^#\\w/.test(href) && $(href)                                                                // 1571\n            return ( $href                                                                                          // 1572\n              && $href.length                                                                                       // 1573\n              && [[ $href.position().top + (!$.isWindow(self.$scrollElement.get(0)) && self.$scrollElement.scrollTop()), href ]] ) || null\n          })                                                                                                        // 1575\n          .sort(function (a, b) { return a[0] - b[0] })                                                             // 1576\n          .each(function () {                                                                                       // 1577\n            self.offsets.push(this[0])                                                                              // 1578\n            self.targets.push(this[1])                                                                              // 1579\n          })                                                                                                        // 1580\n      }                                                                                                             // 1581\n                                                                                                                    // 1582\n    , process: function () {                                                                                        // 1583\n        var scrollTop = this.$scrollElement.scrollTop() + this.options.offset                                       // 1584\n          , scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight                        // 1585\n          , maxScroll = scrollHeight - this.$scrollElement.height()                                                 // 1586\n          , offsets = this.offsets                                                                                  // 1587\n          , targets = this.targets                                                                                  // 1588\n          , activeTarget = this.activeTarget                                                                        // 1589\n          , i                                                                                                       // 1590\n                                                                                                                    // 1591\n        if (scrollTop >= maxScroll) {                                                                               // 1592\n          return activeTarget != (i = targets.last()[0])                                                            // 1593\n            && this.activate ( i )                                                                                  // 1594\n        }                                                                                                           // 1595\n                                                                                                                    // 1596\n        for (i = offsets.length; i--;) {                                                                            // 1597\n          activeTarget != targets[i]                                                                                // 1598\n            && scrollTop >= offsets[i]                                                                              // 1599\n            && (!offsets[i + 1] || scrollTop <= offsets[i + 1])                                                     // 1600\n            && this.activate( targets[i] )                                                                          // 1601\n        }                                                                                                           // 1602\n      }                                                                                                             // 1603\n                                                                                                                    // 1604\n    , activate: function (target) {                                                                                 // 1605\n        var active                                                                                                  // 1606\n          , selector                                                                                                // 1607\n                                                                                                                    // 1608\n        this.activeTarget = target                                                                                  // 1609\n                                                                                                                    // 1610\n        $(this.selector)                                                                                            // 1611\n          .parent('.active')                                                                                        // 1612\n          .removeClass('active')                                                                                    // 1613\n                                                                                                                    // 1614\n        selector = this.selector                                                                                    // 1615\n          + '[data-target=\"' + target + '\"],'                                                                       // 1616\n          + this.selector + '[href=\"' + target + '\"]'                                                               // 1617\n                                                                                                                    // 1618\n        active = $(selector)                                                                                        // 1619\n          .parent('li')                                                                                             // 1620\n          .addClass('active')                                                                                       // 1621\n                                                                                                                    // 1622\n        if (active.parent('.dropdown-menu').length)  {                                                              // 1623\n          active = active.closest('li.dropdown').addClass('active')                                                 // 1624\n        }                                                                                                           // 1625\n                                                                                                                    // 1626\n        active.trigger('activate')                                                                                  // 1627\n      }                                                                                                             // 1628\n                                                                                                                    // 1629\n  }                                                                                                                 // 1630\n                                                                                                                    // 1631\n                                                                                                                    // 1632\n /* SCROLLSPY PLUGIN DEFINITION                                                                                     // 1633\n  * =========================== */                                                                                  // 1634\n                                                                                                                    // 1635\n  var old = $.fn.scrollspy                                                                                          // 1636\n                                                                                                                    // 1637\n  $.fn.scrollspy = function (option) {                                                                              // 1638\n    return this.each(function () {                                                                                  // 1639\n      var $this = $(this)                                                                                           // 1640\n        , data = $this.data('scrollspy')                                                                            // 1641\n        , options = typeof option == 'object' && option                                                             // 1642\n      if (!data) $this.data('scrollspy', (data = new ScrollSpy(this, options)))                                     // 1643\n      if (typeof option == 'string') data[option]()                                                                 // 1644\n    })                                                                                                              // 1645\n  }                                                                                                                 // 1646\n                                                                                                                    // 1647\n  $.fn.scrollspy.Constructor = ScrollSpy                                                                            // 1648\n                                                                                                                    // 1649\n  $.fn.scrollspy.defaults = {                                                                                       // 1650\n    offset: 10                                                                                                      // 1651\n  }                                                                                                                 // 1652\n                                                                                                                    // 1653\n                                                                                                                    // 1654\n /* SCROLLSPY NO CONFLICT                                                                                           // 1655\n  * ===================== */                                                                                        // 1656\n                                                                                                                    // 1657\n  $.fn.scrollspy.noConflict = function () {                                                                         // 1658\n    $.fn.scrollspy = old                                                                                            // 1659\n    return this                                                                                                     // 1660\n  }                                                                                                                 // 1661\n                                                                                                                    // 1662\n                                                                                                                    // 1663\n /* SCROLLSPY DATA-API                                                                                              // 1664\n  * ================== */                                                                                           // 1665\n                                                                                                                    // 1666\n  $(window).on('load', function () {                                                                                // 1667\n    $('[data-spy=\"scroll\"]').each(function () {                                                                     // 1668\n      var $spy = $(this)                                                                                            // 1669\n      $spy.scrollspy($spy.data())                                                                                   // 1670\n    })                                                                                                              // 1671\n  })                                                                                                                // 1672\n                                                                                                                    // 1673\n}(window.jQuery);/* ========================================================                                        // 1674\n * bootstrap-tab.js v2.3.0                                                                                          // 1675\n * http://twitter.github.com/bootstrap/javascript.html#tabs                                                         // 1676\n * ========================================================                                                         // 1677\n * Copyright 2012 Twitter, Inc.                                                                                     // 1678\n *                                                                                                                  // 1679\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 1680\n * you may not use this file except in compliance with the License.                                                 // 1681\n * You may obtain a copy of the License at                                                                          // 1682\n *                                                                                                                  // 1683\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 1684\n *                                                                                                                  // 1685\n * Unless required by applicable law or agreed to in writing, software                                              // 1686\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 1687\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 1688\n * See the License for the specific language governing permissions and                                              // 1689\n * limitations under the License.                                                                                   // 1690\n * ======================================================== */                                                      // 1691\n                                                                                                                    // 1692\n                                                                                                                    // 1693\n!function ($) {                                                                                                     // 1694\n                                                                                                                    // 1695\n  \"use strict\"; // jshint ;_;                                                                                       // 1696\n                                                                                                                    // 1697\n                                                                                                                    // 1698\n /* TAB CLASS DEFINITION                                                                                            // 1699\n  * ==================== */                                                                                         // 1700\n                                                                                                                    // 1701\n  var Tab = function (element) {                                                                                    // 1702\n    this.element = $(element)                                                                                       // 1703\n  }                                                                                                                 // 1704\n                                                                                                                    // 1705\n  Tab.prototype = {                                                                                                 // 1706\n                                                                                                                    // 1707\n    constructor: Tab                                                                                                // 1708\n                                                                                                                    // 1709\n  , show: function () {                                                                                             // 1710\n      var $this = this.element                                                                                      // 1711\n        , $ul = $this.closest('ul:not(.dropdown-menu)')                                                             // 1712\n        , selector = $this.attr('data-target')                                                                      // 1713\n        , previous                                                                                                  // 1714\n        , $target                                                                                                   // 1715\n        , e                                                                                                         // 1716\n                                                                                                                    // 1717\n      if (!selector) {                                                                                              // 1718\n        selector = $this.attr('href')                                                                               // 1719\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') //strip for ie7                               // 1720\n      }                                                                                                             // 1721\n                                                                                                                    // 1722\n      if ( $this.parent('li').hasClass('active') ) return                                                           // 1723\n                                                                                                                    // 1724\n      previous = $ul.find('.active:last a')[0]                                                                      // 1725\n                                                                                                                    // 1726\n      e = $.Event('show', {                                                                                         // 1727\n        relatedTarget: previous                                                                                     // 1728\n      })                                                                                                            // 1729\n                                                                                                                    // 1730\n      $this.trigger(e)                                                                                              // 1731\n                                                                                                                    // 1732\n      if (e.isDefaultPrevented()) return                                                                            // 1733\n                                                                                                                    // 1734\n      $target = $(selector)                                                                                         // 1735\n                                                                                                                    // 1736\n      this.activate($this.parent('li'), $ul)                                                                        // 1737\n      this.activate($target, $target.parent(), function () {                                                        // 1738\n        $this.trigger({                                                                                             // 1739\n          type: 'shown'                                                                                             // 1740\n        , relatedTarget: previous                                                                                   // 1741\n        })                                                                                                          // 1742\n      })                                                                                                            // 1743\n    }                                                                                                               // 1744\n                                                                                                                    // 1745\n  , activate: function ( element, container, callback) {                                                            // 1746\n      var $active = container.find('> .active')                                                                     // 1747\n        , transition = callback                                                                                     // 1748\n            && $.support.transition                                                                                 // 1749\n            && $active.hasClass('fade')                                                                             // 1750\n                                                                                                                    // 1751\n      function next() {                                                                                             // 1752\n        $active                                                                                                     // 1753\n          .removeClass('active')                                                                                    // 1754\n          .find('> .dropdown-menu > .active')                                                                       // 1755\n          .removeClass('active')                                                                                    // 1756\n                                                                                                                    // 1757\n        element.addClass('active')                                                                                  // 1758\n                                                                                                                    // 1759\n        if (transition) {                                                                                           // 1760\n          element[0].offsetWidth // reflow for transition                                                           // 1761\n          element.addClass('in')                                                                                    // 1762\n        } else {                                                                                                    // 1763\n          element.removeClass('fade')                                                                               // 1764\n        }                                                                                                           // 1765\n                                                                                                                    // 1766\n        if ( element.parent('.dropdown-menu') ) {                                                                   // 1767\n          element.closest('li.dropdown').addClass('active')                                                         // 1768\n        }                                                                                                           // 1769\n                                                                                                                    // 1770\n        callback && callback()                                                                                      // 1771\n      }                                                                                                             // 1772\n                                                                                                                    // 1773\n      transition ?                                                                                                  // 1774\n        $active.one($.support.transition.end, next) :                                                               // 1775\n        next()                                                                                                      // 1776\n                                                                                                                    // 1777\n      $active.removeClass('in')                                                                                     // 1778\n    }                                                                                                               // 1779\n  }                                                                                                                 // 1780\n                                                                                                                    // 1781\n                                                                                                                    // 1782\n /* TAB PLUGIN DEFINITION                                                                                           // 1783\n  * ===================== */                                                                                        // 1784\n                                                                                                                    // 1785\n  var old = $.fn.tab                                                                                                // 1786\n                                                                                                                    // 1787\n  $.fn.tab = function ( option ) {                                                                                  // 1788\n    return this.each(function () {                                                                                  // 1789\n      var $this = $(this)                                                                                           // 1790\n        , data = $this.data('tab')                                                                                  // 1791\n      if (!data) $this.data('tab', (data = new Tab(this)))                                                          // 1792\n      if (typeof option == 'string') data[option]()                                                                 // 1793\n    })                                                                                                              // 1794\n  }                                                                                                                 // 1795\n                                                                                                                    // 1796\n  $.fn.tab.Constructor = Tab                                                                                        // 1797\n                                                                                                                    // 1798\n                                                                                                                    // 1799\n /* TAB NO CONFLICT                                                                                                 // 1800\n  * =============== */                                                                                              // 1801\n                                                                                                                    // 1802\n  $.fn.tab.noConflict = function () {                                                                               // 1803\n    $.fn.tab = old                                                                                                  // 1804\n    return this                                                                                                     // 1805\n  }                                                                                                                 // 1806\n                                                                                                                    // 1807\n                                                                                                                    // 1808\n /* TAB DATA-API                                                                                                    // 1809\n  * ============ */                                                                                                 // 1810\n                                                                                                                    // 1811\n  $(document).on('click.tab.data-api', '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', function (e) {                  // 1812\n    e.preventDefault()                                                                                              // 1813\n    $(this).tab('show')                                                                                             // 1814\n  })                                                                                                                // 1815\n                                                                                                                    // 1816\n}(window.jQuery);/* =============================================================                                   // 1817\n * bootstrap-typeahead.js v2.3.0                                                                                    // 1818\n * http://twitter.github.com/bootstrap/javascript.html#typeahead                                                    // 1819\n * =============================================================                                                    // 1820\n * Copyright 2012 Twitter, Inc.                                                                                     // 1821\n *                                                                                                                  // 1822\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 1823\n * you may not use this file except in compliance with the License.                                                 // 1824\n * You may obtain a copy of the License at                                                                          // 1825\n *                                                                                                                  // 1826\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 1827\n *                                                                                                                  // 1828\n * Unless required by applicable law or agreed to in writing, software                                              // 1829\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 1830\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 1831\n * See the License for the specific language governing permissions and                                              // 1832\n * limitations under the License.                                                                                   // 1833\n * ============================================================ */                                                  // 1834\n                                                                                                                    // 1835\n                                                                                                                    // 1836\n!function($){                                                                                                       // 1837\n                                                                                                                    // 1838\n  \"use strict\"; // jshint ;_;                                                                                       // 1839\n                                                                                                                    // 1840\n                                                                                                                    // 1841\n /* TYPEAHEAD PUBLIC CLASS DEFINITION                                                                               // 1842\n  * ================================= */                                                                            // 1843\n                                                                                                                    // 1844\n  var Typeahead = function (element, options) {                                                                     // 1845\n    this.$element = $(element)                                                                                      // 1846\n    this.options = $.extend({}, $.fn.typeahead.defaults, options)                                                   // 1847\n    this.matcher = this.options.matcher || this.matcher                                                             // 1848\n    this.sorter = this.options.sorter || this.sorter                                                                // 1849\n    this.highlighter = this.options.highlighter || this.highlighter                                                 // 1850\n    this.updater = this.options.updater || this.updater                                                             // 1851\n    this.source = this.options.source                                                                               // 1852\n    this.$menu = $(this.options.menu)                                                                               // 1853\n    this.shown = false                                                                                              // 1854\n    this.listen()                                                                                                   // 1855\n  }                                                                                                                 // 1856\n                                                                                                                    // 1857\n  Typeahead.prototype = {                                                                                           // 1858\n                                                                                                                    // 1859\n    constructor: Typeahead                                                                                          // 1860\n                                                                                                                    // 1861\n  , select: function () {                                                                                           // 1862\n      var val = this.$menu.find('.active').attr('data-value')                                                       // 1863\n      this.$element                                                                                                 // 1864\n        .val(this.updater(val))                                                                                     // 1865\n        .change()                                                                                                   // 1866\n      return this.hide()                                                                                            // 1867\n    }                                                                                                               // 1868\n                                                                                                                    // 1869\n  , updater: function (item) {                                                                                      // 1870\n      return item                                                                                                   // 1871\n    }                                                                                                               // 1872\n                                                                                                                    // 1873\n  , show: function () {                                                                                             // 1874\n      var pos = $.extend({}, this.$element.position(), {                                                            // 1875\n        height: this.$element[0].offsetHeight                                                                       // 1876\n      })                                                                                                            // 1877\n                                                                                                                    // 1878\n      this.$menu                                                                                                    // 1879\n        .insertAfter(this.$element)                                                                                 // 1880\n        .css({                                                                                                      // 1881\n          top: pos.top + pos.height                                                                                 // 1882\n        , left: pos.left                                                                                            // 1883\n        })                                                                                                          // 1884\n        .show()                                                                                                     // 1885\n                                                                                                                    // 1886\n      this.shown = true                                                                                             // 1887\n      return this                                                                                                   // 1888\n    }                                                                                                               // 1889\n                                                                                                                    // 1890\n  , hide: function () {                                                                                             // 1891\n      this.$menu.hide()                                                                                             // 1892\n      this.shown = false                                                                                            // 1893\n      return this                                                                                                   // 1894\n    }                                                                                                               // 1895\n                                                                                                                    // 1896\n  , lookup: function (event) {                                                                                      // 1897\n      var items                                                                                                     // 1898\n                                                                                                                    // 1899\n      this.query = this.$element.val()                                                                              // 1900\n                                                                                                                    // 1901\n      if (!this.query || this.query.length < this.options.minLength) {                                              // 1902\n        return this.shown ? this.hide() : this                                                                      // 1903\n      }                                                                                                             // 1904\n                                                                                                                    // 1905\n      items = $.isFunction(this.source) ? this.source(this.query, $.proxy(this.process, this)) : this.source        // 1906\n                                                                                                                    // 1907\n      return items ? this.process(items) : this                                                                     // 1908\n    }                                                                                                               // 1909\n                                                                                                                    // 1910\n  , process: function (items) {                                                                                     // 1911\n      var that = this                                                                                               // 1912\n                                                                                                                    // 1913\n      items = $.grep(items, function (item) {                                                                       // 1914\n        return that.matcher(item)                                                                                   // 1915\n      })                                                                                                            // 1916\n                                                                                                                    // 1917\n      items = this.sorter(items)                                                                                    // 1918\n                                                                                                                    // 1919\n      if (!items.length) {                                                                                          // 1920\n        return this.shown ? this.hide() : this                                                                      // 1921\n      }                                                                                                             // 1922\n                                                                                                                    // 1923\n      return this.render(items.slice(0, this.options.items)).show()                                                 // 1924\n    }                                                                                                               // 1925\n                                                                                                                    // 1926\n  , matcher: function (item) {                                                                                      // 1927\n      return ~item.toLowerCase().indexOf(this.query.toLowerCase())                                                  // 1928\n    }                                                                                                               // 1929\n                                                                                                                    // 1930\n  , sorter: function (items) {                                                                                      // 1931\n      var beginswith = []                                                                                           // 1932\n        , caseSensitive = []                                                                                        // 1933\n        , caseInsensitive = []                                                                                      // 1934\n        , item                                                                                                      // 1935\n                                                                                                                    // 1936\n      while (item = items.shift()) {                                                                                // 1937\n        if (!item.toLowerCase().indexOf(this.query.toLowerCase())) beginswith.push(item)                            // 1938\n        else if (~item.indexOf(this.query)) caseSensitive.push(item)                                                // 1939\n        else caseInsensitive.push(item)                                                                             // 1940\n      }                                                                                                             // 1941\n                                                                                                                    // 1942\n      return beginswith.concat(caseSensitive, caseInsensitive)                                                      // 1943\n    }                                                                                                               // 1944\n                                                                                                                    // 1945\n  , highlighter: function (item) {                                                                                  // 1946\n      var query = this.query.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&')                                         // 1947\n      return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {                               // 1948\n        return '<strong>' + match + '</strong>'                                                                     // 1949\n      })                                                                                                            // 1950\n    }                                                                                                               // 1951\n                                                                                                                    // 1952\n  , render: function (items) {                                                                                      // 1953\n      var that = this                                                                                               // 1954\n                                                                                                                    // 1955\n      items = $(items).map(function (i, item) {                                                                     // 1956\n        i = $(that.options.item).attr('data-value', item)                                                           // 1957\n        i.find('a').html(that.highlighter(item))                                                                    // 1958\n        return i[0]                                                                                                 // 1959\n      })                                                                                                            // 1960\n                                                                                                                    // 1961\n      items.first().addClass('active')                                                                              // 1962\n      this.$menu.html(items)                                                                                        // 1963\n      return this                                                                                                   // 1964\n    }                                                                                                               // 1965\n                                                                                                                    // 1966\n  , next: function (event) {                                                                                        // 1967\n      var active = this.$menu.find('.active').removeClass('active')                                                 // 1968\n        , next = active.next()                                                                                      // 1969\n                                                                                                                    // 1970\n      if (!next.length) {                                                                                           // 1971\n        next = $(this.$menu.find('li')[0])                                                                          // 1972\n      }                                                                                                             // 1973\n                                                                                                                    // 1974\n      next.addClass('active')                                                                                       // 1975\n    }                                                                                                               // 1976\n                                                                                                                    // 1977\n  , prev: function (event) {                                                                                        // 1978\n      var active = this.$menu.find('.active').removeClass('active')                                                 // 1979\n        , prev = active.prev()                                                                                      // 1980\n                                                                                                                    // 1981\n      if (!prev.length) {                                                                                           // 1982\n        prev = this.$menu.find('li').last()                                                                         // 1983\n      }                                                                                                             // 1984\n                                                                                                                    // 1985\n      prev.addClass('active')                                                                                       // 1986\n    }                                                                                                               // 1987\n                                                                                                                    // 1988\n  , listen: function () {                                                                                           // 1989\n      this.$element                                                                                                 // 1990\n        .on('focus',    $.proxy(this.focus, this))                                                                  // 1991\n        .on('blur',     $.proxy(this.blur, this))                                                                   // 1992\n        .on('keypress', $.proxy(this.keypress, this))                                                               // 1993\n        .on('keyup',    $.proxy(this.keyup, this))                                                                  // 1994\n                                                                                                                    // 1995\n      if (this.eventSupported('keydown')) {                                                                         // 1996\n        this.$element.on('keydown', $.proxy(this.keydown, this))                                                    // 1997\n      }                                                                                                             // 1998\n                                                                                                                    // 1999\n      this.$menu                                                                                                    // 2000\n        .on('click', $.proxy(this.click, this))                                                                     // 2001\n        .on('mouseenter', 'li', $.proxy(this.mouseenter, this))                                                     // 2002\n        .on('mouseleave', 'li', $.proxy(this.mouseleave, this))                                                     // 2003\n    }                                                                                                               // 2004\n                                                                                                                    // 2005\n  , eventSupported: function(eventName) {                                                                           // 2006\n      var isSupported = eventName in this.$element                                                                  // 2007\n      if (!isSupported) {                                                                                           // 2008\n        this.$element.setAttribute(eventName, 'return;')                                                            // 2009\n        isSupported = typeof this.$element[eventName] === 'function'                                                // 2010\n      }                                                                                                             // 2011\n      return isSupported                                                                                            // 2012\n    }                                                                                                               // 2013\n                                                                                                                    // 2014\n  , move: function (e) {                                                                                            // 2015\n      if (!this.shown) return                                                                                       // 2016\n                                                                                                                    // 2017\n      switch(e.keyCode) {                                                                                           // 2018\n        case 9: // tab                                                                                              // 2019\n        case 13: // enter                                                                                           // 2020\n        case 27: // escape                                                                                          // 2021\n          e.preventDefault()                                                                                        // 2022\n          break                                                                                                     // 2023\n                                                                                                                    // 2024\n        case 38: // up arrow                                                                                        // 2025\n          e.preventDefault()                                                                                        // 2026\n          this.prev()                                                                                               // 2027\n          break                                                                                                     // 2028\n                                                                                                                    // 2029\n        case 40: // down arrow                                                                                      // 2030\n          e.preventDefault()                                                                                        // 2031\n          this.next()                                                                                               // 2032\n          break                                                                                                     // 2033\n      }                                                                                                             // 2034\n                                                                                                                    // 2035\n      e.stopPropagation()                                                                                           // 2036\n    }                                                                                                               // 2037\n                                                                                                                    // 2038\n  , keydown: function (e) {                                                                                         // 2039\n      this.suppressKeyPressRepeat = ~$.inArray(e.keyCode, [40,38,9,13,27])                                          // 2040\n      this.move(e)                                                                                                  // 2041\n    }                                                                                                               // 2042\n                                                                                                                    // 2043\n  , keypress: function (e) {                                                                                        // 2044\n      if (this.suppressKeyPressRepeat) return                                                                       // 2045\n      this.move(e)                                                                                                  // 2046\n    }                                                                                                               // 2047\n                                                                                                                    // 2048\n  , keyup: function (e) {                                                                                           // 2049\n      switch(e.keyCode) {                                                                                           // 2050\n        case 40: // down arrow                                                                                      // 2051\n        case 38: // up arrow                                                                                        // 2052\n        case 16: // shift                                                                                           // 2053\n        case 17: // ctrl                                                                                            // 2054\n        case 18: // alt                                                                                             // 2055\n          break                                                                                                     // 2056\n                                                                                                                    // 2057\n        case 9: // tab                                                                                              // 2058\n        case 13: // enter                                                                                           // 2059\n          if (!this.shown) return                                                                                   // 2060\n          this.select()                                                                                             // 2061\n          break                                                                                                     // 2062\n                                                                                                                    // 2063\n        case 27: // escape                                                                                          // 2064\n          if (!this.shown) return                                                                                   // 2065\n          this.hide()                                                                                               // 2066\n          break                                                                                                     // 2067\n                                                                                                                    // 2068\n        default:                                                                                                    // 2069\n          this.lookup()                                                                                             // 2070\n      }                                                                                                             // 2071\n                                                                                                                    // 2072\n      e.stopPropagation()                                                                                           // 2073\n      e.preventDefault()                                                                                            // 2074\n  }                                                                                                                 // 2075\n                                                                                                                    // 2076\n  , focus: function (e) {                                                                                           // 2077\n      this.focused = true                                                                                           // 2078\n    }                                                                                                               // 2079\n                                                                                                                    // 2080\n  , blur: function (e) {                                                                                            // 2081\n      this.focused = false                                                                                          // 2082\n      if (!this.mousedover && this.shown) this.hide()                                                               // 2083\n    }                                                                                                               // 2084\n                                                                                                                    // 2085\n  , click: function (e) {                                                                                           // 2086\n      e.stopPropagation()                                                                                           // 2087\n      e.preventDefault()                                                                                            // 2088\n      this.select()                                                                                                 // 2089\n      this.$element.focus()                                                                                         // 2090\n    }                                                                                                               // 2091\n                                                                                                                    // 2092\n  , mouseenter: function (e) {                                                                                      // 2093\n      this.mousedover = true                                                                                        // 2094\n      this.$menu.find('.active').removeClass('active')                                                              // 2095\n      $(e.currentTarget).addClass('active')                                                                         // 2096\n    }                                                                                                               // 2097\n                                                                                                                    // 2098\n  , mouseleave: function (e) {                                                                                      // 2099\n      this.mousedover = false                                                                                       // 2100\n      if (!this.focused && this.shown) this.hide()                                                                  // 2101\n    }                                                                                                               // 2102\n                                                                                                                    // 2103\n  }                                                                                                                 // 2104\n                                                                                                                    // 2105\n                                                                                                                    // 2106\n  /* TYPEAHEAD PLUGIN DEFINITION                                                                                    // 2107\n   * =========================== */                                                                                 // 2108\n                                                                                                                    // 2109\n  var old = $.fn.typeahead                                                                                          // 2110\n                                                                                                                    // 2111\n  $.fn.typeahead = function (option) {                                                                              // 2112\n    return this.each(function () {                                                                                  // 2113\n      var $this = $(this)                                                                                           // 2114\n        , data = $this.data('typeahead')                                                                            // 2115\n        , options = typeof option == 'object' && option                                                             // 2116\n      if (!data) $this.data('typeahead', (data = new Typeahead(this, options)))                                     // 2117\n      if (typeof option == 'string') data[option]()                                                                 // 2118\n    })                                                                                                              // 2119\n  }                                                                                                                 // 2120\n                                                                                                                    // 2121\n  $.fn.typeahead.defaults = {                                                                                       // 2122\n    source: []                                                                                                      // 2123\n  , items: 8                                                                                                        // 2124\n  , menu: '<ul class=\"typeahead dropdown-menu\"></ul>'                                                               // 2125\n  , item: '<li><a href=\"#\"></a></li>'                                                                               // 2126\n  , minLength: 1                                                                                                    // 2127\n  }                                                                                                                 // 2128\n                                                                                                                    // 2129\n  $.fn.typeahead.Constructor = Typeahead                                                                            // 2130\n                                                                                                                    // 2131\n                                                                                                                    // 2132\n /* TYPEAHEAD NO CONFLICT                                                                                           // 2133\n  * =================== */                                                                                          // 2134\n                                                                                                                    // 2135\n  $.fn.typeahead.noConflict = function () {                                                                         // 2136\n    $.fn.typeahead = old                                                                                            // 2137\n    return this                                                                                                     // 2138\n  }                                                                                                                 // 2139\n                                                                                                                    // 2140\n                                                                                                                    // 2141\n /* TYPEAHEAD DATA-API                                                                                              // 2142\n  * ================== */                                                                                           // 2143\n                                                                                                                    // 2144\n  $(document).on('focus.typeahead.data-api', '[data-provide=\"typeahead\"]', function (e) {                           // 2145\n    var $this = $(this)                                                                                             // 2146\n    if ($this.data('typeahead')) return                                                                             // 2147\n    $this.typeahead($this.data())                                                                                   // 2148\n  })                                                                                                                // 2149\n                                                                                                                    // 2150\n}(window.jQuery);                                                                                                   // 2151\n/* ==========================================================                                                       // 2152\n * bootstrap-affix.js v2.3.0                                                                                        // 2153\n * http://twitter.github.com/bootstrap/javascript.html#affix                                                        // 2154\n * ==========================================================                                                       // 2155\n * Copyright 2012 Twitter, Inc.                                                                                     // 2156\n *                                                                                                                  // 2157\n * Licensed under the Apache License, Version 2.0 (the \"License\");                                                  // 2158\n * you may not use this file except in compliance with the License.                                                 // 2159\n * You may obtain a copy of the License at                                                                          // 2160\n *                                                                                                                  // 2161\n * http://www.apache.org/licenses/LICENSE-2.0                                                                       // 2162\n *                                                                                                                  // 2163\n * Unless required by applicable law or agreed to in writing, software                                              // 2164\n * distributed under the License is distributed on an \"AS IS\" BASIS,                                                // 2165\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                                         // 2166\n * See the License for the specific language governing permissions and                                              // 2167\n * limitations under the License.                                                                                   // 2168\n * ========================================================== */                                                    // 2169\n                                                                                                                    // 2170\n                                                                                                                    // 2171\n!function ($) {                                                                                                     // 2172\n                                                                                                                    // 2173\n  \"use strict\"; // jshint ;_;                                                                                       // 2174\n                                                                                                                    // 2175\n                                                                                                                    // 2176\n /* AFFIX CLASS DEFINITION                                                                                          // 2177\n  * ====================== */                                                                                       // 2178\n                                                                                                                    // 2179\n  var Affix = function (element, options) {                                                                         // 2180\n    this.options = $.extend({}, $.fn.affix.defaults, options)                                                       // 2181\n    this.$window = $(window)                                                                                        // 2182\n      .on('scroll.affix.data-api', $.proxy(this.checkPosition, this))                                               // 2183\n      .on('click.affix.data-api',  $.proxy(function () { setTimeout($.proxy(this.checkPosition, this), 1) }, this)) // 2184\n    this.$element = $(element)                                                                                      // 2185\n    this.checkPosition()                                                                                            // 2186\n  }                                                                                                                 // 2187\n                                                                                                                    // 2188\n  Affix.prototype.checkPosition = function () {                                                                     // 2189\n    if (!this.$element.is(':visible')) return                                                                       // 2190\n                                                                                                                    // 2191\n    var scrollHeight = $(document).height()                                                                         // 2192\n      , scrollTop = this.$window.scrollTop()                                                                        // 2193\n      , position = this.$element.offset()                                                                           // 2194\n      , offset = this.options.offset                                                                                // 2195\n      , offsetBottom = offset.bottom                                                                                // 2196\n      , offsetTop = offset.top                                                                                      // 2197\n      , reset = 'affix affix-top affix-bottom'                                                                      // 2198\n      , affix                                                                                                       // 2199\n                                                                                                                    // 2200\n    if (typeof offset != 'object') offsetBottom = offsetTop = offset                                                // 2201\n    if (typeof offsetTop == 'function') offsetTop = offset.top()                                                    // 2202\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom()                                           // 2203\n                                                                                                                    // 2204\n    affix = this.unpin != null && (scrollTop + this.unpin <= position.top) ?                                        // 2205\n      false    : offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ?   // 2206\n      'bottom' : offsetTop != null && scrollTop <= offsetTop ?                                                      // 2207\n      'top'    : false                                                                                              // 2208\n                                                                                                                    // 2209\n    if (this.affixed === affix) return                                                                              // 2210\n                                                                                                                    // 2211\n    this.affixed = affix                                                                                            // 2212\n    this.unpin = affix == 'bottom' ? position.top - scrollTop : null                                                // 2213\n                                                                                                                    // 2214\n    this.$element.removeClass(reset).addClass('affix' + (affix ? '-' + affix : ''))                                 // 2215\n  }                                                                                                                 // 2216\n                                                                                                                    // 2217\n                                                                                                                    // 2218\n /* AFFIX PLUGIN DEFINITION                                                                                         // 2219\n  * ======================= */                                                                                      // 2220\n                                                                                                                    // 2221\n  var old = $.fn.affix                                                                                              // 2222\n                                                                                                                    // 2223\n  $.fn.affix = function (option) {                                                                                  // 2224\n    return this.each(function () {                                                                                  // 2225\n      var $this = $(this)                                                                                           // 2226\n        , data = $this.data('affix')                                                                                // 2227\n        , options = typeof option == 'object' && option                                                             // 2228\n      if (!data) $this.data('affix', (data = new Affix(this, options)))                                             // 2229\n      if (typeof option == 'string') data[option]()                                                                 // 2230\n    })                                                                                                              // 2231\n  }                                                                                                                 // 2232\n                                                                                                                    // 2233\n  $.fn.affix.Constructor = Affix                                                                                    // 2234\n                                                                                                                    // 2235\n  $.fn.affix.defaults = {                                                                                           // 2236\n    offset: 0                                                                                                       // 2237\n  }                                                                                                                 // 2238\n                                                                                                                    // 2239\n                                                                                                                    // 2240\n /* AFFIX NO CONFLICT                                                                                               // 2241\n  * ================= */                                                                                            // 2242\n                                                                                                                    // 2243\n  $.fn.affix.noConflict = function () {                                                                             // 2244\n    $.fn.affix = old                                                                                                // 2245\n    return this                                                                                                     // 2246\n  }                                                                                                                 // 2247\n                                                                                                                    // 2248\n                                                                                                                    // 2249\n /* AFFIX DATA-API                                                                                                  // 2250\n  * ============== */                                                                                               // 2251\n                                                                                                                    // 2252\n  $(window).on('load', function () {                                                                                // 2253\n    $('[data-spy=\"affix\"]').each(function () {                                                                      // 2254\n      var $spy = $(this)                                                                                            // 2255\n        , data = $spy.data()                                                                                        // 2256\n                                                                                                                    // 2257\n      data.offset = data.offset || {}                                                                               // 2258\n                                                                                                                    // 2259\n      data.offsetBottom && (data.offset.bottom = data.offsetBottom)                                                 // 2260\n      data.offsetTop && (data.offset.top = data.offsetTop)                                                          // 2261\n                                                                                                                    // 2262\n      $spy.affix(data)                                                                                              // 2263\n    })                                                                                                              // 2264\n  })                                                                                                                // 2265\n                                                                                                                    // 2266\n                                                                                                                    // 2267\n}(window.jQuery);                                                                                                   // 2268\n                                                                                                                    // 2269\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]