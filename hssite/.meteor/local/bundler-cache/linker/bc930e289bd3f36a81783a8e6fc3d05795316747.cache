[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar _ = Package.underscore._;\nvar assert = Package['peerlibrary:assert'].assert;\n\n/* Package-scope variables */\nvar __coffeescriptShare, BaseComponent, BaseComponentDebug;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// packages/peerlibrary_base-component/packages/peerlibrary_base-component.js                                      //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\n(function () {                                                                                                     // 1\n                                                                                                                   // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/peerlibrary:base-component/lib.coffee.js                                                            //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ComponentsNamespace, arrayReferenceEquals, createNamespace, getComponent, getNamespace, getPathAndName, isolateValue, setComponent,               \n  __hasProp = {}.hasOwnProperty;                                                                                   // 11\n                                                                                                                   // 12\narrayReferenceEquals = function(a, b) {                                                                            // 13\n  var i, _i, _ref;                                                                                                 // 14\n  if (a.length !== b.length) {                                                                                     // 15\n    return false;                                                                                                  // 16\n  }                                                                                                                // 17\n  for (i = _i = 0, _ref = a.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {              // 18\n    if (a[i] !== b[i]) {                                                                                           // 19\n      return false;                                                                                                // 20\n    }                                                                                                              // 21\n  }                                                                                                                // 22\n  return true;                                                                                                     // 23\n};                                                                                                                 // 24\n                                                                                                                   // 25\nisolateValue = function(fn) {                                                                                      // 26\n  var dependency, lastValue;                                                                                       // 27\n  if (!Tracker.active) {                                                                                           // 28\n    return fn();                                                                                                   // 29\n  }                                                                                                                // 30\n  lastValue = null;                                                                                                // 31\n  dependency = new Tracker.Dependency();                                                                           // 32\n  Tracker.autorun(function(computation) {                                                                          // 33\n    var value;                                                                                                     // 34\n    value = fn();                                                                                                  // 35\n    if (computation.firstRun) {                                                                                    // 36\n      return lastValue = value;                                                                                    // 37\n    } else {                                                                                                       // 38\n      if (!arrayReferenceEquals(value, lastValue)) {                                                               // 39\n        return dependency.changed();                                                                               // 40\n      }                                                                                                            // 41\n    }                                                                                                              // 42\n  });                                                                                                              // 43\n  dependency.depend();                                                                                             // 44\n  return lastValue;                                                                                                // 45\n};                                                                                                                 // 46\n                                                                                                                   // 47\nComponentsNamespace = (function() {                                                                                // 48\n  function ComponentsNamespace() {}                                                                                // 49\n                                                                                                                   // 50\n  ComponentsNamespace.COMPONENTS_FIELD = '';                                                                       // 51\n                                                                                                                   // 52\n  return ComponentsNamespace;                                                                                      // 53\n                                                                                                                   // 54\n})();                                                                                                              // 55\n                                                                                                                   // 56\ngetPathAndName = function(name) {                                                                                  // 57\n  var path;                                                                                                        // 58\n  assert(name);                                                                                                    // 59\n  path = name.split('.');                                                                                          // 60\n  name = path.pop();                                                                                               // 61\n  assert(name);                                                                                                    // 62\n  return {                                                                                                         // 63\n    path: path,                                                                                                    // 64\n    name: name                                                                                                     // 65\n  };                                                                                                               // 66\n};                                                                                                                 // 67\n                                                                                                                   // 68\ngetNamespace = function(components, path) {                                                                        // 69\n  var match, segment;                                                                                              // 70\n  assert(_.isObject(components));                                                                                  // 71\n  assert(_.isArray(path));                                                                                         // 72\n  match = components;                                                                                              // 73\n  while ((segment = path.shift()) != null) {                                                                       // 74\n    match = match[segment];                                                                                        // 75\n    if (!_.isObject(match)) {                                                                                      // 76\n      return null;                                                                                                 // 77\n    }                                                                                                              // 78\n  }                                                                                                                // 79\n  if (!_.isObject(match)) {                                                                                        // 80\n    return null;                                                                                                   // 81\n  }                                                                                                                // 82\n  return match || null;                                                                                            // 83\n};                                                                                                                 // 84\n                                                                                                                   // 85\ncreateNamespace = function(components, path) {                                                                     // 86\n  var match, segment;                                                                                              // 87\n  assert(_.isObject(components));                                                                                  // 88\n  assert(_.isArray(path));                                                                                         // 89\n  match = components;                                                                                              // 90\n  while ((segment = path.shift()) != null) {                                                                       // 91\n    if (!(segment in match)) {                                                                                     // 92\n      match[segment] = new components.constructor();                                                               // 93\n    }                                                                                                              // 94\n    match = match[segment];                                                                                        // 95\n    assert(_.isObject(match));                                                                                     // 96\n  }                                                                                                                // 97\n  assert(_.isObject(match));                                                                                       // 98\n  return match;                                                                                                    // 99\n};                                                                                                                 // 100\n                                                                                                                   // 101\ngetComponent = function(components, name) {                                                                        // 102\n  var namespace, path, _ref, _ref1;                                                                                // 103\n  assert(_.isObject(components));                                                                                  // 104\n  if (!name) {                                                                                                     // 105\n    return null;                                                                                                   // 106\n  }                                                                                                                // 107\n  _ref = getPathAndName(name), path = _ref.path, name = _ref.name;                                                 // 108\n  namespace = getNamespace(components, path);                                                                      // 109\n  if (!namespace) {                                                                                                // 110\n    return null;                                                                                                   // 111\n  }                                                                                                                // 112\n  return ((_ref1 = namespace[components.constructor.COMPONENTS_FIELD]) != null ? _ref1[name] : void 0) || null;    // 113\n};                                                                                                                 // 114\n                                                                                                                   // 115\nsetComponent = function(components, name, component) {                                                             // 116\n  var namespace, path, _name, _ref;                                                                                // 117\n  assert(_.isObject(components));                                                                                  // 118\n  assert(name);                                                                                                    // 119\n  assert(component);                                                                                               // 120\n  _ref = getPathAndName(name), path = _ref.path, name = _ref.name;                                                 // 121\n  namespace = createNamespace(components, path);                                                                   // 122\n  if (namespace[_name = components.constructor.COMPONENTS_FIELD] == null) {                                        // 123\n    namespace[_name] = new components.constructor();                                                               // 124\n  }                                                                                                                // 125\n  assert(!(name in namespace[components.constructor.COMPONENTS_FIELD]));                                           // 126\n  return namespace[components.constructor.COMPONENTS_FIELD][name] = component;                                     // 127\n};                                                                                                                 // 128\n                                                                                                                   // 129\nBaseComponent = (function() {                                                                                      // 130\n  function BaseComponent() {}                                                                                      // 131\n                                                                                                                   // 132\n  BaseComponent.components = new ComponentsNamespace();                                                            // 133\n                                                                                                                   // 134\n  BaseComponent.register = function(componentName, componentClass) {                                               // 135\n    if (!componentName) {                                                                                          // 136\n      throw new Error(\"Component name is required for registration.\");                                             // 137\n    }                                                                                                              // 138\n    if (componentClass == null) {                                                                                  // 139\n      componentClass = this;                                                                                       // 140\n    }                                                                                                              // 141\n    if (getComponent(this.components, componentName)) {                                                            // 142\n      throw new Error(\"Component '\" + componentName + \"' already registered.\");                                    // 143\n    }                                                                                                              // 144\n    if (componentClass.componentName() && componentClass.componentName() !== componentName && getComponent(this.components, componentClass.componentName()) === componentClass) {\n      throw new Error(\"Component '\" + componentName + \"' already registered under the name '\" + (componentClass.componentName()) + \"'.\");\n    }                                                                                                              // 147\n    componentClass.componentName(componentName);                                                                   // 148\n    assert.equal(componentClass.componentName(), componentName);                                                   // 149\n    setComponent(this.components, componentName, componentClass);                                                  // 150\n    return this;                                                                                                   // 151\n  };                                                                                                               // 152\n                                                                                                                   // 153\n  BaseComponent.getComponent = function(componentsNamespace, componentName) {                                      // 154\n    if (!componentName) {                                                                                          // 155\n      componentName = componentsNamespace;                                                                         // 156\n      componentsNamespace = this.components;                                                                       // 157\n    }                                                                                                              // 158\n    if (!componentName) {                                                                                          // 159\n      return null;                                                                                                 // 160\n    }                                                                                                              // 161\n    if (!_.isString(componentName)) {                                                                              // 162\n      throw new Error(\"Component name '\" + componentName + \"' is not a string.\");                                  // 163\n    }                                                                                                              // 164\n    return getComponent(componentsNamespace, componentName);                                                       // 165\n  };                                                                                                               // 166\n                                                                                                                   // 167\n  BaseComponent.componentName = function(componentName) {                                                          // 168\n    if (componentName) {                                                                                           // 169\n      this._componentName = componentName;                                                                         // 170\n      return this;                                                                                                 // 171\n    }                                                                                                              // 172\n    return this._componentName || null;                                                                            // 173\n  };                                                                                                               // 174\n                                                                                                                   // 175\n  BaseComponent.prototype.componentName = function() {                                                             // 176\n    return this.constructor.componentName();                                                                       // 177\n  };                                                                                                               // 178\n                                                                                                                   // 179\n  BaseComponent.prototype.componentChildren = function(nameOrComponent) {                                          // 180\n    var child, _base;                                                                                              // 181\n    if (this._componentInternals == null) {                                                                        // 182\n      this._componentInternals = {};                                                                               // 183\n    }                                                                                                              // 184\n    if ((_base = this._componentInternals).componentChildren == null) {                                            // 185\n      _base.componentChildren = new ReactiveVar([], arrayReferenceEquals);                                         // 186\n    }                                                                                                              // 187\n    if (!nameOrComponent) {                                                                                        // 188\n      return (function() {                                                                                         // 189\n        var _i, _len, _ref, _results;                                                                              // 190\n        _ref = this._componentInternals.componentChildren.get();                                                   // 191\n        _results = [];                                                                                             // 192\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                        // 193\n          child = _ref[_i];                                                                                        // 194\n          _results.push(child);                                                                                    // 195\n        }                                                                                                          // 196\n        return _results;                                                                                           // 197\n      }).call(this);                                                                                               // 198\n    }                                                                                                              // 199\n    if (_.isString(nameOrComponent)) {                                                                             // 200\n      return this.componentChildrenWith((function(_this) {                                                         // 201\n        return function(child, parent) {                                                                           // 202\n          return child.componentName() === nameOrComponent;                                                        // 203\n        };                                                                                                         // 204\n      })(this));                                                                                                   // 205\n    } else {                                                                                                       // 206\n      return this.componentChildrenWith((function(_this) {                                                         // 207\n        return function(child, parent) {                                                                           // 208\n          if (child.constructor === nameOrComponent) {                                                             // 209\n            return true;                                                                                           // 210\n          }                                                                                                        // 211\n          if (child === nameOrComponent) {                                                                         // 212\n            return true;                                                                                           // 213\n          }                                                                                                        // 214\n          return false;                                                                                            // 215\n        };                                                                                                         // 216\n      })(this));                                                                                                   // 217\n    }                                                                                                              // 218\n  };                                                                                                               // 219\n                                                                                                                   // 220\n  BaseComponent.prototype.componentChildrenWith = function(propertyOrMatcherOrFunction) {                          // 221\n    var matcher, property;                                                                                         // 222\n    if (_.isString(propertyOrMatcherOrFunction)) {                                                                 // 223\n      property = propertyOrMatcherOrFunction;                                                                      // 224\n      propertyOrMatcherOrFunction = (function(_this) {                                                             // 225\n        return function(child, parent) {                                                                           // 226\n          return property in child;                                                                                // 227\n        };                                                                                                         // 228\n      })(this);                                                                                                    // 229\n    } else if (!_.isFunction(propertyOrMatcherOrFunction)) {                                                       // 230\n      assert(_.isObject(propertyOrMatcherOrFunction));                                                             // 231\n      matcher = propertyOrMatcherOrFunction;                                                                       // 232\n      propertyOrMatcherOrFunction = (function(_this) {                                                             // 233\n        return function(child, parent) {                                                                           // 234\n          var value;                                                                                               // 235\n          for (property in matcher) {                                                                              // 236\n            value = matcher[property];                                                                             // 237\n            if (!(property in child)) {                                                                            // 238\n              return false;                                                                                        // 239\n            }                                                                                                      // 240\n            if (_.isFunction(child[property])) {                                                                   // 241\n              if (child[property]() !== value) {                                                                   // 242\n                return false;                                                                                      // 243\n              }                                                                                                    // 244\n            } else {                                                                                               // 245\n              if (child[property] !== value) {                                                                     // 246\n                return false;                                                                                      // 247\n              }                                                                                                    // 248\n            }                                                                                                      // 249\n          }                                                                                                        // 250\n          return true;                                                                                             // 251\n        };                                                                                                         // 252\n      })(this);                                                                                                    // 253\n    }                                                                                                              // 254\n    return isolateValue((function(_this) {                                                                         // 255\n      return function() {                                                                                          // 256\n        var child, _i, _len, _ref, _results;                                                                       // 257\n        _ref = _this.componentChildren();                                                                          // 258\n        _results = [];                                                                                             // 259\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                        // 260\n          child = _ref[_i];                                                                                        // 261\n          if (propertyOrMatcherOrFunction.call(_this, child, _this)) {                                             // 262\n            _results.push(child);                                                                                  // 263\n          }                                                                                                        // 264\n        }                                                                                                          // 265\n        return _results;                                                                                           // 266\n      };                                                                                                           // 267\n    })(this));                                                                                                     // 268\n  };                                                                                                               // 269\n                                                                                                                   // 270\n  BaseComponent.prototype.addComponentChild = function(componentChild) {                                           // 271\n    var _base;                                                                                                     // 272\n    if (this._componentInternals == null) {                                                                        // 273\n      this._componentInternals = {};                                                                               // 274\n    }                                                                                                              // 275\n    if ((_base = this._componentInternals).componentChildren == null) {                                            // 276\n      _base.componentChildren = new ReactiveVar([], arrayReferenceEquals);                                         // 277\n    }                                                                                                              // 278\n    this._componentInternals.componentChildren.set(Tracker.nonreactive((function(_this) {                          // 279\n      return function() {                                                                                          // 280\n        return _this._componentInternals.componentChildren.get().concat([componentChild]);                         // 281\n      };                                                                                                           // 282\n    })(this)));                                                                                                    // 283\n    return this;                                                                                                   // 284\n  };                                                                                                               // 285\n                                                                                                                   // 286\n  BaseComponent.prototype.removeComponentChild = function(componentChild) {                                        // 287\n    var _base;                                                                                                     // 288\n    if (this._componentInternals == null) {                                                                        // 289\n      this._componentInternals = {};                                                                               // 290\n    }                                                                                                              // 291\n    if ((_base = this._componentInternals).componentChildren == null) {                                            // 292\n      _base.componentChildren = new ReactiveVar([], arrayReferenceEquals);                                         // 293\n    }                                                                                                              // 294\n    this._componentInternals.componentChildren.set(Tracker.nonreactive((function(_this) {                          // 295\n      return function() {                                                                                          // 296\n        return _.without(_this._componentInternals.componentChildren.get(), componentChild);                       // 297\n      };                                                                                                           // 298\n    })(this)));                                                                                                    // 299\n    return this;                                                                                                   // 300\n  };                                                                                                               // 301\n                                                                                                                   // 302\n  BaseComponent.prototype.componentParent = function(componentParent) {                                            // 303\n    var _base;                                                                                                     // 304\n    if (this._componentInternals == null) {                                                                        // 305\n      this._componentInternals = {};                                                                               // 306\n    }                                                                                                              // 307\n    if ((_base = this._componentInternals).componentParent == null) {                                              // 308\n      _base.componentParent = new ReactiveVar(null, function(a, b) {                                               // 309\n        return a === b;                                                                                            // 310\n      });                                                                                                          // 311\n    }                                                                                                              // 312\n    if (!_.isUndefined(componentParent)) {                                                                         // 313\n      this._componentInternals.componentParent.set(componentParent);                                               // 314\n      return this;                                                                                                 // 315\n    }                                                                                                              // 316\n    return this._componentInternals.componentParent.get();                                                         // 317\n  };                                                                                                               // 318\n                                                                                                                   // 319\n  BaseComponent.renderComponent = function(componentParent) {                                                      // 320\n    throw new Error(\"Not implemented\");                                                                            // 321\n  };                                                                                                               // 322\n                                                                                                                   // 323\n  BaseComponent.prototype.renderComponent = function(componentParent) {                                            // 324\n    throw new Error(\"Not implemented\");                                                                            // 325\n  };                                                                                                               // 326\n                                                                                                                   // 327\n  BaseComponent.extendComponent = function(constructor, methods) {                                                 // 328\n    var currentClass, property, value, _ref;                                                                       // 329\n    currentClass = this;                                                                                           // 330\n    if (!_.isFunction(constructor)) {                                                                              // 331\n      methods = constructor;                                                                                       // 332\n      constructor = function() {                                                                                   // 333\n        return constructor.__super__.constructor.apply(this, arguments);                                           // 334\n      };                                                                                                           // 335\n    }                                                                                                              // 336\n    constructor.prototype = Object.create(currentClass.prototype);                                                 // 337\n    constructor.prototype.constructor = constructor;                                                               // 338\n    for (property in currentClass) {                                                                               // 339\n      if (!__hasProp.call(currentClass, property)) continue;                                                       // 340\n      value = currentClass[property];                                                                              // 341\n      constructor[property] = value;                                                                               // 342\n    }                                                                                                              // 343\n    constructor.__super__ = currentClass.prototype;                                                                // 344\n    _ref = methods || {};                                                                                          // 345\n    for (property in _ref) {                                                                                       // 346\n      if (!__hasProp.call(_ref, property)) continue;                                                               // 347\n      value = _ref[property];                                                                                      // 348\n      constructor.prototype[property] = value;                                                                     // 349\n    }                                                                                                              // 350\n    return constructor;                                                                                            // 351\n  };                                                                                                               // 352\n                                                                                                                   // 353\n  return BaseComponent;                                                                                            // 354\n                                                                                                                   // 355\n})();                                                                                                              // 356\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   // 358\n}).call(this);                                                                                                     // 359\n                                                                                                                   // 360\n                                                                                                                   // 361\n                                                                                                                   // 362\n                                                                                                                   // 363\n                                                                                                                   // 364\n                                                                                                                   // 365\n(function () {                                                                                                     // 366\n                                                                                                                   // 367\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/peerlibrary:base-component/debug.coffee.js                                                          //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n                                                                                                                   // 375\n                                                                                                                   // 376\nBaseComponentDebug = (function() {                                                                                 // 377\n  function BaseComponentDebug() {}                                                                                 // 378\n                                                                                                                   // 379\n  BaseComponentDebug.startComponent = function(component) {                                                        // 380\n    var name;                                                                                                      // 381\n    name = component.componentName() || 'unnamed';                                                                 // 382\n    console.group(name);                                                                                           // 383\n    return console.log('%o', component);                                                                           // 384\n  };                                                                                                               // 385\n                                                                                                                   // 386\n  BaseComponentDebug.endComponent = function(component) {                                                          // 387\n    return console.groupEnd();                                                                                     // 388\n  };                                                                                                               // 389\n                                                                                                                   // 390\n  BaseComponentDebug.startMarkedComponent = function(component) {                                                  // 391\n    var name;                                                                                                      // 392\n    name = component.componentName() || 'unnamed';                                                                 // 393\n    console.group('%c%s', 'text-decoration: underline', name);                                                     // 394\n    return console.log('%o', component);                                                                           // 395\n  };                                                                                                               // 396\n                                                                                                                   // 397\n  BaseComponentDebug.endMarkedComponent = function(component) {                                                    // 398\n    return this.endComponent(component);                                                                           // 399\n  };                                                                                                               // 400\n                                                                                                                   // 401\n  BaseComponentDebug.dumpComponentSubtree = function(rootComponent, _markComponent) {                              // 402\n    var child, marked, _i, _len, _ref;                                                                             // 403\n    if (_markComponent == null) {                                                                                  // 404\n      _markComponent = (function() {});                                                                            // 405\n    }                                                                                                              // 406\n    if (!rootComponent) {                                                                                          // 407\n      return;                                                                                                      // 408\n    }                                                                                                              // 409\n    marked = _markComponent(rootComponent);                                                                        // 410\n    if (marked) {                                                                                                  // 411\n      this.startMarkedComponent(rootComponent);                                                                    // 412\n    } else {                                                                                                       // 413\n      this.startComponent(rootComponent);                                                                          // 414\n    }                                                                                                              // 415\n    _ref = rootComponent.componentChildren();                                                                      // 416\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                            // 417\n      child = _ref[_i];                                                                                            // 418\n      this.dumpComponentSubtree(child, _markComponent);                                                            // 419\n    }                                                                                                              // 420\n    if (marked) {                                                                                                  // 421\n      this.endMarkedComponent(rootComponent);                                                                      // 422\n    } else {                                                                                                       // 423\n      this.endComponent(rootComponent);                                                                            // 424\n    }                                                                                                              // 425\n  };                                                                                                               // 426\n                                                                                                                   // 427\n  BaseComponentDebug.componentRoot = function(component) {                                                         // 428\n    var componentParent;                                                                                           // 429\n    while (componentParent = component.componentParent()) {                                                        // 430\n      component = componentParent;                                                                                 // 431\n    }                                                                                                              // 432\n    return component;                                                                                              // 433\n  };                                                                                                               // 434\n                                                                                                                   // 435\n  BaseComponentDebug.dumpComponentTree = function(component) {                                                     // 436\n    if (!component) {                                                                                              // 437\n      return;                                                                                                      // 438\n    }                                                                                                              // 439\n    return this.dumpComponentSubtree(this.componentRoot(component), function(c) {                                  // 440\n      return c === component;                                                                                      // 441\n    });                                                                                                            // 442\n  };                                                                                                               // 443\n                                                                                                                   // 444\n  return BaseComponentDebug;                                                                                       // 445\n                                                                                                                   // 446\n})();                                                                                                              // 447\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   // 449\n}).call(this);                                                                                                     // 450\n                                                                                                                   // 451\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['peerlibrary:base-component'] = {\n  BaseComponent: BaseComponent,\n  BaseComponentDebug: BaseComponentDebug\n};\n\n})();\n","servePath":"/packages/peerlibrary_base-component.js","sourceMap":{"version":3,"sources":["/packages/peerlibrary_base-component/packages/peerlibrary_base-component.js"],"names":[],"mappingsyH","file":"/packages/peerlibrary_base-component.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/peerlibrary:base-component/lib.coffee.js                                                            //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ComponentsNamespace, arrayReferenceEquals, createNamespace, getComponent, getNamespace, getPathAndName, isolateValue, setComponent,               \n  __hasProp = {}.hasOwnProperty;\n\narrayReferenceEquals = function(a, b) {\n  var i, _i, _ref;\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (i = _i = 0, _ref = a.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nisolateValue = function(fn) {\n  var dependency, lastValue;\n  if (!Tracker.active) {\n    return fn();\n  }\n  lastValue = null;\n  dependency = new Tracker.Dependency();\n  Tracker.autorun(function(computation) {\n    var value;\n    value = fn();\n    if (computation.firstRun) {\n      return lastValue = value;\n    } else {\n      if (!arrayReferenceEquals(value, lastValue)) {\n        return dependency.changed();\n      }\n    }\n  });\n  dependency.depend();\n  return lastValue;\n};\n\nComponentsNamespace = (function() {\n  function ComponentsNamespace() {}\n\n  ComponentsNamespace.COMPONENTS_FIELD = '';\n\n  return ComponentsNamespace;\n\n})();\n\ngetPathAndName = function(name) {\n  var path;\n  assert(name);\n  path = name.split('.');\n  name = path.pop();\n  assert(name);\n  return {\n    path: path,\n    name: name\n  };\n};\n\ngetNamespace = function(components, path) {\n  var match, segment;\n  assert(_.isObject(components));\n  assert(_.isArray(path));\n  match = components;\n  while ((segment = path.shift()) != null) {\n    match = match[segment];\n    if (!_.isObject(match)) {\n      return null;\n    }\n  }\n  if (!_.isObject(match)) {\n    return null;\n  }\n  return match || null;\n};\n\ncreateNamespace = function(components, path) {\n  var match, segment;\n  assert(_.isObject(components));\n  assert(_.isArray(path));\n  match = components;\n  while ((segment = path.shift()) != null) {\n    if (!(segment in match)) {\n      match[segment] = new components.constructor();\n    }\n    match = match[segment];\n    assert(_.isObject(match));\n  }\n  assert(_.isObject(match));\n  return match;\n};\n\ngetComponent = function(components, name) {\n  var namespace, path, _ref, _ref1;\n  assert(_.isObject(components));\n  if (!name) {\n    return null;\n  }\n  _ref = getPathAndName(name), path = _ref.path, name = _ref.name;\n  namespace = getNamespace(components, path);\n  if (!namespace) {\n    return null;\n  }\n  return ((_ref1 = namespace[components.constructor.COMPONENTS_FIELD]) != null ? _ref1[name] : void 0) || null;\n};\n\nsetComponent = function(components, name, component) {\n  var namespace, path, _name, _ref;\n  assert(_.isObject(components));\n  assert(name);\n  assert(component);\n  _ref = getPathAndName(name), path = _ref.path, name = _ref.name;\n  namespace = createNamespace(components, path);\n  if (namespace[_name = components.constructor.COMPONENTS_FIELD] == null) {\n    namespace[_name] = new components.constructor();\n  }\n  assert(!(name in namespace[components.constructor.COMPONENTS_FIELD]));\n  return namespace[components.constructor.COMPONENTS_FIELD][name] = component;\n};\n\nBaseComponent = (function() {\n  function BaseComponent() {}\n\n  BaseComponent.components = new ComponentsNamespace();\n\n  BaseComponent.register = function(componentName, componentClass) {\n    if (!componentName) {\n      throw new Error(\"Component name is required for registration.\");\n    }\n    if (componentClass == null) {\n      componentClass = this;\n    }\n    if (getComponent(this.components, componentName)) {\n      throw new Error(\"Component '\" + componentName + \"' already registered.\");\n    }\n    if (componentClass.componentName() && componentClass.componentName() !== componentName && getComponent(this.components, componentClass.componentName()) === componentClass) {\n      throw new Error(\"Component '\" + componentName + \"' already registered under the name '\" + (componentClass.componentName()) + \"'.\");\n    }\n    componentClass.componentName(componentName);\n    assert.equal(componentClass.componentName(), componentName);\n    setComponent(this.components, componentName, componentClass);\n    return this;\n  };\n\n  BaseComponent.getComponent = function(componentsNamespace, componentName) {\n    if (!componentName) {\n      componentName = componentsNamespace;\n      componentsNamespace = this.components;\n    }\n    if (!componentName) {\n      return null;\n    }\n    if (!_.isString(componentName)) {\n      throw new Error(\"Component name '\" + componentName + \"' is not a string.\");\n    }\n    return getComponent(componentsNamespace, componentName);\n  };\n\n  BaseComponent.componentName = function(componentName) {\n    if (componentName) {\n      this._componentName = componentName;\n      return this;\n    }\n    return this._componentName || null;\n  };\n\n  BaseComponent.prototype.componentName = function() {\n    return this.constructor.componentName();\n  };\n\n  BaseComponent.prototype.componentChildren = function(nameOrComponent) {\n    var child, _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).componentChildren == null) {\n      _base.componentChildren = new ReactiveVar([], arrayReferenceEquals);\n    }\n    if (!nameOrComponent) {\n      return (function() {\n        var _i, _len, _ref, _results;\n        _ref = this._componentInternals.componentChildren.get();\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          _results.push(child);\n        }\n        return _results;\n      }).call(this);\n    }\n    if (_.isString(nameOrComponent)) {\n      return this.componentChildrenWith((function(_this) {\n        return function(child, parent) {\n          return child.componentName() === nameOrComponent;\n        };\n      })(this));\n    } else {\n      return this.componentChildrenWith((function(_this) {\n        return function(child, parent) {\n          if (child.constructor === nameOrComponent) {\n            return true;\n          }\n          if (child === nameOrComponent) {\n            return true;\n          }\n          return false;\n        };\n      })(this));\n    }\n  };\n\n  BaseComponent.prototype.componentChildrenWith = function(propertyOrMatcherOrFunction) {\n    var matcher, property;\n    if (_.isString(propertyOrMatcherOrFunction)) {\n      property = propertyOrMatcherOrFunction;\n      propertyOrMatcherOrFunction = (function(_this) {\n        return function(child, parent) {\n          return property in child;\n        };\n      })(this);\n    } else if (!_.isFunction(propertyOrMatcherOrFunction)) {\n      assert(_.isObject(propertyOrMatcherOrFunction));\n      matcher = propertyOrMatcherOrFunction;\n      propertyOrMatcherOrFunction = (function(_this) {\n        return function(child, parent) {\n          var value;\n          for (property in matcher) {\n            value = matcher[property];\n            if (!(property in child)) {\n              return false;\n            }\n            if (_.isFunction(child[property])) {\n              if (child[property]() !== value) {\n                return false;\n              }\n            } else {\n              if (child[property] !== value) {\n                return false;\n              }\n            }\n          }\n          return true;\n        };\n      })(this);\n    }\n    return isolateValue((function(_this) {\n      return function() {\n        var child, _i, _len, _ref, _results;\n        _ref = _this.componentChildren();\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (propertyOrMatcherOrFunction.call(_this, child, _this)) {\n            _results.push(child);\n          }\n        }\n        return _results;\n      };\n    })(this));\n  };\n\n  BaseComponent.prototype.addComponentChild = function(componentChild) {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).componentChildren == null) {\n      _base.componentChildren = new ReactiveVar([], arrayReferenceEquals);\n    }\n    this._componentInternals.componentChildren.set(Tracker.nonreactive((function(_this) {\n      return function() {\n        return _this._componentInternals.componentChildren.get().concat([componentChild]);\n      };\n    })(this)));\n    return this;\n  };\n\n  BaseComponent.prototype.removeComponentChild = function(componentChild) {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).componentChildren == null) {\n      _base.componentChildren = new ReactiveVar([], arrayReferenceEquals);\n    }\n    this._componentInternals.componentChildren.set(Tracker.nonreactive((function(_this) {\n      return function() {\n        return _.without(_this._componentInternals.componentChildren.get(), componentChild);\n      };\n    })(this)));\n    return this;\n  };\n\n  BaseComponent.prototype.componentParent = function(componentParent) {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).componentParent == null) {\n      _base.componentParent = new ReactiveVar(null, function(a, b) {\n        return a === b;\n      });\n    }\n    if (!_.isUndefined(componentParent)) {\n      this._componentInternals.componentParent.set(componentParent);\n      return this;\n    }\n    return this._componentInternals.componentParent.get();\n  };\n\n  BaseComponent.renderComponent = function(componentParent) {\n    throw new Error(\"Not implemented\");\n  };\n\n  BaseComponent.prototype.renderComponent = function(componentParent) {\n    throw new Error(\"Not implemented\");\n  };\n\n  BaseComponent.extendComponent = function(constructor, methods) {\n    var currentClass, property, value, _ref;\n    currentClass = this;\n    if (!_.isFunction(constructor)) {\n      methods = constructor;\n      constructor = function() {\n        return constructor.__super__.constructor.apply(this, arguments);\n      };\n    }\n    constructor.prototype = Object.create(currentClass.prototype);\n    constructor.prototype.constructor = constructor;\n    for (property in currentClass) {\n      if (!__hasProp.call(currentClass, property)) continue;\n      value = currentClass[property];\n      constructor[property] = value;\n    }\n    constructor.__super__ = currentClass.prototype;\n    _ref = methods || {};\n    for (property in _ref) {\n      if (!__hasProp.call(_ref, property)) continue;\n      value = _ref[property];\n      constructor.prototype[property] = value;\n    }\n    return constructor;\n  };\n\n  return BaseComponent;\n\n})();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/peerlibrary:base-component/debug.coffee.js                                                          //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n                       \n\nBaseComponentDebug = (function() {\n  function BaseComponentDebug() {}\n\n  BaseComponentDebug.startComponent = function(component) {\n    var name;\n    name = component.componentName() || 'unnamed';\n    console.group(name);\n    return console.log('%o', component);\n  };\n\n  BaseComponentDebug.endComponent = function(component) {\n    return console.groupEnd();\n  };\n\n  BaseComponentDebug.startMarkedComponent = function(component) {\n    var name;\n    name = component.componentName() || 'unnamed';\n    console.group('%c%s', 'text-decoration: underline', name);\n    return console.log('%o', component);\n  };\n\n  BaseComponentDebug.endMarkedComponent = function(component) {\n    return this.endComponent(component);\n  };\n\n  BaseComponentDebug.dumpComponentSubtree = function(rootComponent, _markComponent) {\n    var child, marked, _i, _len, _ref;\n    if (_markComponent == null) {\n      _markComponent = (function() {});\n    }\n    if (!rootComponent) {\n      return;\n    }\n    marked = _markComponent(rootComponent);\n    if (marked) {\n      this.startMarkedComponent(rootComponent);\n    } else {\n      this.startComponent(rootComponent);\n    }\n    _ref = rootComponent.componentChildren();\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      child = _ref[_i];\n      this.dumpComponentSubtree(child, _markComponent);\n    }\n    if (marked) {\n      this.endMarkedComponent(rootComponent);\n    } else {\n      this.endComponent(rootComponent);\n    }\n  };\n\n  BaseComponentDebug.componentRoot = function(component) {\n    var componentParent;\n    while (componentParent = component.componentParent()) {\n      component = componentParent;\n    }\n    return component;\n  };\n\n  BaseComponentDebug.dumpComponentTree = function(component) {\n    if (!component) {\n      return;\n    }\n    return this.dumpComponentSubtree(this.componentRoot(component), function(c) {\n      return c === component;\n    });\n  };\n\n  return BaseComponentDebug;\n\n})();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]