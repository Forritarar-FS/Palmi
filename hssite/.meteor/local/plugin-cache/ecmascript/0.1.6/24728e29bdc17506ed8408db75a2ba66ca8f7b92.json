{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":["inherits","create-class","class-call-check"]},"ignored":false,"code":"/**\n * The PaginationComponent lets you paginate through documents.\n *\n * @type {PaginationComponent}\n */\nEasySearch.PaginationComponent = (function (_SingleIndexComponent) {\n  babelHelpers.inherits(PaginationComponent, _SingleIndexComponent);\n\n  function PaginationComponent() {\n    babelHelpers.classCallCheck(this, PaginationComponent);\n\n    _SingleIndexComponent.apply(this, arguments);\n  }\n\n  /**\n   * Setup component on created.\n   */\n\n  PaginationComponent.prototype.onCreated = (function () {\n    function onCreated() {\n      _SingleIndexComponent.prototype.onCreated.call(this);\n      this.dict.set('currentPage', 1);\n    }\n\n    return onCreated;\n  })();\n\n  /**\n   * Get pages for displaying the pagination.\n   *\n   * @returns {Array}\n   */\n\n  PaginationComponent.prototype.page = (function () {\n    function page() {\n      var totalCount = this.dict.get('count'),\n          pageCount = this.dict.get('limit'),\n          currentPage = this.dict.get('currentPage'),\n          maxPages = this.options.maxPages,\n          prevAndNext = this.options.prevAndNext;\n\n      if (!pageCount || !totalCount) {\n        return [];\n      }\n\n      return this.options.transformPages(EasySearch._getPagesForPagination({ totalCount: totalCount, pageCount: pageCount, currentPage: currentPage, maxPages: maxPages, prevAndNext: prevAndNext }));\n    }\n\n    return page;\n  })();\n\n  PaginationComponent.prototype.customRenderPagination = (function () {\n    function customRenderPagination() {\n      return this.getData().renderPagination;\n    }\n\n    return customRenderPagination;\n  })();\n\n  /**\n   * Paginate documents.\n   */\n\n  PaginationComponent.prototype.paginate = (function () {\n    function paginate(page) {\n      check(page, Number);\n\n      this.index.getComponentMethods(this.name).paginate(page);\n    }\n\n    return paginate;\n  })();\n\n  /**\n   * Return page classes.\n   *\n   * @param {Object} data Data for the current page\n   *\n   * @returns {String}\n   */\n\n  PaginationComponent.prototype.pageClasses = (function () {\n    function pageClasses(data) {\n      return ((data.disabled ? 'disabled' : '') + ' ' + (data.current ? 'current' : '')).trim();\n    }\n\n    return pageClasses;\n  })();\n\n  /**\n   * Return true if there are more documents to load.\n   *\n   * @returns {Boolean}\n   */\n\n  PaginationComponent.prototype.moreDocuments = (function () {\n    function moreDocuments() {\n      return this.index.getComponentMethods(this.name).hasMoreDocuments();\n    }\n\n    return moreDocuments;\n  })();\n\n  /**\n   * Event map.\n   *\n   * @returns {Object}\n   */\n\n  PaginationComponent.prototype.events = (function () {\n    function events() {\n      return [{\n        'click .page:not(.disabled)': function (e) {\n          var currentPage = this.currentData().page;\n          this.dict.set('currentPage', currentPage);\n          this.paginate(currentPage);\n\n          e.preventDefault();\n        }\n      }];\n    }\n\n    return events;\n  })();\n\n  /**\n   * Return the default options.\n   *\n   * @returns {Object}\n   */\n  babelHelpers.createClass(PaginationComponent, [{\n    key: 'defaultOptions',\n    get: function () {\n      return {\n        prevAndNext: true,\n        maxPages: null,\n        transformPages: function (pages) {\n          return pages;\n        }\n      };\n    }\n  }]);\n  return PaginationComponent;\n})(SingleIndexComponent);\n\nEasySearch.PaginationComponent.register('EasySearch.Pagination');","ast":null,"map":{"version":3,"sources":["/lib/pagination/pagination.js"],"names":[],"mappings":";;;;;AAKA,UAAU,CAAC,mBAAmB;wBAAS,mBAAmB;;WAAnB,mBAAmB;sCAAnB,mBAAmB;;;;;;;;;AAAnB,qBAAmB,WAIxD,SAAS;AAAA,yBAAG;AACV,sCAAM,SAAS,KAAA,MAAE,CAAC;AAClB,UAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;KACjC;;;;;;;;;;;AAPoC,qBAAmB,WAcxD,IAAI;AAAA,oBAAG;AACL,UAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;UACrC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;UAClC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC;UAC1C,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ;UAChC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;;AAEzC,UAAI,CAAC,SAAS,IAAI,CAAC,UAAU,EAAE;AAC7B,eAAO,EAAE,CAAC;OACX;;AAED,aAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAChC,UAAU,CAAC,sBAAsB,CAAC,EAAE,UAAU,EAAV,UAAU,EAAE,SAAS,EAAT,SAAS,EAAE,WAAW,EAAX,WAAW,EAAE,QAAQ,EAAR,QAAQ,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CACjG,CAAC;KACH;;;;;AA5BoC,qBAAmB,WA8BxD,sBAAsB;AAAA,sCAAG;AACvB,aAAO,IAAI,CAAC,OAAO,EAAE,CAAC,gBAAgB,CAAC;KACxC;;;;;;;;;AAhCoC,qBAAmB,WAqCxD,QAAQ;AAAA,sBAAC,IAAI,EAAE;AACb,WAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;AAEpB,UAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC1D;;;;;;;;;;;;;AAzCoC,qBAAmB,WAkDxD,WAAW;AAAA,yBAAC,IAAI,EAAE;AAChB,aAAO,EAAI,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,CAAA,UAAO,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,CAAA,EAAK,IAAI,EAAE,CAAC;KAC3F;;;;;;;;;;;AApDoC,qBAAmB,WA2DxD,aAAa;AAAA,6BAAG;AACd,aAAO,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;KACrE;;;;;;;;;;;AA7DoC,qBAAmB,WAoExD,MAAM;AAAA,sBAAG;AACP,aAAO,CAAC;AACN,oCAA4B,EAAG,UAAU,CAAC,EAAE;AAC1C,cAAI,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC;AAC1C,cAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAC1C,cAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;;AAE3B,WAAC,CAAC,cAAc,EAAE,CAAC;SACpB;OACF,CAAC,CAAC;KACJ;;;;;;;;;;2BA9EoC,mBAAmB;;SAqFtC,YAAG;AACnB,aAAO;AACL,mBAAW,EAAE,IAAI;AACjB,gBAAQ,EAAE,IAAI;AACd,sBAAc,EAAE,UAAC,KAAK;iBAAK,KAAK;SAAA;OACjC,CAAC;KACH;;SA3FoC,mBAAmB;GAAS,oBAAoB,CA4FtF,CAAC;;AAEF,UAAU,CAAC,mBAAmB,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC","file":"/lib/pagination/pagination.js.map","sourcesContent":["/**\n * The PaginationComponent lets you paginate through documents.\n *\n * @type {PaginationComponent}\n */\nEasySearch.PaginationComponent = class PaginationComponent extends SingleIndexComponent {\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    super.onCreated();\n    this.dict.set('currentPage', 1);\n  }\n\n  /**\n   * Get pages for displaying the pagination.\n   *\n   * @returns {Array}\n   */\n  page() {\n    let totalCount = this.dict.get('count'),\n      pageCount = this.dict.get('limit'),\n      currentPage = this.dict.get('currentPage'),\n      maxPages = this.options.maxPages,\n      prevAndNext = this.options.prevAndNext;\n\n    if (!pageCount || !totalCount) {\n      return [];\n    }\n\n    return this.options.transformPages(\n      EasySearch._getPagesForPagination({ totalCount, pageCount, currentPage, maxPages, prevAndNext })\n    );\n  }\n\n  customRenderPagination() {\n    return this.getData().renderPagination;\n  }\n\n  /**\n   * Paginate documents.\n   */\n  paginate(page) {\n    check(page, Number);\n\n    this.index.getComponentMethods(this.name).paginate(page);\n  }\n\n  /**\n   * Return page classes.\n   *\n   * @param {Object} data Data for the current page\n   *\n   * @returns {String}\n   */\n  pageClasses(data) {\n    return `${(data.disabled ? 'disabled' : '' )} ${(data.current ? 'current' : '' )}`.trim();\n  }\n\n  /**\n   * Return true if there are more documents to load.\n   *\n   * @returns {Boolean}\n   */\n  moreDocuments() {\n    return this.index.getComponentMethods(this.name).hasMoreDocuments();\n  }\n\n  /**\n   * Event map.\n   *\n   * @returns {Object}\n   */\n  events() {\n    return [{\n      'click .page:not(.disabled)' : function (e) {\n        let currentPage = this.currentData().page;\n        this.dict.set('currentPage', currentPage);\n        this.paginate(currentPage);\n\n        e.preventDefault();\n      }\n    }];\n  }\n\n  /**\n   * Return the default options.\n   *\n   * @returns {Object}\n   */\n  get defaultOptions() {\n    return {\n      prevAndNext: true,\n      maxPages: null,\n      transformPages: (pages) => pages\n    };\n  }\n};\n\nEasySearch.PaginationComponent.register('EasySearch.Pagination');\n"]},"hash":"24728e29bdc17506ed8408db75a2ba66ca8f7b92"}
