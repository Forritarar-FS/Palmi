{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":["inherits","create-class","class-call-check"]},"ignored":false,"code":"/**\n * The SingleIndexComponent holds logic for components that only can use one index.\n *\n * @type {SingleIndexComponent}\n */\nSingleIndexComponent = (function (_BaseComponent) {\n  babelHelpers.inherits(SingleIndexComponent, _BaseComponent);\n\n  function SingleIndexComponent() {\n    babelHelpers.classCallCheck(this, SingleIndexComponent);\n\n    _BaseComponent.apply(this, arguments);\n  }\n\n  /**\n   * Setup component on created.\n   */\n\n  SingleIndexComponent.prototype.onCreated = (function () {\n    function onCreated() {\n      _BaseComponent.prototype.onCreated.call(this);\n\n      if (this.indexes.length > 1) {\n        throw new Meteor.Error('only-single-index', 'Can only specify one index');\n      }\n    }\n\n    return onCreated;\n  })();\n\n  /**\n   * Return the index\n   *\n   * @returns {Index}\n   */\n  babelHelpers.createClass(SingleIndexComponent, [{\n    key: 'index',\n    get: function () {\n      return _.first(this.indexes);\n    }\n\n    /**\n     * Return the dictionary.\n     *\n     * @returns {Object}\n     */\n  }, {\n    key: 'dict',\n    get: function () {\n      return _.first(this.dicts);\n    }\n  }]);\n  return SingleIndexComponent;\n})(BaseComponent);\n\nEasySearch.SingleIndexComponent = SingleIndexComponent;","ast":null,"map":{"version":3,"sources":["/lib/single-index.js"],"names":[],"mappings":";;;;;AAKA,oBAAoB;wBAAS,oBAAoB;;WAApB,oBAAoB;sCAApB,oBAAoB;;;;;;;;;AAApB,sBAAoB,WAI/C,SAAS;AAAA,yBAAG;AACV,+BAAM,SAAS,KAAA,MAAE,CAAC;;AAElB,UAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3B,cAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,4BAA4B,CAAC,CAAC;OAC3E;KACF;;;;;;;;;;2BAV0B,oBAAoB;;SAiBtC,YAAG;AACV,aAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC9B;;;;;;;;;SAOO,YAAG;AACT,aAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;;SA5B0B,oBAAoB;GAAS,aAAa,CA6BtE,CAAC;;AAEF,UAAU,CAAC,oBAAoB,GAAG,oBAAoB,CAAC","file":"/lib/single-index.js.map","sourcesContent":["/**\n * The SingleIndexComponent holds logic for components that only can use one index.\n *\n * @type {SingleIndexComponent}\n */\nSingleIndexComponent = class SingleIndexComponent extends BaseComponent {\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    super.onCreated();\n\n    if (this.indexes.length > 1) {\n      throw new Meteor.Error('only-single-index', 'Can only specify one index');\n    }\n  }\n\n  /**\n   * Return the index\n   *\n   * @returns {Index}\n   */\n  get index() {\n    return _.first(this.indexes);\n  }\n\n  /**\n   * Return the dictionary.\n   *\n   * @returns {Object}\n   */\n  get dict() {\n    return _.first(this.dicts);\n  }\n};\n\nEasySearch.SingleIndexComponent = SingleIndexComponent;\n"]},"hash":"d7e121127394c1a6b0a5ce689435e0a17f3da90a"}
